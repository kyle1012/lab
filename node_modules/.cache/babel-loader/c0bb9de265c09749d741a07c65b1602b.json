{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      users: []\n    };\n  },\n  methods: {\n    getTableHeaders() {\n      return [{\n        sortable: false,\n        text: \"번호\",\n        value: 'id',\n        class: 'blue lighten-5',\n        align: 'center'\n      }, {\n        sortable: false,\n        text: \"이름\",\n        value: 'name',\n        class: 'blue lighten-5',\n        align: 'center'\n      }];\n    },\n    getTableItems() {\n      let mockUsers = this.getMockUsers();\n      for (var value of mockUsers) {\n        this.users.push({\n          id: value.id,\n          name: value.name\n        });\n      }\n    },\n    getMockUsers() {\n      // 서버가 존재하지않아 mockUser를 하드코딩합니다.\n      return [{\n        id: 1,\n        name: \"James\"\n      }, {\n        id: 2,\n        name: \"Tom\"\n      }];\n    }\n  },\n  mounted() {\n    this.getTableItems();\n  }\n};","map":{"version":3,"mappings":";AAuBC,eAAe;EACfA,IAAI,GAAG;IACH,OAAO;MACLC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAe,GAAG;MAChB,OAAO,CACL;QACEC,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE;MACT,CAAC,EACD;QACEJ,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE;MACT,EACF;IACF,CAAC;IACDC,aAAa,GAAG;MACd,IAAIC,SAAQ,GAAI,IAAI,CAACC,YAAY,EAAC;MAClC,KAAK,IAAIL,KAAI,IAAKI,SAAS,EAAE;QACzB,IAAI,CAACT,KAAK,CAACW,IAAI,CAAC;UAACC,EAAE,EAAEP,KAAK,CAACO,EAAE;UAAEC,IAAI,EAAER,KAAK,CAACQ;QAAI,CAAC;MACpD;IACF,CAAC;IACDH,YAAY,GAAG;MACb;MACA,OAAO,CACL;QACEE,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACR,CAAC,EACD;QACED,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACR,EACF;IACF;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACN,aAAa,EAAC;EACrB;AACF","names":["data","users","methods","getTableHeaders","sortable","text","value","class","align","getTableItems","mockUsers","getMockUsers","push","id","name","mounted"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n  <v-container fluid style=\"width: 60%; margin-top: 5%\" tag=\"section\">\n     <div class=\"pa-5 black--text\">\n       <div class=\"text-h4 \">\n         <v-icon\n         large\n         >\n           mdi-account-multiple\n         </v-icon>\n         사용자목록\n       </div>\n       <div class=\"text-caption ml-1 mt-1\">\n       </div>\n     </div>\n       <v-data-table\n         :headers=\"getTableHeaders()\"\n         :items=\"users\"\n         :items-per-page=\"5\"\n       />\n   </v-container>\n </template>\n \n <script>\n export default {\n data() {\n     return {\n       users: [],\n     }\n   },\n   methods: {\n     getTableHeaders() {\n       return [\n         {\n           sortable: false,\n           text: \"번호\",\n           value: 'id',\n           class: 'blue lighten-5',\n           align: 'center'\n         },\n         {\n           sortable: false,\n           text: \"이름\",\n           value: 'name',\n           class: 'blue lighten-5',\n           align: 'center'\n         }\n       ]\n     },\n     getTableItems() {\n       let mockUsers = this.getMockUsers()\n       for (var value of mockUsers) {\n           this.users.push({id: value.id, name: value.name})\n       }\n     },\n     getMockUsers() {\n       // 서버가 존재하지않아 mockUser를 하드코딩합니다.\n       return [\n         {\n           id: 1,\n           name: \"James\"\n         },\n         {\n           id: 2,\n           name: \"Tom\"\n         }\n       ]\n     }\n   },\n   mounted() {\n     this.getTableItems()\n   },\n }\n </script>\n \n <style>\n \n </style>"]},"metadata":{},"sourceType":"module"}