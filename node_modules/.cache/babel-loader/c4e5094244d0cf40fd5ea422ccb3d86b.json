{"ast":null,"code":"import getFileNameAndExtension from './getFileNameAndExtension.js';\nimport mimeTypes from './mimeTypes.js';\nexport default function getFileType(file) {\n  var _getFileNameAndExtens;\n  if (file.type) return file.type;\n  const fileExtension = file.name ? (_getFileNameAndExtens = getFileNameAndExtension(file.name).extension) == null ? void 0 : _getFileNameAndExtens.toLowerCase() : null;\n  if (fileExtension && fileExtension in mimeTypes) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } // if all fails, fall back to a generic byte stream type\n\n  return 'application/octet-stream';\n}","map":{"version":3,"names":["getFileNameAndExtension","mimeTypes","getFileType","file","_getFileNameAndExtens","type","fileExtension","name","extension","toLowerCase"],"sources":["/lab/node_modules/@uppy/utils/lib/getFileType.js"],"sourcesContent":["import getFileNameAndExtension from './getFileNameAndExtension.js';\nimport mimeTypes from './mimeTypes.js';\nexport default function getFileType(file) {\n  var _getFileNameAndExtens;\n\n  if (file.type) return file.type;\n  const fileExtension = file.name ? (_getFileNameAndExtens = getFileNameAndExtension(file.name).extension) == null ? void 0 : _getFileNameAndExtens.toLowerCase() : null;\n\n  if (fileExtension && fileExtension in mimeTypes) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } // if all fails, fall back to a generic byte stream type\n\n\n  return 'application/octet-stream';\n}"],"mappings":"AAAA,OAAOA,uBAAuB,MAAM,8BAA8B;AAClE,OAAOC,SAAS,MAAM,gBAAgB;AACtC,eAAe,SAASC,WAAW,CAACC,IAAI,EAAE;EACxC,IAAIC,qBAAqB;EAEzB,IAAID,IAAI,CAACE,IAAI,EAAE,OAAOF,IAAI,CAACE,IAAI;EAC/B,MAAMC,aAAa,GAAGH,IAAI,CAACI,IAAI,GAAG,CAACH,qBAAqB,GAAGJ,uBAAuB,CAACG,IAAI,CAACI,IAAI,CAAC,CAACC,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,qBAAqB,CAACK,WAAW,EAAE,GAAG,IAAI;EAEtK,IAAIH,aAAa,IAAIA,aAAa,IAAIL,SAAS,EAAE;IAC/C;IACA,OAAOA,SAAS,CAACK,aAAa,CAAC;EACjC,CAAC,CAAC;;EAGF,OAAO,0BAA0B;AACnC"},"metadata":{},"sourceType":"module"}