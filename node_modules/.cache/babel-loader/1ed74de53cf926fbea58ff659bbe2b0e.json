{"ast":null,"code":"import { h, Component } from 'preact';\nimport classNames from 'classnames';\nimport { nanoid } from 'nanoid/non-secure';\nimport getFileTypeIcon from \"../../utils/getFileTypeIcon.js\";\nimport ignoreEvent from '../../utils/ignoreEvent.js';\nimport FilePreview from \"../FilePreview.js\";\nclass FileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.form = document.createElement('form');\n    this.updateMeta = (newVal, name) => {\n      this.setState(_ref => {\n        let {\n          formState\n        } = _ref;\n        return {\n          formState: {\n            ...formState,\n            [name]: newVal\n          }\n        };\n      });\n    };\n    this.handleSave = e => {\n      e.preventDefault();\n      const fileID = this.props.fileCardFor;\n      this.props.saveFileCard(this.state.formState, fileID);\n    };\n    this.handleCancel = () => {\n      const file = this.props.files[this.props.fileCardFor];\n      this.props.uppy.emit('file-editor:cancel', file);\n      this.props.toggleFileCard(false);\n    };\n    this.saveOnEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const file = this.props.files[this.props.fileCardFor];\n        this.props.saveFileCard(this.state.formState, file.id);\n      }\n    };\n    this.renderMetaFields = () => {\n      const metaFields = this.getMetaFields() || [];\n      const fieldCSSClasses = {\n        text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input'\n      };\n      return metaFields.map(field => {\n        const id = `uppy-Dashboard-FileCard-input-${field.id}`;\n        const required = this.props.requiredMetaFields.includes(field.id);\n        return h(\"fieldset\", {\n          key: field.id,\n          className: \"uppy-Dashboard-FileCard-fieldset\"\n        }, h(\"label\", {\n          className: \"uppy-Dashboard-FileCard-label\",\n          htmlFor: id\n        }, field.name), field.render !== undefined ? field.render({\n          value: this.state.formState[field.id],\n          onChange: newVal => this.updateMeta(newVal, field.id),\n          fieldCSSClasses,\n          required,\n          form: this.form.id\n        }, h) : h(\"input\", {\n          className: fieldCSSClasses.text,\n          id: id,\n          form: this.form.id,\n          type: field.type || 'text',\n          required: required,\n          value: this.state.formState[field.id],\n          placeholder: field.placeholder // If `form` attribute is not supported, we need to capture pressing Enter to avoid bubbling in case Uppy is\n          // embedded inside a <form>.\n          ,\n\n          onKeyUp: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyDown: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyPress: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onInput: ev => this.updateMeta(ev.target.value, field.id),\n          \"data-uppy-super-focusable\": true\n        }));\n      });\n    };\n    const _file = this.props.files[this.props.fileCardFor];\n    const _metaFields = this.getMetaFields() || [];\n    const storedMetaData = {};\n    _metaFields.forEach(field => {\n      storedMetaData[field.id] = _file.meta[field.id] || '';\n    });\n    this.state = {\n      formState: storedMetaData\n    };\n    this.form.id = nanoid();\n  } // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.\n\n  componentWillMount() {\n    // eslint-disable-line react/no-deprecated\n    this.form.addEventListener('submit', this.handleSave);\n    document.body.appendChild(this.form);\n  }\n  componentWillUnmount() {\n    this.form.removeEventListener('submit', this.handleSave);\n    document.body.removeChild(this.form);\n  }\n  getMetaFields() {\n    return typeof this.props.metaFields === 'function' ? this.props.metaFields(this.props.files[this.props.fileCardFor]) : this.props.metaFields;\n  }\n  render() {\n    const file = this.props.files[this.props.fileCardFor];\n    const showEditButton = this.props.canEditFile(file);\n    return h(\"div\", {\n      className: classNames('uppy-Dashboard-FileCard', this.props.className),\n      \"data-uppy-panelType\": \"FileCard\",\n      onDragOver: ignoreEvent,\n      onDragLeave: ignoreEvent,\n      onDrop: ignoreEvent,\n      onPaste: ignoreEvent\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-bar\"\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-title\",\n      role: \"heading\",\n      \"aria-level\": \"1\"\n    }, this.props.i18nArray('editing', {\n      file: h(\"span\", {\n        className: \"uppy-DashboardContent-titleFile\"\n      }, file.meta ? file.meta.name : file.name)\n    })), h(\"button\", {\n      className: \"uppy-DashboardContent-back\",\n      type: \"button\",\n      form: this.form.id,\n      title: this.props.i18n('finishEditingFile'),\n      onClick: this.handleCancel\n    }, this.props.i18n('cancel'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-inner\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-preview\",\n      style: {\n        backgroundColor: getFileTypeIcon(file.type).color\n      }\n    }, h(FilePreview, {\n      file: file\n    }), showEditButton && h(\"button\", {\n      type: \"button\",\n      className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n      onClick: event => {\n        // When opening the image editor we want to save any meta fields changes.\n        // Otherwise it's confusing for the user to click save in the editor,\n        // but the changes here are discarded. This bypasses validation,\n        // but we are okay with that.\n        this.handleSave(event);\n        this.props.openFileEditor(file);\n      },\n      form: this.form.id\n    }, this.props.i18n('editFile'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-info\"\n    }, this.renderMetaFields()), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-actions\"\n    }, h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\" // If `form` attribute is supported, we want a submit button to trigger the form validation.\n      // Otherwise, fallback to a classic button with a onClick event handler.\n      ,\n\n      type: 'form' in HTMLButtonElement.prototype ? 'submit' : 'button',\n      onClick: 'form' in HTMLButtonElement.prototype ? undefined : this.handleSave,\n      form: this.form.id\n    }, this.props.i18n('saveChanges')), h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      form: this.form.id\n    }, this.props.i18n('cancel')))));\n  }\n}\nexport default FileCard;","map":{"version":3,"names":["h","Component","classNames","nanoid","getFileTypeIcon","ignoreEvent","FilePreview","FileCard","constructor","props","form","document","createElement","updateMeta","newVal","name","setState","_ref","formState","handleSave","e","preventDefault","fileID","fileCardFor","saveFileCard","state","handleCancel","file","files","uppy","emit","toggleFileCard","saveOnEnter","ev","keyCode","stopPropagation","id","renderMetaFields","metaFields","getMetaFields","fieldCSSClasses","text","map","field","required","requiredMetaFields","includes","key","className","htmlFor","render","undefined","value","onChange","type","placeholder","onKeyUp","HTMLInputElement","prototype","onKeyDown","onKeyPress","onInput","target","_file","_metaFields","storedMetaData","forEach","meta","componentWillMount","addEventListener","body","appendChild","componentWillUnmount","removeEventListener","removeChild","showEditButton","canEditFile","onDragOver","onDragLeave","onDrop","onPaste","role","i18nArray","title","i18n","onClick","style","backgroundColor","color","event","openFileEditor","HTMLButtonElement"],"sources":["/lab/node_modules/@uppy/dashboard/lib/components/FileCard/index.js"],"sourcesContent":["import { h, Component } from 'preact';\nimport classNames from 'classnames';\nimport { nanoid } from 'nanoid/non-secure';\nimport getFileTypeIcon from \"../../utils/getFileTypeIcon.js\";\nimport ignoreEvent from '../../utils/ignoreEvent.js';\nimport FilePreview from \"../FilePreview.js\";\n\nclass FileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.form = document.createElement('form');\n\n    this.updateMeta = (newVal, name) => {\n      this.setState(_ref => {\n        let {\n          formState\n        } = _ref;\n        return {\n          formState: { ...formState,\n            [name]: newVal\n          }\n        };\n      });\n    };\n\n    this.handleSave = e => {\n      e.preventDefault();\n      const fileID = this.props.fileCardFor;\n      this.props.saveFileCard(this.state.formState, fileID);\n    };\n\n    this.handleCancel = () => {\n      const file = this.props.files[this.props.fileCardFor];\n      this.props.uppy.emit('file-editor:cancel', file);\n      this.props.toggleFileCard(false);\n    };\n\n    this.saveOnEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const file = this.props.files[this.props.fileCardFor];\n        this.props.saveFileCard(this.state.formState, file.id);\n      }\n    };\n\n    this.renderMetaFields = () => {\n      const metaFields = this.getMetaFields() || [];\n      const fieldCSSClasses = {\n        text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input'\n      };\n      return metaFields.map(field => {\n        const id = `uppy-Dashboard-FileCard-input-${field.id}`;\n        const required = this.props.requiredMetaFields.includes(field.id);\n        return h(\"fieldset\", {\n          key: field.id,\n          className: \"uppy-Dashboard-FileCard-fieldset\"\n        }, h(\"label\", {\n          className: \"uppy-Dashboard-FileCard-label\",\n          htmlFor: id\n        }, field.name), field.render !== undefined ? field.render({\n          value: this.state.formState[field.id],\n          onChange: newVal => this.updateMeta(newVal, field.id),\n          fieldCSSClasses,\n          required,\n          form: this.form.id\n        }, h) : h(\"input\", {\n          className: fieldCSSClasses.text,\n          id: id,\n          form: this.form.id,\n          type: field.type || 'text',\n          required: required,\n          value: this.state.formState[field.id],\n          placeholder: field.placeholder // If `form` attribute is not supported, we need to capture pressing Enter to avoid bubbling in case Uppy is\n          // embedded inside a <form>.\n          ,\n          onKeyUp: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyDown: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onKeyPress: 'form' in HTMLInputElement.prototype ? undefined : this.saveOnEnter,\n          onInput: ev => this.updateMeta(ev.target.value, field.id),\n          \"data-uppy-super-focusable\": true\n        }));\n      });\n    };\n\n    const _file = this.props.files[this.props.fileCardFor];\n\n    const _metaFields = this.getMetaFields() || [];\n\n    const storedMetaData = {};\n\n    _metaFields.forEach(field => {\n      storedMetaData[field.id] = _file.meta[field.id] || '';\n    });\n\n    this.state = {\n      formState: storedMetaData\n    };\n    this.form.id = nanoid();\n  } // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.\n\n\n  componentWillMount() {\n    // eslint-disable-line react/no-deprecated\n    this.form.addEventListener('submit', this.handleSave);\n    document.body.appendChild(this.form);\n  }\n\n  componentWillUnmount() {\n    this.form.removeEventListener('submit', this.handleSave);\n    document.body.removeChild(this.form);\n  }\n\n  getMetaFields() {\n    return typeof this.props.metaFields === 'function' ? this.props.metaFields(this.props.files[this.props.fileCardFor]) : this.props.metaFields;\n  }\n\n  render() {\n    const file = this.props.files[this.props.fileCardFor];\n    const showEditButton = this.props.canEditFile(file);\n    return h(\"div\", {\n      className: classNames('uppy-Dashboard-FileCard', this.props.className),\n      \"data-uppy-panelType\": \"FileCard\",\n      onDragOver: ignoreEvent,\n      onDragLeave: ignoreEvent,\n      onDrop: ignoreEvent,\n      onPaste: ignoreEvent\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-bar\"\n    }, h(\"div\", {\n      className: \"uppy-DashboardContent-title\",\n      role: \"heading\",\n      \"aria-level\": \"1\"\n    }, this.props.i18nArray('editing', {\n      file: h(\"span\", {\n        className: \"uppy-DashboardContent-titleFile\"\n      }, file.meta ? file.meta.name : file.name)\n    })), h(\"button\", {\n      className: \"uppy-DashboardContent-back\",\n      type: \"button\",\n      form: this.form.id,\n      title: this.props.i18n('finishEditingFile'),\n      onClick: this.handleCancel\n    }, this.props.i18n('cancel'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-inner\"\n    }, h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-preview\",\n      style: {\n        backgroundColor: getFileTypeIcon(file.type).color\n      }\n    }, h(FilePreview, {\n      file: file\n    }), showEditButton && h(\"button\", {\n      type: \"button\",\n      className: \"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\",\n      onClick: event => {\n        // When opening the image editor we want to save any meta fields changes.\n        // Otherwise it's confusing for the user to click save in the editor,\n        // but the changes here are discarded. This bypasses validation,\n        // but we are okay with that.\n        this.handleSave(event);\n        this.props.openFileEditor(file);\n      },\n      form: this.form.id\n    }, this.props.i18n('editFile'))), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-info\"\n    }, this.renderMetaFields()), h(\"div\", {\n      className: \"uppy-Dashboard-FileCard-actions\"\n    }, h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\" // If `form` attribute is supported, we want a submit button to trigger the form validation.\n      // Otherwise, fallback to a classic button with a onClick event handler.\n      ,\n      type: 'form' in HTMLButtonElement.prototype ? 'submit' : 'button',\n      onClick: 'form' in HTMLButtonElement.prototype ? undefined : this.handleSave,\n      form: this.form.id\n    }, this.props.i18n('saveChanges')), h(\"button\", {\n      className: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      form: this.form.id\n    }, this.props.i18n('cancel')))));\n  }\n\n}\n\nexport default FileCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}