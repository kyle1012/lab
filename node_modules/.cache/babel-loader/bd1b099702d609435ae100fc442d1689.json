{"ast":null,"code":"'use strict';\n\nimport { getDocument } from 'pdfjs-dist';\nimport { DefaultAnnotationLayerFactory, DefaultTextLayerFactory, PDFFindController, PDFLinkService, PDFPageView, EventBus } from 'pdfjs-dist/web/pdf_viewer.js';\nimport resizeSensor from './resize.vue';\nimport PdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nfunction isPDFDocumentLoadingTask(obj) {\n  return typeof obj === 'object' && obj !== null && obj.__PDFDocumentLoadingTask === true;\n}\nexport function createLoadingTask(src, options) {\n  var source;\n  if (typeof src === 'string') source = {\n    url: src\n  };else if (typeof src === 'object' && src !== null) source = Object.assign({}, src);else throw new TypeError('invalid src type');\n  var loadingTask = getDocument(source).promise;\n  loadingTask.__PDFDocumentLoadingTask = true; // since PDFDocumentLoadingTask is not public\n\n  if (options && options.onPassword) loadingTask.onPassword = options.onPassword;\n  if (options && options.onProgress) loadingTask.onProgress = options.onProgress;\n  return loadingTask;\n}\nexport default {\n  createLoadingTask: createLoadingTask,\n  components: {\n    resizeSensor\n  },\n  props: {\n    src: {\n      type: [String, Object, Promise],\n      default: ''\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    rotate: {\n      type: Number,\n      default: 0\n    },\n    scale: {\n      type: [Number, String],\n      default: 'page-width'\n    },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    annotation: {\n      type: Boolean,\n      default: false\n    },\n    text: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function () {\n    return {\n      internalSrc: this.src,\n      pdf: null,\n      pdfViewer: null,\n      loading: true\n    };\n  },\n  watch: {\n    pdf: function (val) {\n      var pdfInfo = val.pdfInfo || val._pdfInfo;\n      this.$emit('numpages', pdfInfo.numPages);\n    },\n    page: function (val) {\n      var self = this;\n      this.pdf.getPage(val).then(function (pdfPage) {\n        self.pdfViewer.setPdfPage(pdfPage);\n        self.pdfViewer.draw();\n      });\n    },\n    scale: function (val) {\n      this.drawScaled(val);\n    },\n    rotate: function (newRotate) {\n      if (this.pdfViewer) {\n        this.pdfViewer.update(this.scale, newRotate);\n        this.pdfViewer.draw();\n      }\n    }\n  },\n  mounted: function () {\n    var self = this;\n    if (!isPDFDocumentLoadingTask(self.internalSrc)) {\n      self.internalSrc = createLoadingTask(self.internalSrc);\n      self.$emit('loading', true);\n    }\n    var container = this.$refs.container;\n    var eventBus = new EventBus();\n\n    // (Optionally) enable hyperlinks within PDF files.\n    self.pdfLinkService = new PDFLinkService({\n      eventBus: eventBus,\n      externalLinkTarget: 2\n    });\n\n    // (Optionally) enable find controller.\n    self.pdfFindController = new PDFFindController({\n      eventBus: eventBus,\n      linkService: self.pdfLinkService\n    });\n    let annotationLayer = undefined,\n      textLayer = undefined;\n    if (self.annotation) {\n      annotationLayer = new DefaultAnnotationLayerFactory();\n    }\n    if (self.text) {\n      textLayer = new DefaultTextLayerFactory();\n    }\n    self.internalSrc.then(function (pdfDocument) {\n      // Document loaded, retrieving the page.\n      self.pdf = pdfDocument;\n      return pdfDocument.getPage(self.page);\n    }).then(function (pdfPage) {\n      // Creating the page view with default parameters.\n      self.pdfViewer = new PDFPageView({\n        container: container,\n        id: self.page,\n        scale: 1,\n        defaultViewport: pdfPage.getViewport({\n          scale: 1\n        }),\n        eventBus: eventBus,\n        textLayerFactory: textLayer,\n        annotationLayerFactory: annotationLayer\n      });\n      // Associates the actual page with the view, and drawing it\n      self.pdfViewer.setPdfPage(pdfPage);\n      // Set up a scrollPageIntoView function for our links\n      var viewer = {\n        scrollPageIntoView: function (params) {\n          // Send an event when clicking internal links so we can handle loading/scrolling to the correct page\n          self.$emit('link-clicked', params);\n        }\n      };\n      self.pdfLinkService.setDocument(self.pdf);\n      self.pdfLinkService.setViewer(viewer);\n      self.pdfFindController.setDocument(self.pdf);\n      self.drawScaled(self.scale);\n      self.loading = false;\n      self.$emit('loading', false);\n    }).catch(err => {\n      self.$emit('error', err);\n      self.loading = false;\n      self.$emit('loading', false);\n    });\n  },\n  beforeDestroy() {\n    var self = this;\n    if (self.pdfViewer) {\n      self.pdfViewer.destroy();\n      self.pdfViewer = null;\n    }\n  },\n  methods: {\n    calculateScale: function (width = -1, height = -1) {\n      this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n      if (width === -1 && height === -1) {\n        width = this.$refs.container.offsetWidth;\n      }\n      return width / this.pdfViewer.viewport.width;\n    },\n    calculateScaleHeight: function () {\n      this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n      var height = this.$refs.container.offsetHeight;\n      var parentel = this.$refs.container.parentElement.parentElement;\n      return parentel.offsetHeight / height;\n    },\n    drawScaled: function (newScale) {\n      if (this.pdfViewer) {\n        if (newScale === 'page-width') {\n          newScale = this.calculateScale();\n          this.$emit(\"update:scale\", newScale);\n        } else if (newScale === 'page-height') {\n          newScale = this.calculateScaleHeight();\n          this.$emit(\"update:scale\", newScale);\n        }\n        this.pdfViewer.update(newScale, this.rotate);\n        // The SimpleLinkService from the DefaultAnnotationLayerFactory doesn't do anything with links so override with our LinkService after it is created\n        if (this.annotation) {\n          this.pdfViewer.annotationLayer = this.pdfViewer.annotationLayerFactory.createAnnotationLayerBuilder(this.pdfViewer.div, this.pdfViewer.pdfPage);\n          this.pdfViewer.annotationLayer.linkService = this.pdfLinkService;\n        }\n        this.pdfViewer.draw();\n        // The findController needs the text layer to have been created in the Draw() function, so link it in now\n        if (this.text) {\n          this.pdfViewer.textLayer.findController = this.pdfFindController;\n        }\n        this.loading = false;\n        this.$emit('loading', false);\n      }\n    },\n    resizeScale: function () {\n      if (this.resize) {\n        this.drawScaled('page-width');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["getDocument","DefaultAnnotationLayerFactory","DefaultTextLayerFactory","PDFFindController","PDFLinkService","PDFPageView","EventBus","resizeSensor","PdfjsWorker","isPDFDocumentLoadingTask","obj","__PDFDocumentLoadingTask","createLoadingTask","src","options","source","url","Object","assign","TypeError","loadingTask","promise","onPassword","onProgress","components","props","type","String","Promise","default","page","Number","rotate","scale","resize","Boolean","annotation","text","data","internalSrc","pdf","pdfViewer","loading","watch","val","pdfInfo","_pdfInfo","$emit","numPages","self","getPage","then","pdfPage","setPdfPage","draw","drawScaled","newRotate","update","mounted","container","$refs","eventBus","pdfLinkService","externalLinkTarget","pdfFindController","linkService","annotationLayer","undefined","textLayer","pdfDocument","id","defaultViewport","getViewport","textLayerFactory","annotationLayerFactory","viewer","scrollPageIntoView","params","setDocument","setViewer","catch","err","beforeDestroy","destroy","methods","calculateScale","width","height","offsetWidth","viewport","calculateScaleHeight","offsetHeight","parentel","parentElement","newScale","createAnnotationLayerBuilder","div","findController","resizeScale"],"sourceRoot":"","sources":["/lab/node_modules/pdfvuer/src/Pdfvuer.vue"],"sourcesContent":["<template>\n  <div>\n    <slot v-if=\"loading\" name=\"loading\"/>\n    <div id=\"viewerContainer\" ref=\"container\">\n      <div id=\"viewer\" class=\"pdfViewer\"/>\n      <resizeSensor :initial=\"true\" @resize=\"resizeScale\"/>\n    </div>\n  </div>\n</template>\n<script>\n  'use strict';\n  import { getDocument } from 'pdfjs-dist';\n  import {\n    DefaultAnnotationLayerFactory,\n    DefaultTextLayerFactory,\n    PDFFindController,\n    PDFLinkService,\n    PDFPageView,\n    EventBus\n  } from 'pdfjs-dist/web/pdf_viewer.js';\n  import resizeSensor from './resize.vue'\n  import PdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\n  function isPDFDocumentLoadingTask(obj) {\n    return typeof (obj) === 'object' && obj !== null && obj.__PDFDocumentLoadingTask === true;\n  }\n\n  export function createLoadingTask(src, options) {\n    var source;\n    if (typeof (src) === 'string')\n      source = {\n        url: src\n      };\n    else if (typeof (src) === 'object' && src !== null)\n      source = Object.assign({}, src);\n    else\n      throw new TypeError('invalid src type');\n\n    var loadingTask = getDocument(source).promise;\n    loadingTask.__PDFDocumentLoadingTask = true; // since PDFDocumentLoadingTask is not public\n\n    if (options && options.onPassword)\n      loadingTask.onPassword = options.onPassword;\n\n    if (options && options.onProgress)\n      loadingTask.onProgress = options.onProgress;\n\n    return loadingTask;\n  }\n\n  export default {\n    createLoadingTask: createLoadingTask,\n    components: {\n      resizeSensor\n    },\n    props: {\n      src: {\n        type: [String, Object, Promise],\n        default: '',\n      },\n      page: {\n        type: Number,\n        default: 1,\n      },\n      rotate: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: [Number, String],\n        default: 'page-width',\n      },\n      resize: {\n        type: Boolean,\n        default: false,\n      },\n      annotation: {\n        type: Boolean,\n        default: false,\n      },\n      text: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data: function () {\n      return {\n        internalSrc: this.src,\n        pdf: null,\n        pdfViewer: null,\n        loading: true,\n      }\n    },\n    watch: {\n      pdf: function (val) {\n        var pdfInfo = val.pdfInfo || val._pdfInfo\n        this.$emit('numpages', pdfInfo.numPages);\n      },\n      page: function (val) {\n        var self = this;\n        this.pdf.getPage(val).then(function (pdfPage) {\n          self.pdfViewer.setPdfPage(pdfPage);\n          self.pdfViewer.draw();\n        });\n      },\n      scale: function (val) {\n        this.drawScaled(val);\n      },\n      rotate: function (newRotate) {\n        if (this.pdfViewer) {\n          this.pdfViewer.update(this.scale, newRotate);\n          this.pdfViewer.draw();\n        }\n      },\n    },\n    mounted: function () {\n      var self = this;\n      if (!isPDFDocumentLoadingTask(self.internalSrc)) {\n        self.internalSrc = createLoadingTask(self.internalSrc);\n        self.$emit('loading', true);\n      }\n\n      var container = this.$refs.container;\n      var eventBus = new EventBus();\n\n      // (Optionally) enable hyperlinks within PDF files.\n      self.pdfLinkService = new PDFLinkService({\n        eventBus: eventBus,\n        externalLinkTarget: 2\n      });\n\n      // (Optionally) enable find controller.\n      self.pdfFindController = new PDFFindController({\n        eventBus: eventBus,\n        linkService: self.pdfLinkService\n      });\n\n      let annotationLayer = undefined,\n        textLayer = undefined;\n\n      if (self.annotation) {\n        annotationLayer = new DefaultAnnotationLayerFactory();\n      }\n      if (self.text) {\n        textLayer = new DefaultTextLayerFactory();\n      }\n\n      self.internalSrc\n        .then(function (pdfDocument) {\n          // Document loaded, retrieving the page.\n          self.pdf = pdfDocument;\n          return pdfDocument.getPage(self.page)\n        }).then(function (pdfPage) {\n          // Creating the page view with default parameters.\n          self.pdfViewer = new PDFPageView({\n            container: container,\n            id: self.page,\n            scale: 1,\n            defaultViewport: pdfPage.getViewport({\n              scale: 1\n            }),\n            eventBus: eventBus,\n            textLayerFactory: textLayer,\n            annotationLayerFactory: annotationLayer,\n          });\n          // Associates the actual page with the view, and drawing it\n          self.pdfViewer.setPdfPage(pdfPage);\n          // Set up a scrollPageIntoView function for our links\n          var viewer = {\n            scrollPageIntoView: function(params) {\n              // Send an event when clicking internal links so we can handle loading/scrolling to the correct page\n              self.$emit('link-clicked', params);\n            },\n          };\n          self.pdfLinkService.setDocument(self.pdf);\n          self.pdfLinkService.setViewer(viewer);\n          self.pdfFindController.setDocument(self.pdf);\n          self.drawScaled(self.scale);\n\n          self.loading = false;\n          self.$emit('loading', false);\n        }).catch(err => {\n          self.$emit('error', err)\n          self.loading = false\n          self.$emit('loading', false);\n        })\n    },\n    beforeDestroy() {\n      var self = this;\n      if (self.pdfViewer) {\n        self.pdfViewer.destroy();\n        self.pdfViewer = null;\n      }\n    },\n    methods: {\n      calculateScale: function (width = -1, height = -1) {\n        this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n        if (width === -1 && height === -1) {\n          width = this.$refs.container.offsetWidth;\n        }\n\n        return width / this.pdfViewer.viewport.width;\n      },\n      calculateScaleHeight: function () {\n        this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n        var height = this.$refs.container.offsetHeight;\n        var parentel = this.$refs.container.parentElement.parentElement;\n        return parentel.offsetHeight / height;\n      },\n      drawScaled: function (newScale) {\n        if (this.pdfViewer) {\n          if (newScale === 'page-width') {\n            newScale = this.calculateScale();\n            this.$emit(\"update:scale\", newScale);\n          }\n          else if (newScale === 'page-height') {\n            newScale = this.calculateScaleHeight();\n            this.$emit(\"update:scale\", newScale);\n          }\n          this.pdfViewer.update(newScale, this.rotate);\n          // The SimpleLinkService from the DefaultAnnotationLayerFactory doesn't do anything with links so override with our LinkService after it is created\n          if(this.annotation) {\n            this.pdfViewer.annotationLayer = this.pdfViewer.annotationLayerFactory.createAnnotationLayerBuilder(this.pdfViewer.div, this.pdfViewer.pdfPage);\n            this.pdfViewer.annotationLayer.linkService = this.pdfLinkService;\n          }\n          this.pdfViewer.draw();\n          // The findController needs the text layer to have been created in the Draw() function, so link it in now\n          if (this.text) {\n            this.pdfViewer.textLayer.findController = this.pdfFindController;\n          }\n          this.loading = false;\n          this.$emit('loading', false);\n        }\n      },\n      resizeScale: function () {\n        if (this.resize) {\n          this.drawScaled('page-width');\n        }\n      }\n    }\n  }\n</script>\n<style src=\"pdfjs-dist/web/pdf_viewer.css\"></style>"]},"metadata":{},"sourceType":"module"}