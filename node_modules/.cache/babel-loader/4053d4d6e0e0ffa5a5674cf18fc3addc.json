{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as PDFJSlib from 'pdfjs-dist/build/pdf';\nimport * as PDFJSViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { SimpleLinkService } from 'pdfjs-dist/web/pdf_viewer';\nimport 'pdfjs-dist/web/pdf_viewer.css';\nimport { ref, watch, onMounted, openBlock, createElementBlock, createElementVNode, withDirectives, vShow } from 'vue';\nimport PDFJSWorker from 'pdfjs-dist/build/pdf.worker.entry';\nconst INTERNAL_LINK = \"internal-link\";\nconst LINK = \"link\";\nconst FILE_ATTACHMENT = \"file-attachment\";\nconst FORM_TEXT = \"form-text\";\nconst FORM_SELECT = \"form-select\";\nconst FORM_CHECKBOX = \"form-checkbox\";\nconst FORM_RADIO = \"form-radio\";\nconst FORM_BUTTON = \"form-button\";\nconst EVENTS_TO_HANDLER = ['click', 'dblclick', 'mouseover', 'input', 'change'];\nvar script = {\n  name: 'VuePDF',\n  emits: ['annotation', 'loaded'],\n  props: {\n    pdf: {\n      required: true\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    scale: {\n      type: Number,\n      default: 1\n    },\n    rotation: Number,\n    \"annotations-filter\": Array,\n    \"text-layer\": Boolean,\n    \"annotation-layer\": Boolean\n  },\n  setup(props, context) {\n    // Template elements\n    const CanvasREF = ref({});\n    const TextlayerREF = ref({});\n    const AnnotationlayerRef = ref({});\n\n    // PDF objects\n    var PDFDoc = null;\n    var TextLayerLoaded = false;\n    var AnnotationLayerLoaded = false;\n    var Annotations = [];\n    var FieldObjects = {};\n\n    // Use this function to handle annotation events\n    const annotationEventsHandler = evt => {\n      var annotation = evt.target.parentNode;\n      // annotations are <section> elements if div returned find in child nodes the section element\n      // TODO this part in recursive mode \n      if (annotation.tagName === 'DIV') {\n        annotation = annotation.firstChild;\n      }\n      // For linkAnnotation events get only click events\n      if (annotation.className === 'linkAnnotation' && evt.type === 'click') {\n        const id = annotation.dataset['annotationId'];\n        if (id) linkAnnotationHandler(getAnnotationsByKey('id', id)[0]);\n        // For popups annotations \n      } else if (annotation.className === 'popupAnnotation' || annotation.className === 'textAnnotation' || annotation.className === 'fileAttachmentAnnotation') {\n        for (const spanElement of annotation.getElementsByTagName(\"span\")) {\n          var content = spanElement.textContent;\n          var args = JSON.parse(spanElement.dataset['l10nArgs']);\n          for (const key in args) content = content.replace(`{{${key}}}`, args[key]);\n          spanElement.textContent = content;\n        }\n        if (annotation.className === 'fileAttachmentAnnotation' && evt.type === 'dblclick') {\n          const id = annotation.dataset['annotationId'];\n          if (id) fileAnnotationHandler(getAnnotationsByKey('id', id)[0]);\n        }\n        // TextFields and TextAreas\n      } else if (annotation.className === 'textWidgetAnnotation' && evt.type === 'input') {\n        let inputElement = annotation.getElementsByTagName(\"input\")[0];\n        if (!inputElement) inputElement = annotation.getElementsByTagName(\"textarea\")[0];\n        inputAnnotationHandler(inputElement);\n      } else if (annotation.className === 'choiceWidgetAnnotation' && evt.type === 'input') {\n        inputAnnotationHandler(annotation.getElementsByTagName(\"select\")[0]);\n      } else if (annotation.className === 'buttonWidgetAnnotation checkBox' && evt.type === 'change') {\n        inputAnnotationHandler(annotation.getElementsByTagName(\"input\")[0]);\n      } else if (annotation.className === 'buttonWidgetAnnotation radioButton' && evt.type === 'change') {\n        const id = annotation.dataset['annotationId'];\n        if (id) {\n          const anno = getAnnotationsByKey('id', id)[0];\n          const radioOptions = [];\n          for (const radioAnnotations of getAnnotationsByKey('fieldName', anno.fieldName)) if (radioAnnotations.buttonValue) radioOptions.push(radioAnnotations.buttonValue);\n          inputAnnotationHandler(annotation.getElementsByTagName(\"input\")[0], {\n            value: anno.buttonValue,\n            defaultValue: anno.fieldValue,\n            options: radioOptions\n          });\n        }\n      } else if (annotation.className === 'buttonWidgetAnnotation pushButton' && evt.type === 'click') {\n        const id = annotation.dataset['annotationId'];\n        if (id) {\n          const anno = getAnnotationsByKey('id', id)[0];\n          if (!anno.resetForm) inputAnnotationHandler({\n            name: anno.fieldName,\n            type: \"button\"\n          }, {\n            actions: anno.actions,\n            reset: false\n          });else inputAnnotationHandler({\n            name: anno.fieldName,\n            type: \"button\"\n          }, {\n            actions: anno.actions,\n            reset: true\n          });\n        }\n      }\n      // Another Annotations manage here\n    };\n\n    const inputAnnotationHandler = (inputEl, args) => {\n      switch (inputEl.type) {\n        case \"textarea\":\n        case \"text\":\n          emitAnnotation(FORM_TEXT, {\n            fieldName: inputEl.name,\n            value: inputEl.value\n          });\n          break;\n        case \"select-one\":\n        case \"select-multiple\":\n          const options = [];\n          for (const opt of inputEl.options) {\n            options.push({\n              value: opt.value,\n              label: opt.label\n            });\n          }\n          const selected = [];\n          for (const opt of inputEl.selectedOptions) {\n            selected.push({\n              value: opt.value,\n              label: opt.label\n            });\n          }\n          emitAnnotation(FORM_SELECT, {\n            fieldName: inputEl.name,\n            value: selected,\n            options: options\n          });\n          break;\n        case \"checkbox\":\n          emitAnnotation(FORM_CHECKBOX, {\n            fieldName: inputEl.name,\n            checked: inputEl.checked\n          });\n          break;\n        case \"radio\":\n          emitAnnotation(FORM_RADIO, {\n            fieldName: inputEl.name,\n            ...args\n          });\n          break;\n        case \"button\":\n          emitAnnotation(FORM_BUTTON, {\n            fieldName: inputEl.name,\n            ...args\n          });\n      }\n    };\n    const fileAnnotationHandler = annotation => emitAnnotation(FILE_ATTACHMENT, annotation.file);\n    const linkAnnotationHandler = annotation => {\n      if (annotation.dest) {\n        // Get referenced page number of internal link\n        PDFDoc.getPageIndex(annotation.dest[0]).then(pageIndex => {\n          const eventInfo = {\n            referencedPage: pageIndex + 1,\n            offset: {\n              left: annotation.dest[2],\n              bottom: annotation.dest[3]\n            }\n          };\n          emitAnnotation(INTERNAL_LINK, eventInfo);\n        });\n      } else if (annotation.url) {\n        const eventInfo = {\n          url: annotation.url,\n          unsafeUrl: annotation.unsafeUrl\n        };\n        emitAnnotation(LINK, eventInfo);\n      }\n    };\n    const getAnnotationsByKey = (key, value) => {\n      const result = [];\n      for (const annotation of Annotations) if (annotation[key] === value) result.push(annotation);\n      return result;\n    };\n    const emitAnnotation = (type, data) => {\n      context.emit(\"annotation\", {\n        type: type,\n        data: data\n      });\n    };\n    const emitLoaded = data => {\n      context.emit(\"loaded\", data);\n    };\n    const renderPage = pageNum => {\n      PDFDoc.getPage(pageNum).then(page => {\n        let emitLoadedEvent = false;\n        const viewportParams = {\n          scale: props.scale\n        };\n\n        // Set rotation param only if is a valid number\n        if (typeof props.rotation === \"number\" && props.rotation % 90 === 0) viewportParams['rotation'] = props.rotation;\n        var viewport = page.getViewport(viewportParams);\n        var ctx = CanvasREF.value.getContext('2d');\n        CanvasREF.value.width = viewport.width;\n        CanvasREF.value.height = viewport.height;\n        CanvasREF.value.style.width = viewport.width + 'px';\n        CanvasREF.value.style.height = viewport.height + 'px';\n\n        // Render PDF page into canvas context\n        var renderContext = {\n          canvasContext: ctx,\n          viewport: viewport\n        };\n        page.render(renderContext).promise.then(() => {\n          // Load text layer if prop is true\n          if (props.textLayer) {\n            page.getTextContent().then(textContent => {\n              TextlayerREF.value.style.left = CanvasREF.value.offsetLeft + 'px';\n              TextlayerREF.value.style.top = CanvasREF.value.offsetTop + 'px';\n              TextlayerREF.value.style.height = CanvasREF.value.offsetHeight + 'px';\n              TextlayerREF.value.style.width = CanvasREF.value.offsetWidth + 'px';\n\n              // Render text using TextLayerBuilder from pdfjs viewer\n              const TextLayerBuilder = new PDFJSViewer.TextLayerBuilder({\n                textLayerDiv: TextlayerREF.value,\n                pageIndex: page._pageIndex,\n                eventBus: new PDFJSViewer.EventBus(),\n                viewport: viewport,\n                enhanceTextSelection: false\n              });\n              TextLayerBuilder.setTextContent(textContent);\n              TextLayerBuilder.render();\n              TextLayerLoaded = true;\n            });\n          }\n\n          // Load annotaion layer if prop is true\n          if (props.annotationLayer) {\n            emitLoadedEvent = true;\n            page.getAnnotations().then(annotations => {\n              AnnotationlayerRef.value.style.left = CanvasREF.value.offsetLeft + 'px';\n              AnnotationlayerRef.value.style.top = CanvasREF.value.offsetTop + 'px';\n              AnnotationlayerRef.value.style.height = CanvasREF.value.offsetHeight + 'px';\n              AnnotationlayerRef.value.style.width = CanvasREF.value.offsetWidth + 'px';\n              if (props.annotationsFilter) {\n                annotations = annotations.filter(value => {\n                  const filters = props.annotationsFilter;\n                  const subType = value.subtype;\n                  const fieldType = value.fieldType ? `${subType}.${value.fieldType}` : null;\n                  return filters.includes(subType) || filters.includes(fieldType);\n                });\n              }\n\n              // Canvas map for push button widget\n              const canvasMap = new Map([]);\n              for (const anno of annotations) {\n                if (anno.subtype === \"Widget\" && anno.fieldType === \"Btn\" && anno.pushButton) {\n                  const canvasWidth = anno.rect[2] - anno.rect[0];\n                  const canvasHeight = anno.rect[3] - anno.rect[1];\n                  const subCanvas = document.createElement(\"canvas\");\n                  subCanvas.setAttribute(\"width\", canvasWidth);\n                  subCanvas.setAttribute(\"height\", canvasHeight);\n                  canvasMap.set(anno.id, subCanvas);\n                }\n              }\n              PDFJSlib.AnnotationLayer.render({\n                annotations: annotations,\n                viewport: viewport.clone({\n                  dontFlip: true\n                }),\n                page: page,\n                linkService: new SimpleLinkService(),\n                // no pdfviewer features needed, send void LinkService\n                div: AnnotationlayerRef.value,\n                enableScripting: true,\n                hasJSActions: true,\n                annotationCanvasMap: canvasMap,\n                fieldObjects: FieldObjects\n              });\n              Annotations = annotations;\n              AnnotationLayerLoaded = true;\n              emitLoaded({\n                ...viewport,\n                annotations: Annotations\n              });\n\n              // Add event listeners to manage some events of annotations layer items\n              for (const evtHandler of EVENTS_TO_HANDLER) AnnotationlayerRef.value.addEventListener(evtHandler, annotationEventsHandler);\n            });\n          }\n          if (!emitLoadedEvent) emitLoaded(viewport);\n        });\n      });\n    };\n    const clearLayers = () => {\n      // Clear all childnodes of layer elements\n      TextlayerREF.value.replaceChildren?.();\n      AnnotationlayerRef.value.replaceChildren?.();\n      // Clear event listeners of annotation layer \n      for (const evtHandler of EVENTS_TO_HANDLER) AnnotationlayerRef.value.removeEventListener?.(evtHandler, annotationEventsHandler);\n    };\n    const initDoc = proxy => {\n      proxy.promise.then(doc => {\n        PDFDoc = doc;\n        PDFDoc.getFieldObjects().then(data => {\n          FieldObjects = data;\n        });\n        renderPage(props.page);\n      });\n    };\n    watch(() => props.pdf, pdf => {\n      // for any change in pdf proxy, rework all\n      if (pdf !== undefined) {\n        clearLayers();\n        initDoc(pdf);\n      }\n    });\n    watch(() => props.textLayer, textLayer => {\n      if (textLayer) {\n        // If text-layer has no been loaded before, rework the render task\n        if (!TextLayerLoaded) {\n          renderPage(props.page);\n        }\n      }\n    });\n    watch(() => props.annotationLayer, annotationLayer => {\n      if (annotationLayer) {\n        // If annotation-layer has no been loaded before, rework the render task\n        if (!AnnotationLayerLoaded) {\n          renderPage(props.page);\n        }\n      }\n    });\n\n    // WHhen annotations filter change rework render task\n    watch(() => props.annotationsFilter, () => {\n      clearLayers();\n      renderPage(props.page);\n    });\n    watch(() => props.scale, _ => {\n      // When scale change rework render task\n      clearLayers();\n      renderPage(props.page);\n    });\n    watch(() => props.rotation, _ => {\n      // When rotation change rework render task\n      clearLayers();\n      renderPage(props.page);\n    });\n    watch(() => props.page, page => {\n      // When page change rework render task\n      clearLayers();\n      renderPage(page);\n    });\n    onMounted(() => {\n      if (props.pdf !== undefined) {\n        initDoc(props.pdf);\n      }\n    });\n    return {\n      CanvasREF,\n      TextlayerREF,\n      AnnotationlayerRef\n    };\n  }\n};\nconst _hoisted_1 = {\n  style: {\n    \"position\": \"relative\",\n    \"display\": \"block\"\n  }\n};\nconst _hoisted_2 = {\n  ref: \"CanvasREF\",\n  style: {\n    \"display\": \"inline-block\"\n  }\n};\nconst _hoisted_3 = {\n  ref: \"AnnotationlayerRef\",\n  class: \"annotationLayer\",\n  style: {\n    \"display\": \"block\"\n  }\n};\nconst _hoisted_4 = {\n  ref: \"TextlayerREF\",\n  class: \"textLayer\",\n  style: {\n    \"display\": \"block\"\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", _hoisted_1, [createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */), withDirectives(createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), [[vShow, _ctx.annotationLayer]]), withDirectives(createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), [[vShow, _ctx.textLayer]])]);\n}\nscript.render = render;\nscript.__file = \"src/components/VuePDF.vue\";\nPDFJSlib.GlobalWorkerOptions.workerSrc = PDFJSWorker;\n\n/** \r\n * @typedef {Object} UsePDFParameters \r\n * @property {string} password\r\n * Document password to unlock content\r\n * @property {function} onProgress\r\n * Callback to request a password if a wrong or no password was provided. The callback receives two parameters: a function that should be called with the new password, and a reason (see PasswordResponses). \r\n * @property {function} onPassword \r\n * Callback to be able to monitor the loading progress of the PDF file (necessary to implement e.g. a loading bar). The callback receives an OnProgressParameters argument. if this function is used option.password is ignored\r\n * @property {function} onError\r\n * Callback to be able to handle errors during loading \r\n * */\n\n/**\r\n * \r\n * @param {string | URL | TypedArray | PDFDataRangeTransport | DocumentInitParameters} src\r\n * Can be a URL where a PDF file is located, a typed array (Uint8Array) already populated with data, or a parameter object.\r\n * @param {UsePDFParameters} options\r\n * UsePDF object parameters\r\n */\nfunction usePDF(src, options = {\n  onProgress: undefined,\n  onPassword: undefined,\n  onError: undefined,\n  password: ''\n}) {\n  const pdf = ref();\n  const pages = ref(0);\n  const info = ref({\n    metadata: {},\n    attachments: {},\n    javascript: {}\n  });\n  const loadingTask = PDFJSlib.getDocument(src);\n  loadingTask.onProgress = options?.onProgress;\n  loadingTask.onPassword = options?.onPassword ? options.onPassword : options.password ? (updatePassword, _) => {\n    updatePassword(options.password);\n  } : undefined;\n  loadingTask.promise.then(doc => {\n    pdf.value = doc.loadingTask;\n    pages.value = doc.numPages;\n    doc.getMetadata().then(data => {\n      info.value.metadata = data;\n    });\n    doc.getAttachments().then(data => {\n      info.value.attachments = data;\n    });\n    doc.getJavaScript().then(data => {\n      info.value.javascript = data;\n    });\n  }, reason => {\n    // PDF loading error\n    if (typeof options.onError === 'function') {\n      options.onError(reason);\n    }\n  });\n  return {\n    pdf,\n    pages,\n    info\n  };\n}\nconst plugin = {\n  install(Vue) {\n    Vue.component(script.name, script);\n  }\n};\nexport { script as VuePDF, plugin as default, usePDF };","map":{"version":3,"names":["PDFJSlib","PDFJSViewer","SimpleLinkService","ref","watch","onMounted","openBlock","createElementBlock","createElementVNode","withDirectives","vShow","PDFJSWorker","INTERNAL_LINK","LINK","FILE_ATTACHMENT","FORM_TEXT","FORM_SELECT","FORM_CHECKBOX","FORM_RADIO","FORM_BUTTON","EVENTS_TO_HANDLER","script","name","emits","props","pdf","required","page","type","Number","default","scale","rotation","Array","Boolean","setup","context","CanvasREF","TextlayerREF","AnnotationlayerRef","PDFDoc","TextLayerLoaded","AnnotationLayerLoaded","Annotations","FieldObjects","annotationEventsHandler","evt","annotation","target","parentNode","tagName","firstChild","className","id","dataset","linkAnnotationHandler","getAnnotationsByKey","spanElement","getElementsByTagName","content","textContent","args","JSON","parse","key","replace","fileAnnotationHandler","inputElement","inputAnnotationHandler","anno","radioOptions","radioAnnotations","fieldName","buttonValue","push","value","defaultValue","fieldValue","options","resetForm","actions","reset","inputEl","emitAnnotation","opt","label","selected","selectedOptions","checked","file","dest","getPageIndex","then","pageIndex","eventInfo","referencedPage","offset","left","bottom","url","unsafeUrl","result","data","emit","emitLoaded","renderPage","pageNum","getPage","emitLoadedEvent","viewportParams","viewport","getViewport","ctx","getContext","width","height","style","renderContext","canvasContext","render","promise","textLayer","getTextContent","offsetLeft","top","offsetTop","offsetHeight","offsetWidth","TextLayerBuilder","textLayerDiv","_pageIndex","eventBus","EventBus","enhanceTextSelection","setTextContent","annotationLayer","getAnnotations","annotations","annotationsFilter","filter","filters","subType","subtype","fieldType","includes","canvasMap","Map","pushButton","canvasWidth","rect","canvasHeight","subCanvas","document","createElement","setAttribute","set","AnnotationLayer","clone","dontFlip","linkService","div","enableScripting","hasJSActions","annotationCanvasMap","fieldObjects","evtHandler","addEventListener","clearLayers","replaceChildren","removeEventListener","initDoc","proxy","doc","getFieldObjects","undefined","_","_hoisted_1","_hoisted_2","_hoisted_3","class","_hoisted_4","_ctx","_cache","$props","$setup","$data","$options","__file","GlobalWorkerOptions","workerSrc","usePDF","src","onProgress","onPassword","onError","password","pages","info","metadata","attachments","javascript","loadingTask","getDocument","updatePassword","numPages","getMetadata","getAttachments","getJavaScript","reason","plugin","install","Vue","component","VuePDF"],"sources":["/lab/node_modules/@tato30/vue-pdf/esm/index.js"],"sourcesContent":["import * as PDFJSlib from 'pdfjs-dist/build/pdf';\nimport * as PDFJSViewer from 'pdfjs-dist/web/pdf_viewer';\nimport { SimpleLinkService } from 'pdfjs-dist/web/pdf_viewer';\nimport 'pdfjs-dist/web/pdf_viewer.css';\nimport { ref, watch, onMounted, openBlock, createElementBlock, createElementVNode, withDirectives, vShow } from 'vue';\nimport PDFJSWorker from 'pdfjs-dist/build/pdf.worker.entry';\n\nconst INTERNAL_LINK = \"internal-link\";\r\nconst LINK = \"link\";\r\nconst FILE_ATTACHMENT = \"file-attachment\";\r\nconst FORM_TEXT = \"form-text\";\r\nconst FORM_SELECT = \"form-select\";\r\nconst FORM_CHECKBOX = \"form-checkbox\";\r\nconst FORM_RADIO = \"form-radio\";\r\nconst FORM_BUTTON = \"form-button\";\r\n\r\nconst EVENTS_TO_HANDLER = ['click', 'dblclick', 'mouseover', 'input', 'change'];\r\n\r\nvar script = {\r\n  name: 'VuePDF',\r\n  emits: [ \r\n    'annotation',\r\n    'loaded'\r\n  ],\r\n  props: {\r\n    pdf: {\r\n      required: true\r\n    },\r\n    page: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    scale: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    rotation: Number,\r\n    \"annotations-filter\": Array,\r\n    \"text-layer\": Boolean,\r\n    \"annotation-layer\": Boolean\r\n  },\r\n  setup(props, context){\r\n    // Template elements\r\n    const CanvasREF = ref({});\r\n    const TextlayerREF = ref({});\r\n    const AnnotationlayerRef = ref({});\r\n\r\n    // PDF objects\r\n    var PDFDoc = null;\r\n    var TextLayerLoaded = false;\r\n    var AnnotationLayerLoaded = false;\r\n    var Annotations = [];\r\n    var FieldObjects = {};\r\n\r\n    // Use this function to handle annotation events\r\n    const annotationEventsHandler = (evt) => {\r\n      var annotation = evt.target.parentNode;\r\n      // annotations are <section> elements if div returned find in child nodes the section element\r\n      // TODO this part in recursive mode \r\n      if (annotation.tagName === 'DIV'){\r\n        annotation = annotation.firstChild;\r\n      }\r\n      // For linkAnnotation events get only click events\r\n      if (annotation.className === 'linkAnnotation' && evt.type === 'click') {\r\n        const id = annotation.dataset['annotationId'];\r\n        if (id) linkAnnotationHandler(getAnnotationsByKey('id', id)[0]);\r\n      // For popups annotations \r\n      } else if (annotation.className === 'popupAnnotation' || annotation.className === 'textAnnotation' || annotation.className === 'fileAttachmentAnnotation'){\r\n        for (const spanElement of annotation.getElementsByTagName(\"span\")) {\r\n          var content = spanElement.textContent;\r\n          var args = JSON.parse(spanElement.dataset['l10nArgs']);\r\n          for (const key in args) \r\n              content = content.replace(`{{${key}}}`, args[key]);\r\n          spanElement.textContent = content;\r\n        }\r\n        if (annotation.className === 'fileAttachmentAnnotation' && evt.type === 'dblclick'){\r\n          const id = annotation.dataset['annotationId'];\r\n          if (id) fileAnnotationHandler(getAnnotationsByKey('id', id)[0]);\r\n        }\r\n      // TextFields and TextAreas\r\n      } else if (annotation.className === 'textWidgetAnnotation' && evt.type === 'input') {\r\n        let inputElement = annotation.getElementsByTagName(\"input\")[0];\r\n        if (!inputElement) inputElement = annotation.getElementsByTagName(\"textarea\")[0];\r\n        inputAnnotationHandler(inputElement);\r\n      \r\n      } else if (annotation.className === 'choiceWidgetAnnotation' && evt.type === 'input') {\r\n        inputAnnotationHandler(annotation.getElementsByTagName(\"select\")[0]);\r\n      } else if (annotation.className === 'buttonWidgetAnnotation checkBox' && evt.type === 'change') {\r\n        inputAnnotationHandler(annotation.getElementsByTagName(\"input\")[0]);\r\n      } else if (annotation.className === 'buttonWidgetAnnotation radioButton' && evt.type === 'change') {\r\n        const id = annotation.dataset['annotationId'];\r\n        if (id){\r\n          const anno = getAnnotationsByKey('id', id)[0];\r\n          const radioOptions = [];\r\n          for (const radioAnnotations of getAnnotationsByKey('fieldName', anno.fieldName)) \r\n            if (radioAnnotations.buttonValue) radioOptions.push(radioAnnotations.buttonValue);\r\n          inputAnnotationHandler(annotation.getElementsByTagName(\"input\")[0], {\r\n            value: anno.buttonValue,\r\n            defaultValue: anno.fieldValue,\r\n            options: radioOptions\r\n          });\r\n        }\r\n      } else if (annotation.className === 'buttonWidgetAnnotation pushButton' && evt.type === 'click'){\r\n        const id = annotation.dataset['annotationId'];\r\n        if (id){\r\n          const anno = getAnnotationsByKey('id', id)[0];\r\n          if (!anno.resetForm)\r\n            inputAnnotationHandler({name: anno.fieldName, type: \"button\"}, {actions: anno.actions, reset: false});\r\n          else\r\n            inputAnnotationHandler({name: anno.fieldName, type: \"button\"}, {actions: anno.actions, reset: true});\r\n        }  \r\n      }\r\n      // Another Annotations manage here\r\n    };\r\n\r\n    const inputAnnotationHandler = (inputEl, args) => {\r\n      switch (inputEl.type) {\r\n        case \"textarea\":\r\n        case \"text\":\r\n          emitAnnotation(FORM_TEXT, {\r\n            fieldName: inputEl.name,\r\n            value: inputEl.value\r\n          });\r\n          break;\r\n        case \"select-one\":\r\n        case \"select-multiple\":\r\n          const options = [];\r\n          for (const opt of inputEl.options) {\r\n            options.push({\r\n              value: opt.value,\r\n              label: opt.label\r\n            });\r\n          }\r\n          const selected = [];\r\n          for (const opt of inputEl.selectedOptions) {\r\n            selected.push({\r\n              value: opt.value,\r\n              label: opt.label\r\n            });\r\n          }\r\n          emitAnnotation(FORM_SELECT, {\r\n            fieldName: inputEl.name,\r\n            value: selected,\r\n            options: options\r\n          });\r\n          break;\r\n        case \"checkbox\":\r\n          emitAnnotation(FORM_CHECKBOX, {\r\n            fieldName: inputEl.name,\r\n            checked: inputEl.checked\r\n          });\r\n          break;\r\n        case \"radio\":\r\n          emitAnnotation(FORM_RADIO, {\r\n            fieldName: inputEl.name,\r\n            ...args,\r\n          });\r\n          break;\r\n        case \"button\":\r\n          emitAnnotation(FORM_BUTTON,  {\r\n            fieldName: inputEl.name,\r\n            ...args,\r\n          });\r\n      }\r\n    };\r\n\r\n    const fileAnnotationHandler = (annotation) => \r\n      emitAnnotation(FILE_ATTACHMENT, annotation.file);\r\n    \r\n\r\n    const linkAnnotationHandler = (annotation) => {\r\n      if (annotation.dest){\r\n        // Get referenced page number of internal link\r\n        PDFDoc.getPageIndex(annotation.dest[0]).then(pageIndex => {\r\n          const eventInfo = {\r\n            referencedPage: pageIndex + 1,\r\n            offset: {\r\n              left: annotation.dest[2],\r\n              bottom: annotation.dest[3]\r\n            }\r\n          };\r\n          emitAnnotation(INTERNAL_LINK, eventInfo);\r\n        });\r\n      }else if (annotation.url){\r\n        const eventInfo = {\r\n          url: annotation.url,\r\n          unsafeUrl: annotation.unsafeUrl\r\n        };\r\n        emitAnnotation(LINK, eventInfo);\r\n      }\r\n    };\r\n\r\n    const getAnnotationsByKey = (key, value) => {\r\n      const result = [];\r\n      for (const annotation of Annotations) \r\n        if (annotation[key] === value) result.push(annotation);\r\n      return result\r\n    };\r\n    \r\n    const emitAnnotation = (type, data) => {\r\n      context.emit(\"annotation\", {type: type, data: data});\r\n    };\r\n\r\n    const emitLoaded = (data) => {\r\n      context.emit(\"loaded\", data);\r\n    };\r\n\r\n    const renderPage = (pageNum) => {\r\n      PDFDoc.getPage(pageNum).then(page => {\r\n        let emitLoadedEvent = false;\r\n        const viewportParams = {\r\n          scale: props.scale\r\n        };\r\n\r\n        // Set rotation param only if is a valid number\r\n        if (typeof props.rotation === \"number\" && props.rotation % 90 === 0)\r\n          viewportParams['rotation'] = props.rotation;\r\n        \r\n        var viewport = page.getViewport(viewportParams);\r\n        var ctx = CanvasREF.value.getContext('2d');\r\n\r\n        CanvasREF.value.width = viewport.width;\r\n        CanvasREF.value.height = viewport.height;\r\n        CanvasREF.value.style.width = viewport.width+ 'px';\r\n        CanvasREF.value.style.height = viewport.height+ 'px';\r\n\r\n        // Render PDF page into canvas context\r\n        var renderContext = {\r\n          canvasContext: ctx,\r\n          viewport: viewport,\r\n        };\r\n\r\n        page.render(renderContext).promise.then(() => {\r\n          // Load text layer if prop is true\r\n          if (props.textLayer) {\r\n            page.getTextContent().then(textContent => {\r\n              TextlayerREF.value.style.left = CanvasREF.value.offsetLeft + 'px';\r\n              TextlayerREF.value.style.top = CanvasREF.value.offsetTop + 'px';\r\n              TextlayerREF.value.style.height = CanvasREF.value.offsetHeight + 'px';\r\n              TextlayerREF.value.style.width = CanvasREF.value.offsetWidth + 'px';\r\n\r\n              // Render text using TextLayerBuilder from pdfjs viewer\r\n              const TextLayerBuilder = new PDFJSViewer.TextLayerBuilder({\r\n                textLayerDiv: TextlayerREF.value, \r\n                pageIndex: page._pageIndex,\r\n                eventBus: new PDFJSViewer.EventBus(),\r\n                viewport: viewport,\r\n                enhanceTextSelection: false\r\n              });\r\n              TextLayerBuilder.setTextContent(textContent);\r\n              TextLayerBuilder.render();\r\n              TextLayerLoaded = true;\r\n            });\r\n          }\r\n\r\n          // Load annotaion layer if prop is true\r\n          if (props.annotationLayer) {\r\n            emitLoadedEvent = true;\r\n            page.getAnnotations().then(annotations => {\r\n              AnnotationlayerRef.value.style.left = CanvasREF.value.offsetLeft + 'px';\r\n              AnnotationlayerRef.value.style.top = CanvasREF.value.offsetTop + 'px';\r\n              AnnotationlayerRef.value.style.height = CanvasREF.value.offsetHeight + 'px';\r\n              AnnotationlayerRef.value.style.width = CanvasREF.value.offsetWidth + 'px';\r\n              if (props.annotationsFilter){\r\n                annotations = annotations.filter(value => {\r\n                  const filters = props.annotationsFilter;\r\n                  const subType = value.subtype;\r\n                  const fieldType = value.fieldType? `${subType}.${value.fieldType}` : null;\r\n                  \r\n                  return filters.includes(subType) || filters.includes(fieldType)\r\n                });\r\n              }\r\n\r\n              // Canvas map for push button widget\r\n              const canvasMap = new Map([]);\r\n              for (const anno of annotations) {\r\n                if (anno.subtype === \"Widget\" && anno.fieldType===\"Btn\" && anno.pushButton) {\r\n                  const canvasWidth = anno.rect[2] - anno.rect[0]; \r\n                  const canvasHeight = anno.rect[3] - anno.rect[1]; \r\n                  const subCanvas = document.createElement(\"canvas\");\r\n                  subCanvas.setAttribute(\"width\", canvasWidth);\r\n                  subCanvas.setAttribute(\"height\", canvasHeight);\r\n                  canvasMap.set(anno.id, subCanvas);\r\n                }\r\n              }\r\n              PDFJSlib.AnnotationLayer.render({\r\n                annotations: annotations,\r\n                viewport: viewport.clone({ dontFlip: true}),\r\n                page: page,\r\n                linkService: new SimpleLinkService(), // no pdfviewer features needed, send void LinkService\r\n                div: AnnotationlayerRef.value,\r\n                enableScripting: true,\r\n                hasJSActions: true,\r\n                annotationCanvasMap: canvasMap,\r\n                fieldObjects: FieldObjects\r\n              });\r\n\r\n              Annotations = annotations;\r\n              AnnotationLayerLoaded = true;\r\n              emitLoaded({...viewport, annotations: Annotations});\r\n              \r\n              // Add event listeners to manage some events of annotations layer items\r\n              for (const evtHandler of EVENTS_TO_HANDLER) \r\n                AnnotationlayerRef.value.addEventListener(evtHandler, annotationEventsHandler);\r\n            });\r\n          }\r\n          if (!emitLoadedEvent)\r\n            emitLoaded(viewport);\r\n        });\r\n      });\r\n    };\r\n\r\n    const clearLayers = () => {\r\n      // Clear all childnodes of layer elements\r\n      TextlayerREF.value.replaceChildren?.();\r\n      AnnotationlayerRef.value.replaceChildren?.();\r\n      // Clear event listeners of annotation layer \r\n      for (const evtHandler of EVENTS_TO_HANDLER) \r\n        AnnotationlayerRef.value.removeEventListener?.(evtHandler, annotationEventsHandler);\r\n    };\r\n\r\n    const initDoc = (proxy) => {\r\n      proxy.promise.then(doc => {\r\n        PDFDoc = doc;\r\n        PDFDoc.getFieldObjects().then(data => {\r\n          FieldObjects = data;\r\n        });\r\n        renderPage(props.page);\r\n      });\r\n    };\r\n\r\n    watch(() => props.pdf, (pdf) => {\r\n      // for any change in pdf proxy, rework all\r\n      if (pdf !== undefined) {\r\n        clearLayers();\r\n        initDoc(pdf);\r\n      }\r\n    });\r\n\r\n    watch(() => props.textLayer, (textLayer) => {\r\n      if (textLayer) {\r\n        // If text-layer has no been loaded before, rework the render task\r\n        if (!TextLayerLoaded) {\r\n          renderPage(props.page);\r\n        }\r\n      }\r\n    });\r\n\r\n    watch(() => props.annotationLayer, (annotationLayer) => {\r\n      if (annotationLayer){\r\n        // If annotation-layer has no been loaded before, rework the render task\r\n        if(!AnnotationLayerLoaded){\r\n          renderPage(props.page);\r\n        }\r\n      }\r\n    });\r\n\r\n    // WHhen annotations filter change rework render task\r\n    watch(() => props.annotationsFilter, () => {\r\n      clearLayers();\r\n      renderPage(props.page);\r\n    });\r\n\r\n    watch(() => props.scale, (_) => {\r\n      // When scale change rework render task\r\n      clearLayers();\r\n      renderPage(props.page);\r\n    });\r\n\r\n    watch(() => props.rotation, (_) => {\r\n      // When rotation change rework render task\r\n      clearLayers();\r\n      renderPage(props.page);\r\n    });\r\n\r\n    watch(() => props.page, (page) => {\r\n      // When page change rework render task\r\n      clearLayers();\r\n      renderPage(page);\r\n    });\r\n\r\n    onMounted(() => {\r\n      if (props.pdf !== undefined) {\r\n        initDoc(props.pdf);\r\n      }\r\n    });\r\n\r\n    return {\r\n      CanvasREF,\r\n      TextlayerREF,\r\n      AnnotationlayerRef\r\n    }\r\n  }\r\n\r\n\r\n};\n\nconst _hoisted_1 = { style: {\"position\":\"relative\",\"display\":\"block\"} };\nconst _hoisted_2 = {\n  ref: \"CanvasREF\",\n  style: {\"display\":\"inline-block\"}\n};\nconst _hoisted_3 = {\n  ref: \"AnnotationlayerRef\",\n  class: \"annotationLayer\",\n  style: {\"display\":\"block\"}\n};\nconst _hoisted_4 = {\n  ref: \"TextlayerREF\",\n  class: \"textLayer\",\n  style: {\"display\":\"block\"}\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"span\", _hoisted_1, [\n    createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */),\n    withDirectives(createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */), [\n      [vShow, _ctx.annotationLayer]\n    ]),\n    withDirectives(createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), [\n      [vShow, _ctx.textLayer]\n    ])\n  ]))\n}\n\nscript.render = render;\nscript.__file = \"src/components/VuePDF.vue\";\n\nPDFJSlib.GlobalWorkerOptions.workerSrc = PDFJSWorker;\r\n\r\n/** \r\n * @typedef {Object} UsePDFParameters \r\n * @property {string} password\r\n * Document password to unlock content\r\n * @property {function} onProgress\r\n * Callback to request a password if a wrong or no password was provided. The callback receives two parameters: a function that should be called with the new password, and a reason (see PasswordResponses). \r\n * @property {function} onPassword \r\n * Callback to be able to monitor the loading progress of the PDF file (necessary to implement e.g. a loading bar). The callback receives an OnProgressParameters argument. if this function is used option.password is ignored\r\n * @property {function} onError\r\n * Callback to be able to handle errors during loading \r\n * */\r\n\r\n/**\r\n * \r\n * @param {string | URL | TypedArray | PDFDataRangeTransport | DocumentInitParameters} src\r\n * Can be a URL where a PDF file is located, a typed array (Uint8Array) already populated with data, or a parameter object.\r\n * @param {UsePDFParameters} options\r\n * UsePDF object parameters\r\n */\r\nfunction usePDF(src, options = {\r\n  onProgress: undefined,\r\n  onPassword: undefined,\r\n  onError: undefined,\r\n  password: ''\r\n}) {\r\n  const pdf = ref();\r\n  const pages = ref(0);\r\n  const info = ref({\r\n    metadata: {},\r\n    attachments: {},\r\n    javascript: {}\r\n  });\r\n\r\n  const loadingTask = PDFJSlib.getDocument(src);\r\n  loadingTask.onProgress = options?.onProgress;\r\n  loadingTask.onPassword = options?.onPassword \r\n  ? options.onPassword : options.password \r\n  ? (updatePassword, _) => {\r\n    updatePassword(options.password);\r\n  } : undefined;\r\n\r\n  loadingTask.promise.then((doc) => {\r\n    pdf.value = doc.loadingTask;\r\n    pages.value = doc.numPages;\r\n    doc.getMetadata().then(data => {\r\n      info.value.metadata = data;\r\n    });\r\n    doc.getAttachments().then(data => {\r\n      info.value.attachments = data;\r\n    });\r\n    doc.getJavaScript().then(data => {\r\n      info.value.javascript = data;\r\n    });\r\n  }, (reason) => {\r\n    // PDF loading error\r\n    if(typeof options.onError === 'function') {\r\n      options.onError(reason);\r\n    }\r\n  });\r\n\r\n  return {\r\n    pdf,\r\n    pages,\r\n    info\r\n  };\r\n}\n\nconst plugin = {\r\n    install(Vue) {\r\n        Vue.component(script.name, script);\r\n    }\r\n};\n\nexport { script as VuePDF, plugin as default, usePDF };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}