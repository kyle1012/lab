{"ast":null,"code":"import debounce from 'lodash.debounce';\nimport FOCUSABLE_ELEMENTS from '@uppy/utils/lib/FOCUSABLE_ELEMENTS';\nimport getActiveOverlayEl from './getActiveOverlayEl.js';\n/*\n  Focuses on some element in the currently topmost overlay.\n\n  1. If there are some [data-uppy-super-focusable] elements rendered already - focuses\n     on the first superfocusable element, and leaves focus up to the control of\n     a user (until currently focused element disappears from the screen [which\n     can happen when overlay changes, or, e.g., when we click on a folder in googledrive]).\n  2. If there are no [data-uppy-super-focusable] elements yet (or ever) - focuses\n     on the first focusable element, but switches focus if superfocusable elements appear on next render.\n*/\n\nexport default function createSuperFocus() {\n  let lastFocusWasOnSuperFocusableEl = false;\n  const superFocus = (dashboardEl, activeOverlayType) => {\n    const overlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n    const isFocusInOverlay = overlayEl.contains(document.activeElement); // If focus is already in the topmost overlay, AND on last update we focused on the superfocusable\n    // element - then leave focus up to the user.\n    // [Practical check] without this line, typing in the search input in googledrive overlay won't work.\n\n    if (isFocusInOverlay && lastFocusWasOnSuperFocusableEl) return;\n    const superFocusableEl = overlayEl.querySelector('[data-uppy-super-focusable]'); // If we are already in the topmost overlay, AND there are no super focusable elements yet, - leave focus up to the user.\n    // [Practical check] without this line, if you are in an empty folder in google drive, and something's uploading in the\n    // bg, - focus will be jumping to Done all the time.\n\n    if (isFocusInOverlay && !superFocusableEl) return;\n    if (superFocusableEl) {\n      superFocusableEl.focus({\n        preventScroll: true\n      });\n      lastFocusWasOnSuperFocusableEl = true;\n    } else {\n      const firstEl = overlayEl.querySelector(FOCUSABLE_ELEMENTS);\n      firstEl == null ? void 0 : firstEl.focus({\n        preventScroll: true\n      });\n      lastFocusWasOnSuperFocusableEl = false;\n    }\n  }; // ___Why do we need to debounce?\n  //    1. To deal with animations: overlay changes via animations, which results in the DOM updating AFTER plugin.update()\n  //       already executed.\n  //    [Practical check] without debounce, if we open the Url overlay, and click 'Done', Dashboard won't get focused again.\n  //    [Practical check] if we delay 250ms instead of 260ms - IE11 won't get focused in same situation.\n  //    2. Performance: there can be many state update()s in a second, and this function is called every time.\n\n  return debounce(superFocus, 260);\n}","map":{"version":3,"names":["debounce","FOCUSABLE_ELEMENTS","getActiveOverlayEl","createSuperFocus","lastFocusWasOnSuperFocusableEl","superFocus","dashboardEl","activeOverlayType","overlayEl","isFocusInOverlay","contains","document","activeElement","superFocusableEl","querySelector","focus","preventScroll","firstEl"],"sources":["/lab/node_modules/@uppy/dashboard/lib/utils/createSuperFocus.js"],"sourcesContent":["import debounce from 'lodash.debounce';\nimport FOCUSABLE_ELEMENTS from '@uppy/utils/lib/FOCUSABLE_ELEMENTS';\nimport getActiveOverlayEl from './getActiveOverlayEl.js';\n/*\n  Focuses on some element in the currently topmost overlay.\n\n  1. If there are some [data-uppy-super-focusable] elements rendered already - focuses\n     on the first superfocusable element, and leaves focus up to the control of\n     a user (until currently focused element disappears from the screen [which\n     can happen when overlay changes, or, e.g., when we click on a folder in googledrive]).\n  2. If there are no [data-uppy-super-focusable] elements yet (or ever) - focuses\n     on the first focusable element, but switches focus if superfocusable elements appear on next render.\n*/\n\nexport default function createSuperFocus() {\n  let lastFocusWasOnSuperFocusableEl = false;\n\n  const superFocus = (dashboardEl, activeOverlayType) => {\n    const overlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n    const isFocusInOverlay = overlayEl.contains(document.activeElement); // If focus is already in the topmost overlay, AND on last update we focused on the superfocusable\n    // element - then leave focus up to the user.\n    // [Practical check] without this line, typing in the search input in googledrive overlay won't work.\n\n    if (isFocusInOverlay && lastFocusWasOnSuperFocusableEl) return;\n    const superFocusableEl = overlayEl.querySelector('[data-uppy-super-focusable]'); // If we are already in the topmost overlay, AND there are no super focusable elements yet, - leave focus up to the user.\n    // [Practical check] without this line, if you are in an empty folder in google drive, and something's uploading in the\n    // bg, - focus will be jumping to Done all the time.\n\n    if (isFocusInOverlay && !superFocusableEl) return;\n\n    if (superFocusableEl) {\n      superFocusableEl.focus({\n        preventScroll: true\n      });\n      lastFocusWasOnSuperFocusableEl = true;\n    } else {\n      const firstEl = overlayEl.querySelector(FOCUSABLE_ELEMENTS);\n      firstEl == null ? void 0 : firstEl.focus({\n        preventScroll: true\n      });\n      lastFocusWasOnSuperFocusableEl = false;\n    }\n  }; // ___Why do we need to debounce?\n  //    1. To deal with animations: overlay changes via animations, which results in the DOM updating AFTER plugin.update()\n  //       already executed.\n  //    [Practical check] without debounce, if we open the Url overlay, and click 'Done', Dashboard won't get focused again.\n  //    [Practical check] if we delay 250ms instead of 260ms - IE11 won't get focused in same situation.\n  //    2. Performance: there can be many state update()s in a second, and this function is called every time.\n\n\n  return debounce(superFocus, 260);\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,gBAAgB,GAAG;EACzC,IAAIC,8BAA8B,GAAG,KAAK;EAE1C,MAAMC,UAAU,GAAG,CAACC,WAAW,EAAEC,iBAAiB,KAAK;IACrD,MAAMC,SAAS,GAAGN,kBAAkB,CAACI,WAAW,EAAEC,iBAAiB,CAAC;IACpE,MAAME,gBAAgB,GAAGD,SAAS,CAACE,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;IACrE;IACA;;IAEA,IAAIH,gBAAgB,IAAIL,8BAA8B,EAAE;IACxD,MAAMS,gBAAgB,GAAGL,SAAS,CAACM,aAAa,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACjF;IACA;;IAEA,IAAIL,gBAAgB,IAAI,CAACI,gBAAgB,EAAE;IAE3C,IAAIA,gBAAgB,EAAE;MACpBA,gBAAgB,CAACE,KAAK,CAAC;QACrBC,aAAa,EAAE;MACjB,CAAC,CAAC;MACFZ,8BAA8B,GAAG,IAAI;IACvC,CAAC,MAAM;MACL,MAAMa,OAAO,GAAGT,SAAS,CAACM,aAAa,CAACb,kBAAkB,CAAC;MAC3DgB,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACF,KAAK,CAAC;QACvCC,aAAa,EAAE;MACjB,CAAC,CAAC;MACFZ,8BAA8B,GAAG,KAAK;IACxC;EACF,CAAC,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA;;EAGA,OAAOJ,QAAQ,CAACK,UAAU,EAAE,GAAG,CAAC;AAClC"},"metadata":{},"sourceType":"module"}