{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"uppy UppyDragDrop\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0,\n  class: \"UppyDragDrop-Progress\"\n};\nconst _hoisted_3 = {\n  class: \"uploaded-images\"\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $props.withProgress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, img => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      src: img.data.url,\n      class: \"img\"\n    }, null, 8 /* PROPS */, _hoisted_4);\n  }), 256 /* UNKEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;gEAEIA,oBAAqC;EAAhCC,KAAK,EAAC;AAAmB;;;EACJA,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAiB;;;uBAH/BC,oBAMM,cALJC,UAAqC,EACzBC,mBAAY,kBAAvBF,oBAA6D,OAA7DG,UAA6D,wCAC7DL,oBAEM,OAFNM,UAEM,sBADJJ,oBAA6DK,6BAA1CC,YAAM,EAAbC,GAAG;yBAAfP,oBAA6D;MAAjCQ,GAAG,EAAED,GAAG,CAACE,IAAI,CAACC,GAAG;MAAEX,KAAK,EAAC","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","$props","_hoisted_2","_hoisted_3","_Fragment","$data","img","src","data","url"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"uppy UppyDragDrop\"></div>\n     <div v-if='withProgress' class=\"UppyDragDrop-Progress\"></div>\n     <div class='uploaded-images' >\n       <img v-for='img in images' :src='img.data.url' class='img' />\n     </div>\n  </div>\n  </template>\n  \n  <script>\n  const Uppy = require('uppy/lib/core/Core')\n  const DragDrop = require('uppy/lib/plugins/DragDrop')\n  const ProgressBar = require('uppy/lib/plugins/ProgressBar')\n  const Tus10 = require('uppy/lib/plugins/Tus10')\n  const uppy = new Uppy({debug: true})\n  export default {\n    name: 'hello',\n    props: {\n      withProgress: { type: Boolean, default: true }\n    },\n    data () {\n      return {\n        images: [],\n        bytesUploaded: 0,\n        bytesTotal: 0,\n        showProgress: false\n      }\n    },\n    mounted () {\n      let vm = this\n      uppy\n        .use(DragDrop, {target: '.UppyDragDrop'})\n        .use(Tus10, {endpoint: '//master.tus.io/files/'})\n        .use(ProgressBar, {target: '.UppyDragDrop-Progress'})\n        .run()\n      uppy.on('core:upload-progress', (data) => {\n        vm.$emit('core:upload-progress', data)\n        this.bytesUploaded = data.bytesUploaded\n        // console.log(data.id, data.bytesUploaded, data.bytesTotal)\n      })\n      uppy.on('core:upload-success', (fileId, payload) => {\n        let data = { fileId: fileId, data: payload }\n        vm.$emit('core:upload-success', data)\n        /* var img = new Image()\n        img.width = 300\n        img.alt = fileId\n        img.src = url */\n        this.images.push(data)\n        // document.body.appendChild(img)\n      })\n      uppy.on('core:success', (fileCount) => {\n        vm.$emit('core:success', fileCount)\n        this.showProgress = false\n      })\n    }\n  }\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n  .UppyDragDrop-Progress {\n    position: relative;\n  }\n  .UppyDragDrop-Upload {\n    display: block;\n    margin: auto;\n    padding: 5px 15px;\n    font-size: 12px;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    border: 0;\n    border: 1px solid gray;\n    background: none;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n  .UppyDragDrop-Upload:hover {\n    background: gray;\n  }\n  .img { max-width: 100px; }\n  </style>"]},"metadata":{},"sourceType":"module"}