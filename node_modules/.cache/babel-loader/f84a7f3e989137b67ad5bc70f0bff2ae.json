{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst Uppy = require('uppy/lib/core/Core');\nconst DragDrop = require('uppy/lib/plugins/DragDrop');\nconst ProgressBar = require('uppy/lib/plugins/ProgressBar');\nconst Tus10 = require('uppy/lib/plugins/Tus10');\nconst uppy = new Uppy({\n  debug: true\n});\nexport default {\n  name: 'hello',\n  props: {\n    withProgress: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      images: [],\n      bytesUploaded: 0,\n      bytesTotal: 0,\n      showProgress: false\n    };\n  },\n  mounted() {\n    let vm = this;\n    uppy.use(DragDrop, {\n      target: '.UppyDragDrop'\n    }).use(Tus10, {\n      endpoint: '//master.tus.io/files/'\n    }).use(ProgressBar, {\n      target: '.UppyDragDrop-Progress'\n    }).run();\n    uppy.on('core:upload-progress', data => {\n      vm.$emit('core:upload-progress', data);\n      this.bytesUploaded = data.bytesUploaded;\n      // console.log(data.id, data.bytesUploaded, data.bytesTotal)\n    });\n\n    uppy.on('core:upload-success', (fileId, payload) => {\n      let data = {\n        fileId: fileId,\n        data: payload\n      };\n      vm.$emit('core:upload-success', data);\n      /* var img = new Image()\n      img.width = 300\n      img.alt = fileId\n      img.src = url */\n      this.images.push(data);\n      // document.body.appendChild(img)\n    });\n\n    uppy.on('core:success', fileCount => {\n      vm.$emit('core:success', fileCount);\n      this.showProgress = false;\n    });\n  }\n};","map":{"version":3,"mappings":";AAWE,MAAMA,IAAG,GAAIC,OAAO,CAAC,oBAAoB;AACzC,MAAMC,QAAO,GAAID,OAAO,CAAC,2BAA2B;AACpD,MAAME,WAAU,GAAIF,OAAO,CAAC,8BAA8B;AAC1D,MAAMG,KAAI,GAAIH,OAAO,CAAC,wBAAwB;AAC9C,MAAMI,IAAG,GAAI,IAAIL,IAAI,CAAC;EAACM,KAAK,EAAE;AAAI,CAAC;AACnC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE;IACLC,YAAY,EAAE;MAAEC,IAAI,EAAEC,OAAO;MAAEC,OAAO,EAAE;IAAK;EAC/C,CAAC;EACDC,IAAG,GAAK;IACN,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAM,GAAK;IACT,IAAIC,EAAC,GAAI,IAAG;IACZd,IAAG,CACAe,GAAG,CAAClB,QAAQ,EAAE;MAACmB,MAAM,EAAE;IAAe,CAAC,EACvCD,GAAG,CAAChB,KAAK,EAAE;MAACkB,QAAQ,EAAE;IAAwB,CAAC,EAC/CF,GAAG,CAACjB,WAAW,EAAE;MAACkB,MAAM,EAAE;IAAwB,CAAC,EACnDE,GAAG,EAAC;IACPlB,IAAI,CAACmB,EAAE,CAAC,sBAAsB,EAAGX,IAAI,IAAK;MACxCM,EAAE,CAACM,KAAK,CAAC,sBAAsB,EAAEZ,IAAI;MACrC,IAAI,CAACE,aAAY,GAAIF,IAAI,CAACE,aAAY;MACtC;IACF,CAAC;;IACDV,IAAI,CAACmB,EAAE,CAAC,qBAAqB,EAAE,CAACE,MAAM,EAAEC,OAAO,KAAK;MAClD,IAAId,IAAG,GAAI;QAAEa,MAAM,EAAEA,MAAM;QAAEb,IAAI,EAAEc;MAAQ;MAC3CR,EAAE,CAACM,KAAK,CAAC,qBAAqB,EAAEZ,IAAI;MACpC;;;;MAIA,IAAI,CAACC,MAAM,CAACc,IAAI,CAACf,IAAI;MACrB;IACF,CAAC;;IACDR,IAAI,CAACmB,EAAE,CAAC,cAAc,EAAGK,SAAS,IAAK;MACrCV,EAAE,CAACM,KAAK,CAAC,cAAc,EAAEI,SAAS;MAClC,IAAI,CAACZ,YAAW,GAAI,KAAI;IAC1B,CAAC;EACH;AACF","names":["Uppy","require","DragDrop","ProgressBar","Tus10","uppy","debug","name","props","withProgress","type","Boolean","default","data","images","bytesUploaded","bytesTotal","showProgress","mounted","vm","use","target","endpoint","run","on","$emit","fileId","payload","push","fileCount"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"uppy UppyDragDrop\"></div>\n     <div v-if='withProgress' class=\"UppyDragDrop-Progress\"></div>\n     <div class='uploaded-images' >\n       <img v-for='img in images' :src='img.data.url' class='img' />\n     </div>\n  </div>\n  </template>\n  \n  <script>\n  const Uppy = require('uppy/lib/core/Core')\n  const DragDrop = require('uppy/lib/plugins/DragDrop')\n  const ProgressBar = require('uppy/lib/plugins/ProgressBar')\n  const Tus10 = require('uppy/lib/plugins/Tus10')\n  const uppy = new Uppy({debug: true})\n  export default {\n    name: 'hello',\n    props: {\n      withProgress: { type: Boolean, default: true }\n    },\n    data () {\n      return {\n        images: [],\n        bytesUploaded: 0,\n        bytesTotal: 0,\n        showProgress: false\n      }\n    },\n    mounted () {\n      let vm = this\n      uppy\n        .use(DragDrop, {target: '.UppyDragDrop'})\n        .use(Tus10, {endpoint: '//master.tus.io/files/'})\n        .use(ProgressBar, {target: '.UppyDragDrop-Progress'})\n        .run()\n      uppy.on('core:upload-progress', (data) => {\n        vm.$emit('core:upload-progress', data)\n        this.bytesUploaded = data.bytesUploaded\n        // console.log(data.id, data.bytesUploaded, data.bytesTotal)\n      })\n      uppy.on('core:upload-success', (fileId, payload) => {\n        let data = { fileId: fileId, data: payload }\n        vm.$emit('core:upload-success', data)\n        /* var img = new Image()\n        img.width = 300\n        img.alt = fileId\n        img.src = url */\n        this.images.push(data)\n        // document.body.appendChild(img)\n      })\n      uppy.on('core:success', (fileCount) => {\n        vm.$emit('core:success', fileCount)\n        this.showProgress = false\n      })\n    }\n  }\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n  .UppyDragDrop-Progress {\n    position: relative;\n  }\n  .UppyDragDrop-Upload {\n    display: block;\n    margin: auto;\n    padding: 5px 15px;\n    font-size: 12px;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    border: 0;\n    border: 1px solid gray;\n    background: none;\n    cursor: pointer;\n    margin-top: 15px;\n  }\n  .UppyDragDrop-Upload:hover {\n    background: gray;\n  }\n  .img { max-width: 100px; }\n  </style>"]},"metadata":{},"sourceType":"module"}