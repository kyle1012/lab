{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Adapted from preact-virtual-list: https://github.com/developit/preact-virtual-list\n *\n * © 2016 Jason Miller\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * Adaptations:\n * - Added role=presentation to helper elements\n * - Tweaked styles for Uppy's Dashboard use case\n */\nimport { h, Component } from 'preact';\nconst STYLE_INNER = {\n  position: 'relative',\n  // Disabled for our use case: the wrapper elements around FileList already deal with overflow,\n  // and this additional property would hide things that we want to show.\n  //\n  // overflow: 'hidden',\n  width: '100%',\n  minHeight: '100%'\n};\nconst STYLE_CONTENT = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  // Because the `top` value gets set to some offset, this `height` being 100% would make the scrollbar\n  // stretch far beyond the content. For our use case, the content div actually can get its height from\n  // the elements inside it, so we don't need to specify a `height` property at all.\n  //\n  // height: '100%',\n  width: '100%',\n  overflow: 'visible'\n};\nclass VirtualList extends Component {\n  constructor(props) {\n    super(props); // The currently focused node, used to retain focus when the visible rows change.\n    // To avoid update loops, this should not cause state updates, so it's kept as a plain property.\n\n    this.handleScroll = () => {\n      this.setState({\n        offset: this.base.scrollTop\n      });\n    };\n    this.handleResize = () => {\n      this.resize();\n    };\n    this.focusElement = null;\n    this.state = {\n      offset: 0,\n      height: 0\n    };\n  }\n  componentDidMount() {\n    this.resize();\n    window.addEventListener('resize', this.handleResize);\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n  componentWillUpdate() {\n    if (this.base.contains(document.activeElement)) {\n      this.focusElement = document.activeElement;\n    }\n  }\n  componentDidUpdate() {\n    // Maintain focus when rows are added and removed.\n    if (this.focusElement && this.focusElement.parentNode && document.activeElement !== this.focusElement) {\n      this.focusElement.focus();\n    }\n    this.focusElement = null;\n    this.resize();\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n  resize() {\n    const {\n      height\n    } = this.state;\n    if (height !== this.base.offsetHeight) {\n      this.setState({\n        height: this.base.offsetHeight\n      });\n    }\n  }\n  render(_ref) {\n    let {\n      data,\n      rowHeight,\n      renderRow,\n      overscanCount = 10,\n      ...props\n    } = _ref;\n    const {\n      offset,\n      height\n    } = this.state; // first visible row index\n\n    let start = Math.floor(offset / rowHeight); // actual number of visible rows (without overscan)\n\n    let visibleRowCount = Math.floor(height / rowHeight); // Overscan: render blocks of rows modulo an overscan row count\n    // This dramatically reduces DOM writes during scrolling\n\n    if (overscanCount) {\n      start = Math.max(0, start - start % overscanCount);\n      visibleRowCount += overscanCount;\n    } // last visible + overscan row index + padding to allow keyboard focus to travel past the visible area\n\n    const end = start + visibleRowCount + 4; // data slice currently in viewport plus overscan items\n\n    const selection = data.slice(start, end);\n    const styleInner = {\n      ...STYLE_INNER,\n      height: data.length * rowHeight\n    };\n    const styleContent = {\n      ...STYLE_CONTENT,\n      top: start * rowHeight\n    }; // The `role=\"presentation\"` attributes ensure that these wrapper elements are not treated as list\n    // items by accessibility and outline tools.\n\n    return (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      h(\"div\", _extends({\n        onScroll: this.handleScroll\n      }, props), h(\"div\", {\n        role: \"presentation\",\n        style: styleInner\n      }, h(\"div\", {\n        role: \"presentation\",\n        style: styleContent\n      }, selection.map(renderRow))))\n    );\n  }\n}\nexport default VirtualList;","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","h","Component","STYLE_INNER","position","width","minHeight","STYLE_CONTENT","top","left","overflow","VirtualList","constructor","props","handleScroll","setState","offset","base","scrollTop","handleResize","resize","focusElement","state","height","componentDidMount","window","addEventListener","componentWillUpdate","contains","document","activeElement","componentDidUpdate","parentNode","focus","componentWillUnmount","removeEventListener","offsetHeight","render","_ref","data","rowHeight","renderRow","overscanCount","start","Math","floor","visibleRowCount","max","end","selection","slice","styleInner","styleContent","onScroll","role","style","map"],"sources":["/lab/node_modules/@uppy/dashboard/lib/components/VirtualList.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Adapted from preact-virtual-list: https://github.com/developit/preact-virtual-list\n *\n * © 2016 Jason Miller\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * Adaptations:\n * - Added role=presentation to helper elements\n * - Tweaked styles for Uppy's Dashboard use case\n */\nimport { h, Component } from 'preact';\nconst STYLE_INNER = {\n  position: 'relative',\n  // Disabled for our use case: the wrapper elements around FileList already deal with overflow,\n  // and this additional property would hide things that we want to show.\n  //\n  // overflow: 'hidden',\n  width: '100%',\n  minHeight: '100%'\n};\nconst STYLE_CONTENT = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  // Because the `top` value gets set to some offset, this `height` being 100% would make the scrollbar\n  // stretch far beyond the content. For our use case, the content div actually can get its height from\n  // the elements inside it, so we don't need to specify a `height` property at all.\n  //\n  // height: '100%',\n  width: '100%',\n  overflow: 'visible'\n};\n\nclass VirtualList extends Component {\n  constructor(props) {\n    super(props); // The currently focused node, used to retain focus when the visible rows change.\n    // To avoid update loops, this should not cause state updates, so it's kept as a plain property.\n\n    this.handleScroll = () => {\n      this.setState({\n        offset: this.base.scrollTop\n      });\n    };\n\n    this.handleResize = () => {\n      this.resize();\n    };\n\n    this.focusElement = null;\n    this.state = {\n      offset: 0,\n      height: 0\n    };\n  }\n\n  componentDidMount() {\n    this.resize();\n    window.addEventListener('resize', this.handleResize);\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n\n  componentWillUpdate() {\n    if (this.base.contains(document.activeElement)) {\n      this.focusElement = document.activeElement;\n    }\n  }\n\n  componentDidUpdate() {\n    // Maintain focus when rows are added and removed.\n    if (this.focusElement && this.focusElement.parentNode && document.activeElement !== this.focusElement) {\n      this.focusElement.focus();\n    }\n\n    this.focusElement = null;\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  resize() {\n    const {\n      height\n    } = this.state;\n\n    if (height !== this.base.offsetHeight) {\n      this.setState({\n        height: this.base.offsetHeight\n      });\n    }\n  }\n\n  render(_ref) {\n    let {\n      data,\n      rowHeight,\n      renderRow,\n      overscanCount = 10,\n      ...props\n    } = _ref;\n    const {\n      offset,\n      height\n    } = this.state; // first visible row index\n\n    let start = Math.floor(offset / rowHeight); // actual number of visible rows (without overscan)\n\n    let visibleRowCount = Math.floor(height / rowHeight); // Overscan: render blocks of rows modulo an overscan row count\n    // This dramatically reduces DOM writes during scrolling\n\n    if (overscanCount) {\n      start = Math.max(0, start - start % overscanCount);\n      visibleRowCount += overscanCount;\n    } // last visible + overscan row index + padding to allow keyboard focus to travel past the visible area\n\n\n    const end = start + visibleRowCount + 4; // data slice currently in viewport plus overscan items\n\n    const selection = data.slice(start, end);\n    const styleInner = { ...STYLE_INNER,\n      height: data.length * rowHeight\n    };\n    const styleContent = { ...STYLE_CONTENT,\n      top: start * rowHeight\n    }; // The `role=\"presentation\"` attributes ensure that these wrapper elements are not treated as list\n    // items by accessibility and outline tools.\n\n    return (// eslint-disable-next-line react/jsx-props-no-spreading\n      h(\"div\", _extends({\n        onScroll: this.handleScroll\n      }, props), h(\"div\", {\n        role: \"presentation\",\n        style: styleInner\n      }, h(\"div\", {\n        role: \"presentation\",\n        style: styleContent\n      }, selection.map(renderRow))))\n    );\n  }\n\n}\n\nexport default VirtualList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}