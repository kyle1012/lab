{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"Uppy\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\",\n  name: \"files[]\",\n  multiple: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<p>IP주소 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"IP주소 입력.\\\"></p><p>담당자 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"할일을 입력해주세요.\\\"></p><p>유선MAC : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"할일을 입력해주세요.\\\"></p><p>무선MAC : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"할일을 입력해주세요.\\\"></p><p>구분 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"임직원\\\"></p><p>부서 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"할일을 입력해주세요.\\\"></p><p>ID : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"할일을 입력해주세요.\\\"></p><p>용도 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"작성필요\\\"></p><p>단말기 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"노트북\\\"></p><p>이력 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"작성필요\\\"></p><p>비고 : <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"기안문서 번호\\\"></p>\", 11);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.formSubmit && _ctx.formSubmit(...args), [\"prevent\"])),\n    method: \"post\"\n  }, [_hoisted_3, _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: _ctx.isUploading\n  }, \"Upload\", 8 /* PROPS */, _hoisted_4)], 32 /* HYDRATE_EVENTS */)]), _hoisted_5]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAM;gCAEhBC,oBAA8C;EAAvCC,IAAI,EAAC,MAAM;EAACC,IAAI,EAAC,SAAS;EAACC,QAAQ,EAAC;;;;;uBAH9CC,oBAkBM,OAlBNC,UAkBM,GAjBJL,oBAKI,OALJM,UAKI,GAJHN,oBAGI;IAHGO,QAAM,wDAAUC,2CAAU;IAAEC,MAAM,EAAC;MAC1CC,UAA8C,EAC9CV,oBAA6D;IAArDC,IAAI,EAAC,QAAQ;IAAEU,QAAQ,EAAEH;KAAa,QAAM,2DAGnDI,UAA+E","names":["id","class","_createElementVNode","type","name","multiple","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_ctx","method","_hoisted_3","disabled","_hoisted_5"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"Uppy\">\n     <form @submit.prevent=\"formSubmit\" method=\"post\">\n     <input type=\"file\" name=\"files[]\" multiple=\"\">\n     <button type=\"submit\" :disabled=\"isUploading\">Upload</button>\n  </form>\n  </div>\n      <p>IP주소 : <input type=\"text\" class=\"form-control\" placeholder=\"IP주소 입력.\" /></p>\n      <p>담당자 : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>유선MAC : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>무선MAC : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>구분 : <input type=\"text\" class=\"form-control\" placeholder=\"임직원\" /></p>\n      <p>부서 : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>ID : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>용도 : <input type=\"text\" class=\"form-control\" placeholder=\"작성필요\" /></p>\n      <p>단말기 : <input type=\"text\" class=\"form-control\" placeholder=\"노트북\" /></p>\n      <p>이력 : <input type=\"text\" class=\"form-control\" placeholder=\"작성필요\" /></p>\n      <p>비고 : <input type=\"text\" class=\"form-control\" placeholder=\"기안문서 번호\" /></p>\n  </div>\n</template>\n\n<script>\n\nimport \"@uppy/core/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nconst uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" }\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  httpbody = response.body\n})\nexport default {\n  name: \"Hello\",\n  components: {\n  },\n  data: () => {\n    return {\n      uppy,\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}