{"ast":null,"code":"import { cloneElement, Component, toChildArray } from 'preact';\nimport classNames from 'classnames';\nconst transitionName = 'uppy-transition-slideDownUp';\nconst duration = 250;\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cachedChildren: null,\n      className: ''\n    };\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n  componentWillUpdate(nextProps) {\n    const {\n      cachedChildren\n    } = this.state;\n    const child = toChildArray(nextProps.children)[0];\n    if (cachedChildren === child) return null;\n    const patch = {\n      cachedChildren: child\n    }; // Enter transition\n\n    if (child && !cachedChildren) {\n      patch.className = `${transitionName}-enter`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.leaveTimeout);\n      this.leaveTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        // Force it to render before we add the active class\n        // this.base.getBoundingClientRect()\n        this.setState({\n          className: `${transitionName}-enter ${transitionName}-enter-active`\n        });\n        this.enterTimeout = setTimeout(() => {\n          this.setState({\n            className: ''\n          });\n        }, duration);\n      });\n    } // Leave transition\n\n    if (cachedChildren && !child && this.leaveTimeout === undefined) {\n      patch.cachedChildren = cachedChildren;\n      patch.className = `${transitionName}-leave`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.enterTimeout);\n      this.enterTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        this.setState({\n          className: `${transitionName}-leave ${transitionName}-leave-active`\n        });\n        this.leaveTimeout = setTimeout(() => {\n          this.setState({\n            cachedChildren: null,\n            className: ''\n          });\n        }, duration);\n      });\n    } // eslint-disable-next-line\n\n    this.setState(patch);\n  }\n  render() {\n    const {\n      cachedChildren,\n      className\n    } = this.state;\n    if (!cachedChildren) {\n      return null;\n    }\n    return cloneElement(cachedChildren, {\n      className: classNames(className, cachedChildren.props.className)\n    });\n  }\n}\nexport default Slide;","map":{"version":3,"names":["cloneElement","Component","toChildArray","classNames","transitionName","duration","Slide","constructor","props","state","cachedChildren","className","componentWillUpdate","nextProps","child","children","patch","cancelAnimationFrame","animationFrame","clearTimeout","leaveTimeout","undefined","requestAnimationFrame","setState","enterTimeout","setTimeout","render"],"sources":["/lab/node_modules/@uppy/dashboard/lib/components/Slide.js"],"sourcesContent":["import { cloneElement, Component, toChildArray } from 'preact';\nimport classNames from 'classnames';\nconst transitionName = 'uppy-transition-slideDownUp';\nconst duration = 250;\n/**\n * Vertical slide transition.\n *\n * This can take a _single_ child component, which _must_ accept a `className` prop.\n *\n * Currently this is specific to the `uppy-transition-slideDownUp` transition,\n * but it should be simple to extend this for any type of single-element\n * transition by setting the CSS name and duration as props.\n */\n\nclass Slide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cachedChildren: null,\n      className: ''\n    };\n  } // TODO: refactor to stable lifecycle method\n  // eslint-disable-next-line\n\n\n  componentWillUpdate(nextProps) {\n    const {\n      cachedChildren\n    } = this.state;\n    const child = toChildArray(nextProps.children)[0];\n    if (cachedChildren === child) return null;\n    const patch = {\n      cachedChildren: child\n    }; // Enter transition\n\n    if (child && !cachedChildren) {\n      patch.className = `${transitionName}-enter`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.leaveTimeout);\n      this.leaveTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        // Force it to render before we add the active class\n        // this.base.getBoundingClientRect()\n        this.setState({\n          className: `${transitionName}-enter ${transitionName}-enter-active`\n        });\n        this.enterTimeout = setTimeout(() => {\n          this.setState({\n            className: ''\n          });\n        }, duration);\n      });\n    } // Leave transition\n\n\n    if (cachedChildren && !child && this.leaveTimeout === undefined) {\n      patch.cachedChildren = cachedChildren;\n      patch.className = `${transitionName}-leave`;\n      cancelAnimationFrame(this.animationFrame);\n      clearTimeout(this.enterTimeout);\n      this.enterTimeout = undefined;\n      this.animationFrame = requestAnimationFrame(() => {\n        this.setState({\n          className: `${transitionName}-leave ${transitionName}-leave-active`\n        });\n        this.leaveTimeout = setTimeout(() => {\n          this.setState({\n            cachedChildren: null,\n            className: ''\n          });\n        }, duration);\n      });\n    } // eslint-disable-next-line\n\n\n    this.setState(patch);\n  }\n\n  render() {\n    const {\n      cachedChildren,\n      className\n    } = this.state;\n\n    if (!cachedChildren) {\n      return null;\n    }\n\n    return cloneElement(cachedChildren, {\n      className: classNames(className, cachedChildren.props.className)\n    });\n  }\n\n}\n\nexport default Slide;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,SAAS,EAAEC,YAAY,QAAQ,QAAQ;AAC9D,OAAOC,UAAU,MAAM,YAAY;AACnC,MAAMC,cAAc,GAAG,6BAA6B;AACpD,MAAMC,QAAQ,GAAG,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5BM,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC,CAAC;EACF;;EAGAC,mBAAmB,CAACC,SAAS,EAAE;IAC7B,MAAM;MACJH;IACF,CAAC,GAAG,IAAI,CAACD,KAAK;IACd,MAAMK,KAAK,GAAGZ,YAAY,CAACW,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjD,IAAIL,cAAc,KAAKI,KAAK,EAAE,OAAO,IAAI;IACzC,MAAME,KAAK,GAAG;MACZN,cAAc,EAAEI;IAClB,CAAC,CAAC,CAAC;;IAEH,IAAIA,KAAK,IAAI,CAACJ,cAAc,EAAE;MAC5BM,KAAK,CAACL,SAAS,GAAI,GAAEP,cAAe,QAAO;MAC3Ca,oBAAoB,CAAC,IAAI,CAACC,cAAc,CAAC;MACzCC,YAAY,CAAC,IAAI,CAACC,YAAY,CAAC;MAC/B,IAAI,CAACA,YAAY,GAAGC,SAAS;MAC7B,IAAI,CAACH,cAAc,GAAGI,qBAAqB,CAAC,MAAM;QAChD;QACA;QACA,IAAI,CAACC,QAAQ,CAAC;UACZZ,SAAS,EAAG,GAAEP,cAAe,UAASA,cAAe;QACvD,CAAC,CAAC;QACF,IAAI,CAACoB,YAAY,GAAGC,UAAU,CAAC,MAAM;UACnC,IAAI,CAACF,QAAQ,CAAC;YACZZ,SAAS,EAAE;UACb,CAAC,CAAC;QACJ,CAAC,EAAEN,QAAQ,CAAC;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;;IAGF,IAAIK,cAAc,IAAI,CAACI,KAAK,IAAI,IAAI,CAACM,YAAY,KAAKC,SAAS,EAAE;MAC/DL,KAAK,CAACN,cAAc,GAAGA,cAAc;MACrCM,KAAK,CAACL,SAAS,GAAI,GAAEP,cAAe,QAAO;MAC3Ca,oBAAoB,CAAC,IAAI,CAACC,cAAc,CAAC;MACzCC,YAAY,CAAC,IAAI,CAACK,YAAY,CAAC;MAC/B,IAAI,CAACA,YAAY,GAAGH,SAAS;MAC7B,IAAI,CAACH,cAAc,GAAGI,qBAAqB,CAAC,MAAM;QAChD,IAAI,CAACC,QAAQ,CAAC;UACZZ,SAAS,EAAG,GAAEP,cAAe,UAASA,cAAe;QACvD,CAAC,CAAC;QACF,IAAI,CAACgB,YAAY,GAAGK,UAAU,CAAC,MAAM;UACnC,IAAI,CAACF,QAAQ,CAAC;YACZb,cAAc,EAAE,IAAI;YACpBC,SAAS,EAAE;UACb,CAAC,CAAC;QACJ,CAAC,EAAEN,QAAQ,CAAC;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;;IAGF,IAAI,CAACkB,QAAQ,CAACP,KAAK,CAAC;EACtB;EAEAU,MAAM,GAAG;IACP,MAAM;MACJhB,cAAc;MACdC;IACF,CAAC,GAAG,IAAI,CAACF,KAAK;IAEd,IAAI,CAACC,cAAc,EAAE;MACnB,OAAO,IAAI;IACb;IAEA,OAAOV,YAAY,CAACU,cAAc,EAAE;MAClCC,SAAS,EAAER,UAAU,CAACQ,SAAS,EAAED,cAAc,CAACF,KAAK,CAACG,SAAS;IACjE,CAAC,CAAC;EACJ;AAEF;AAEA,eAAeL,KAAK"},"metadata":{},"sourceType":"module"}