{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelRadio as _vModelRadio, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"테스트\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"instance\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  id: \"upload\"\n};\nexport function render(_ctx, _cache) {\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_dashboard, {\n    ref: \"dash\",\n    uppy: _ctx.uppy\n  }, null, 8 /* PROPS */, [\"uppy\"])]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_createTextVNode(\"IP주소 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"IP주소 입력\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.IP = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.IP]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"담당자 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"peo\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.peo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.peo]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"유선MAC : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"mac1\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.mac1 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.mac1]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"무선MAC : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"mac2\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.mac2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.mac2]])]), _createElementVNode(\"div\", null, [_createTextVNode(\"구분 : \"), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: _ctx.radioValue1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.picked = $event)\n  }, null, 8 /* PROPS */, _hoisted_4), [[_vModelRadio, _ctx.picked]]), _createTextVNode(\"임직원\")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: _ctx.radioValue2,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.picked = $event)\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelRadio, _ctx.picked]]), _createTextVNode(\"외부인력\")])]), _createElementVNode(\"p\", null, [_createTextVNode(\"부서 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"dep\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.dep = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.dep]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"ID : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"용도 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"EX) 업무,vm 등\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.why = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.why]])]), _createElementVNode(\"div\", null, [_createTextVNode(\"단말기 : \"), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: _ctx.radioValue3,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.elec = $event)\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelRadio, _ctx.elec]]), _createTextVNode(\"노트북\")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: _ctx.radioValue4,\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.elec = $event)\n  }, null, 8 /* PROPS */, _hoisted_7), [[_vModelRadio, _ctx.elec]]), _createTextVNode(\"데스크탑\")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: _ctx.radioValue5,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.elec = $event)\n  }, null, 8 /* PROPS */, _hoisted_8), [[_vModelRadio, _ctx.elec]]), _createTextVNode(\"기타\")])]), _createElementVNode(\"p\", null, [_createTextVNode(\"사유 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"whyy\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.whyy = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.whyy]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"비고 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"num\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.num = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.num]])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[14] || (_cache[14] = $event => _ctx.upload())\n  }, \"업로드\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCAMXC,oBAAY,YAAR,KAAG;;EACFD,EAAE,EAAC;AAAU;;;;;;;EAoBfA,EAAE,EAAC;AAAQ;;;6DA3BhBC,oBAKM,OALNC,UAKM,GAJJC,aAGEC;IAFAC,GAAG,EAAC,MAAM;IACTC,IAAI,EAAEC;uCAGTC,UAAY,EACZP,oBAmBI,OAnBJQ,UAmBI,GAlBFR,oBAA2F,6BAAxF,SAAO,uCAA6E;IAAtES,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,cAAc;IAACC,WAAW,EAAC,SAAS;+DAAUL,OAAE;iDAAFA,OAAE,OACnFN,oBAA0D,6BAAvD,QAAM,uCAA6C;IAAtCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,KAAK;+DAAUN,QAAG;iDAAHA,QAAG,OACnDN,oBAA8D,6BAA3D,UAAQ,uCAA+C;IAAxCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,MAAM;+DAAUN,SAAI;iDAAJA,SAAI,OACvDN,oBAA8D,6BAA3D,UAAQ,uCAA+C;IAAxCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,MAAM;+DAAUN,SAAI;iDAAJA,SAAI,OACvDN,oBAGM,+BAHD,OACJ,uBAAoF,gCAA7EA,oBAAkE;IAA3DS,IAAI,EAAC,OAAO;IAAQI,KAAK,EAAEP,gBAAW;+DAAWA,WAAM;uDAANA,WAAM,sBAAI,KAAG,KAC3EN,oBAAqF,gCAA9EA,oBAAkE;IAA3DS,IAAI,EAAC,OAAO;IAAQI,KAAK,EAAEP,gBAAW;+DAAWA,WAAM;uDAANA,WAAM,sBAAI,MAAI,OAE/EN,oBAAyD,6BAAtD,OAAK,uCAA6C;IAAtCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,KAAK;+DAAUN,QAAG;iDAAHA,QAAG,OAClDN,oBAA6D,6BAA1D,OAAK,uCAAiD;IAA1CS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,OAAO;+DAAUN,UAAK;iDAALA,UAAK,OACtDN,oBAA6F,6BAA1F,OAAK,uCAAiF;IAA1ES,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,cAAc;IAACC,WAAW,EAAC,aAAa;+DAAUL,QAAG;iDAAHA,QAAG,OACtFN,oBAIM,+BAJD,QACJ,uBAAkF,gCAA3EA,oBAAgE;IAAzDS,IAAI,EAAC,OAAO;IAAQI,KAAK,EAAEP,gBAAW;+DAAWA,SAAI;uDAAJA,SAAI,sBAAI,KAAG,KACzEN,oBAAmF,gCAA5EA,oBAAgE;IAAzDS,IAAI,EAAC,OAAO;IAAQI,KAAK,EAAEP,gBAAW;iEAAWA,SAAI;uDAAJA,SAAI,sBAAI,MAAI,KAC5EN,oBAAiF,gCAA1EA,oBAAgE;IAAzDS,IAAI,EAAC,OAAO;IAAQI,KAAK,EAAEP,gBAAW;iEAAWA,SAAI;uDAAJA,SAAI,sBAAI,IAAE,OAE1EN,oBAA2D,6BAAxD,OAAK,uCAA+C;IAAxCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,MAAM;iEAAUN,SAAI;iDAAJA,SAAI,OACpDN,oBAAyD,6BAAtD,OAAK,uCAA6C;IAAtCS,IAAI,EAAC,MAAM;IAACG,IAAI,EAAC,KAAK;iEAAUN,QAAG;iDAAHA,QAAG,SAEtDN,oBAEQ,OAFRc,UAEQ,GADNd,oBAAoD;IAA5CS,IAAI,EAAC,QAAQ;IAAEM,OAAK,wCAAET,WAAM;KAAI,KAAG","names":["id","_createElementVNode","_hoisted_1","_createVNode","_component_dashboard","ref","uppy","_ctx","_hoisted_2","_hoisted_3","type","class","placeholder","name","value","_hoisted_9","onClick"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <dashboard\n      ref=\"dash\"\n      :uppy=\"uppy\"\n    />\n  </div>\n    <h1>테스트</h1>\n    <div id=\"instance\">\n      <p>IP주소 : <input type=\"text\" class=\"form-control\" placeholder=\"IP주소 입력\" v-model=\"IP\" /></p>\n      <p>담당자 : <input type=\"text\" name=\"peo\" v-model=\"peo\"/></p>\n      <p>유선MAC : <input type=\"text\" name=\"mac1\" v-model=\"mac1\"/></p>\n      <p>무선MAC : <input type=\"text\" name=\"mac2\" v-model=\"mac2\"/></p>\n      <div>구분 : \n\t      <label><input type=\"radio\" v-bind:value=\"radioValue1\" v-model=\"picked\" />임직원</label>\n        <label><input type=\"radio\" v-bind:value=\"radioValue2\" v-model=\"picked\" />외부인력</label>\n      </div>\n      <p>부서 : <input type=\"text\" name=\"dep\" v-model=\"dep\"/></p>\n      <p>ID : <input type=\"text\" name=\"email\" v-model=\"email\"/></p>\n      <p>용도 : <input type=\"text\" class=\"form-control\" placeholder=\"EX) 업무,vm 등\" v-model=\"why\"/></p>\n      <div>단말기 : \n\t      <label><input type=\"radio\" v-bind:value=\"radioValue3\" v-model=\"elec\" />노트북</label>\n        <label><input type=\"radio\" v-bind:value=\"radioValue4\" v-model=\"elec\" />데스크탑</label>\n\t      <label><input type=\"radio\" v-bind:value=\"radioValue5\" v-model=\"elec\" />기타</label>\n      </div>\n      <p>사유 : <input type=\"text\" name=\"whyy\" v-model=\"whyy\"/></p>\n      <p>비고 : <input type=\"text\" name=\"num\" v-model=\"num\"/></p>\n  </div>\n  <div id=\"upload\">\n    <button type=\"button\" @click=\"upload()\">업로드</button>\n    </div>\n</template>\n<script>\nimport { Dashboard } from \"@uppy/vue\";\nimport \"@uppy/core/dist/style.css\";\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport App from \"../App.vue\"\n\nexport default {\n  name: 'Hello',\n  components: {\n    Dashboard,\n    App,\n  },\n  data: () => {\n    return {\n      IP : '',\n      why : '',\n      reason : '',\n      dep: '',\n      email: '',\n      mac1:'',\n      mac2:'',\n      num:'',\n      peo:'',\n      whyy:'',\n      picked:'임직원',\n      elec:'노트북',\n      radioValue1:'임직원',\n      radioValue2:'외부인력',\n      radioValue3:'노트북',\n      radioValue4:'데스크탑',\n      radioValue5:'기타',\n    };\n  },\n  methods: {\n    upload(){\n    var conf = confirm(\"IP주소 : \" + this.IP + \"\\n\"\n            +\"담당자 : \" + this.peo + \"\\n\"\n            +\"유선 MAC : \" + this.mac1 + \"\\n\"\n            +\"무선 MAC : \" + this.mac2 + \"\\n\"\n            +\"구분 : \" + this.picked + \"\\n\"\n            +\"부서 : \" + this.dep + \"\\n\"\n            +\"ID : \" + this.email + \"\\n\"\n            +\"용도 : \" + this.why + \"\\n\"\n            +\"단말기 : \" + this.elec + \"\\n\"\n            +\"사유 : \" + this.whyy + \"\\n\"\n            +\"비고 : \" + this.num)\n      if(!conf) e.preventDefault();\n      alert(\"성공\") // 여기 DB삽입 들어가면 됩니다...\n    }\n  },\n  computed: {\n    uppy(){\n      return new Uppy()\n    .use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false,\n      })\n\n    .on('upload-success', (file, response) => {\n    console.log(file.name, response)\n    const users = response.body\n    this.dep = users.dep\n    this.email = users.email\n    this.mac1 = users.mac1\n    this.mac2 = users.mac2\n    this.num = users.num\n    this.peo = users.peo\n    this.whyy = users.whyy\n})\n\n    .use(dashboard, {\n      id: 'Dashboard',\n  target: 'body',\n  metaFields: [],\n  trigger: null,\n  inline: false,\n  width: 750,\n  height: 550,\n  thumbnailWidth: 280,\n  defaultTabIcon,\n  showLinkToFileUploadResult: false,\n  showProgressDetails: false,\n  hideUploadButton: false,\n  hideRetryButton: false,\n  hidePauseResumeButton: false,\n  hideCancelButton: false,\n  hideProgressAfterFinish: false,\n  doneButtonHandler: () => {\n    this.uppy.cancelAll()\n    this.requestCloseModal()\n  },\n  note: null,\n  closeModalOnClickOutside: false,\n  closeAfterFinish: false,\n  disableStatusBar: false,\n  disableInformer: false,\n  disableThumbnailGenerator: false,\n  disablePageScrollWhenModalOpen: true,\n  animateOpenClose: true,\n  fileManagerSelectionType: 'files',\n  proudlyDisplayPoweredByUppy: true,\n  onRequestCloseModal: () => this.closeModal(),\n  showSelectedFiles: true,\n  showRemoveButtonAfterComplete: false,\n  showNativePhotoCameraButton: false,\n  showNativeVideoCameraButton: false,\n  locale: defaultLocale,\n  browserBackButtonClose: false,\n  theme: 'light',\n  autoOpenFileEditor: false,\n  disableLocalFiles: false,\n})\n    }\n  \n  },\n  beforeDestroy () {\n    this.uppy.close({ reason: 'unmount' })\n  }\n}\n}\n</script>"]},"metadata":{},"sourceType":"module"}