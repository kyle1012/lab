{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/**\n* Create an event emitter with namespaces\n* @name createNamespaceEmitter\n* @example\n* var emitter = require('./index')()\n*\n* emitter.on('*', function () {\n*   console.log('all events emitted', this.event)\n* })\n*\n* emitter.on('example', function () {\n*   console.log('example event emitted')\n* })\n*/\nmodule.exports = function createNamespaceEmitter() {\n  var emitter = {};\n  var _fns = emitter._fns = {};\n\n  /**\n  * Emit an event. Optionally namespace the event. Handlers are fired in the order in which they were added with exact matches taking precedence. Separate the namespace and event with a `:`\n  * @name emit\n  * @param {String} event – the name of the event, with optional namespace\n  * @param {...*} data – up to 6 arguments that are passed to the event listener\n  * @example\n  * emitter.emit('example')\n  * emitter.emit('demo:test')\n  * emitter.emit('data', { example: true}, 'a string', 1)\n  */\n  emitter.emit = function emit(event, arg1, arg2, arg3, arg4, arg5, arg6) {\n    var toEmit = getListeners(event);\n    if (toEmit.length) {\n      emitAll(event, toEmit, [arg1, arg2, arg3, arg4, arg5, arg6]);\n    }\n  };\n\n  /**\n  * Create en event listener.\n  * @name on\n  * @param {String} event\n  * @param {Function} fn\n  * @example\n  * emitter.on('example', function () {})\n  * emitter.on('demo', function () {})\n  */\n  emitter.on = function on(event, fn) {\n    if (!_fns[event]) {\n      _fns[event] = [];\n    }\n    _fns[event].push(fn);\n  };\n\n  /**\n  * Create en event listener that fires once.\n  * @name once\n  * @param {String} event\n  * @param {Function} fn\n  * @example\n  * emitter.once('example', function () {})\n  * emitter.once('demo', function () {})\n  */\n  emitter.once = function once(event, fn) {\n    function one() {\n      fn.apply(this, arguments);\n      emitter.off(event, one);\n    }\n    this.on(event, one);\n  };\n\n  /**\n  * Stop listening to an event. Stop all listeners on an event by only passing the event name. Stop a single listener by passing that event handler as a callback.\n  * You must be explicit about what will be unsubscribed: `emitter.off('demo')` will unsubscribe an `emitter.on('demo')` listener,\n  * `emitter.off('demo:example')` will unsubscribe an `emitter.on('demo:example')` listener\n  * @name off\n  * @param {String} event\n  * @param {Function} [fn] – the specific handler\n  * @example\n  * emitter.off('example')\n  * emitter.off('demo', function () {})\n  */\n  emitter.off = function off(event, fn) {\n    var keep = [];\n    if (event && fn) {\n      var fns = this._fns[event];\n      var i = 0;\n      var l = fns ? fns.length : 0;\n      for (i; i < l; i++) {\n        if (fns[i] !== fn) {\n          keep.push(fns[i]);\n        }\n      }\n    }\n    keep.length ? this._fns[event] = keep : delete this._fns[event];\n  };\n  function getListeners(e) {\n    var out = _fns[e] ? _fns[e] : [];\n    var idx = e.indexOf(':');\n    var args = idx === -1 ? [e] : [e.substring(0, idx), e.substring(idx + 1)];\n    var keys = Object.keys(_fns);\n    var i = 0;\n    var l = keys.length;\n    for (i; i < l; i++) {\n      var key = keys[i];\n      if (key === '*') {\n        out = out.concat(_fns[key]);\n      }\n      if (args.length === 2 && args[0] === key) {\n        out = out.concat(_fns[key]);\n        break;\n      }\n    }\n    return out;\n  }\n  function emitAll(e, fns, args) {\n    var i = 0;\n    var l = fns.length;\n    for (i; i < l; i++) {\n      if (!fns[i]) break;\n      fns[i].event = e;\n      fns[i].apply(fns[i], args);\n    }\n  }\n  return emitter;\n};","map":{"version":3,"names":["module","exports","createNamespaceEmitter","emitter","_fns","emit","event","arg1","arg2","arg3","arg4","arg5","arg6","toEmit","getListeners","length","emitAll","on","fn","push","once","one","apply","arguments","off","keep","fns","i","l","e","out","idx","indexOf","args","substring","keys","Object","key","concat"],"sources":["/lab/node_modules/namespace-emitter/index.js"],"sourcesContent":["/**\n* Create an event emitter with namespaces\n* @name createNamespaceEmitter\n* @example\n* var emitter = require('./index')()\n*\n* emitter.on('*', function () {\n*   console.log('all events emitted', this.event)\n* })\n*\n* emitter.on('example', function () {\n*   console.log('example event emitted')\n* })\n*/\nmodule.exports = function createNamespaceEmitter () {\n  var emitter = {}\n  var _fns = emitter._fns = {}\n\n  /**\n  * Emit an event. Optionally namespace the event. Handlers are fired in the order in which they were added with exact matches taking precedence. Separate the namespace and event with a `:`\n  * @name emit\n  * @param {String} event – the name of the event, with optional namespace\n  * @param {...*} data – up to 6 arguments that are passed to the event listener\n  * @example\n  * emitter.emit('example')\n  * emitter.emit('demo:test')\n  * emitter.emit('data', { example: true}, 'a string', 1)\n  */\n  emitter.emit = function emit (event, arg1, arg2, arg3, arg4, arg5, arg6) {\n    var toEmit = getListeners(event)\n\n    if (toEmit.length) {\n      emitAll(event, toEmit, [arg1, arg2, arg3, arg4, arg5, arg6])\n    }\n  }\n\n  /**\n  * Create en event listener.\n  * @name on\n  * @param {String} event\n  * @param {Function} fn\n  * @example\n  * emitter.on('example', function () {})\n  * emitter.on('demo', function () {})\n  */\n  emitter.on = function on (event, fn) {\n    if (!_fns[event]) {\n      _fns[event] = []\n    }\n\n    _fns[event].push(fn)\n  }\n\n  /**\n  * Create en event listener that fires once.\n  * @name once\n  * @param {String} event\n  * @param {Function} fn\n  * @example\n  * emitter.once('example', function () {})\n  * emitter.once('demo', function () {})\n  */\n  emitter.once = function once (event, fn) {\n    function one () {\n      fn.apply(this, arguments)\n      emitter.off(event, one)\n    }\n    this.on(event, one)\n  }\n\n  /**\n  * Stop listening to an event. Stop all listeners on an event by only passing the event name. Stop a single listener by passing that event handler as a callback.\n  * You must be explicit about what will be unsubscribed: `emitter.off('demo')` will unsubscribe an `emitter.on('demo')` listener,\n  * `emitter.off('demo:example')` will unsubscribe an `emitter.on('demo:example')` listener\n  * @name off\n  * @param {String} event\n  * @param {Function} [fn] – the specific handler\n  * @example\n  * emitter.off('example')\n  * emitter.off('demo', function () {})\n  */\n  emitter.off = function off (event, fn) {\n    var keep = []\n\n    if (event && fn) {\n      var fns = this._fns[event]\n      var i = 0\n      var l = fns ? fns.length : 0\n\n      for (i; i < l; i++) {\n        if (fns[i] !== fn) {\n          keep.push(fns[i])\n        }\n      }\n    }\n\n    keep.length ? this._fns[event] = keep : delete this._fns[event]\n  }\n\n  function getListeners (e) {\n    var out = _fns[e] ? _fns[e] : []\n    var idx = e.indexOf(':')\n    var args = (idx === -1) ? [e] : [e.substring(0, idx), e.substring(idx + 1)]\n\n    var keys = Object.keys(_fns)\n    var i = 0\n    var l = keys.length\n\n    for (i; i < l; i++) {\n      var key = keys[i]\n      if (key === '*') {\n        out = out.concat(_fns[key])\n      }\n\n      if (args.length === 2 && args[0] === key) {\n        out = out.concat(_fns[key])\n        break\n      }\n    }\n\n    return out\n  }\n\n  function emitAll (e, fns, args) {\n    var i = 0\n    var l = fns.length\n\n    for (i; i < l; i++) {\n      if (!fns[i]) break\n      fns[i].event = e\n      fns[i].apply(fns[i], args)\n    }\n  }\n\n  return emitter\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}