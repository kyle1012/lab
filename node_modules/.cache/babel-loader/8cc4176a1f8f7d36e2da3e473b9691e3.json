{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createTextVNode(\"IP주소 : \"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"form-control\",\n  placeholder: \"IP주소 입력.\"\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_dashboard, {\n    ref: \"dash\",\n    uppy: _ctx.uppy,\n    props: {\n      metaFields: [{\n        id: 'name',\n        name: 'Name',\n        placeholder: 'file name'\n      }, {\n        id: 'caption',\n        name: 'Caption',\n        placeholder: 'describe what the image is about'\n      }]\n    },\n    plugins: ['Webcam', 'ImageEditor']\n  }, null, 8 /* PROPS */, [\"uppy\"])]), _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCAiBTC,oBAA+E,0CAA5E,SAAO,oCAAiE;EAA1DC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,cAAc;EAACC,WAAW,EAAC;;;;;6DAjBlEH,oBAgBM,OAhBNI,UAgBM,GAfJC,aAcEC;IAbAC,GAAG,EAAC,MAAM;IACTC,IAAI,EAAEC,SAAI;IACVC,KAAK,EAAE;;;;;;;;;;KASP;IACAC,OAAO,EAAE;uCAGVC,UAA+E","names":["id","_createElementVNode","type","class","placeholder","_hoisted_1","_createVNode","_component_dashboard","ref","uppy","_ctx","props","plugins","_hoisted_2"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <dashboard\n      ref=\"dash\"\n      :uppy=\"uppy\"\n      :props=\"{\n        metaFields: [\n          { id: 'name', name: 'Name', placeholder: 'file name' },\n          {\n            id: 'caption',\n            name: 'Caption',\n            placeholder: 'describe what the image is about',\n          },\n        ],\n      }\"\n      :plugins=\"['Webcam', 'ImageEditor']\"\n    />\n  </div>\n      <p>IP주소 : <input type=\"text\" class=\"form-control\" placeholder=\"IP주소 입력.\" /></p>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport Webcam from \"@uppy/webcam\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport ImageEditor from \"@uppy/image-editor\";\nconst uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" },\n    {\n      id: \"caption\",\n      name: \"Caption\",\n      placeholder: \"describe what the image is about\",\n    },\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const abc = response.body\n})\nuppy.use(Webcam)\nuppy.use(ImageEditor, {\n  quality: 0.8,\n});\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard,\n  },\n  data: () => {\n    return {\n      uppy,\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}