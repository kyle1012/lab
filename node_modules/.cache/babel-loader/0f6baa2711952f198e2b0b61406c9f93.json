{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_if6134previewImgUrl34 = _resolveComponent(\"v-if=\\\"previewImgUrl\\\"\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.formSubmit && _ctx.formSubmit(...args), [\"prevent\"])),\n    method: \"post\"\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"selectFile\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.previewFile && _ctx.previewFile(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _ctx.selectFile ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [_createElementVNode(\"li\", null, \"lastModified : \" + _toDisplayString(_ctx.selectFile.lastModified), 1 /* TEXT */), _createElementVNode(\"li\", null, \"lastModifiedDate : \" + _toDisplayString(_ctx.selectFile.lastModifiedDate), 1 /* TEXT */), _createElementVNode(\"li\", null, \"name : \" + _toDisplayString(_ctx.selectFile.name), 1 /* TEXT */), _createElementVNode(\"li\", null, \"size(byte) : \" + _toDisplayString(_ctx.selectFile.size), 1 /* TEXT */), _createElementVNode(\"li\", null, \"type : \" + _toDisplayString(_ctx.selectFile.type), 1 /* TEXT */), _createElementVNode(\"li\", null, \"webkitRelativePath : \" + _toDisplayString(_ctx.selectFile.webkitRelativePath), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_if6134previewImgUrl34, {\n    src: _ctx.previewImgUrl\n  }, null, 8 /* PROPS */, [\"src\"]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: _ctx.isUploading\n  }, \"Upload\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", null, [_hoisted_4, _createTextVNode(\" response : \" + _toDisplayString(_ctx.response), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;;;;;gCAelBC,oBAAM;;;;uBAfZC,oBAmBM,OAnBNC,UAmBM,GAlBJF,oBAiBO;IAjBAG,QAAM,wDAAUC,2CAAU;IAAEC,MAAM,EAAC;MACxCL,oBAA4D;IAArDM,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,YAAY;IAAEC,QAAM,yCAAEJ,6CAAW;kDAC9CA,eAAU,kBAApBH,oBAOK,mBANHD,oBAAqD,YAAjD,iBAAe,oBAAGI,eAAU,CAACK,YAAY,kBAC7CT,oBAA6D,YAAzD,qBAAmB,oBAAGI,eAAU,CAACM,gBAAgB,kBACrDV,oBAAqC,YAAjC,SAAO,oBAAGI,eAAU,CAACO,IAAI,kBAC7BX,oBAA2C,YAAvC,eAAa,oBAAGI,eAAU,CAACQ,IAAI,kBACnCZ,oBAAqC,YAAjC,SAAO,oBAAGI,eAAU,CAACE,IAAI,kBAC7BN,oBAAiE,YAA7D,uBAAqB,oBAAGI,eAAU,CAACS,kBAAkB,yDAE3DC,aAA6CC;IAAtBC,GAAG,EAAEZ;EAAa,kCACzCJ,oBAA6D;IAArDM,IAAI,EAAC,QAAQ;IAAEW,QAAQ,EAAEb;KAAa,QAAM,8BAEpDJ,oBAGM,cAFJkB,UAAM,iCACK,oBAAGd,aAAQ","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","onSubmit","_ctx","method","type","ref","onChange","lastModified","lastModifiedDate","name","size","webkitRelativePath","_createVNode","_component_v_if6134previewImgUrl34","src","disabled","_hoisted_4"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n    <form @submit.prevent=\"formSubmit\" method=\"post\">\n      <input type=\"file\" ref=\"selectFile\" @change=\"previewFile\" />\n      <ul v-if=\"selectFile\">\n        <li>lastModified : {{ selectFile.lastModified }}</li>\n        <li>lastModifiedDate : {{ selectFile.lastModifiedDate }}</li>\n        <li>name : {{ selectFile.name }}</li>\n        <li>size(byte) : {{ selectFile.size }}</li>\n        <li>type : {{ selectFile.type }}</li>\n        <li>webkitRelativePath : {{ selectFile.webkitRelativePath }}</li>\n      </ul>\n      <v-if=\"previewImgUrl\" :src=\"previewImgUrl\" />\n      <button type=\"submit\" :disabled=\"isUploading\">Upload</button>\n\n      <div>\n        <hr />\n        response : {{ response }}\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nconst uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" },\n    {\n      id: \"caption\",\n      name: \"Caption\",\n      placeholder: \"describe what the image is about\",\n    },\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpbody = response.body\n  this.fileData = JSON.stringify(httpbody)\n})\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard,\n  },\n  data: () => {\n    return {\n      fileData: null,\n      uppy,\n    };\n  },\n  computed: {\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}