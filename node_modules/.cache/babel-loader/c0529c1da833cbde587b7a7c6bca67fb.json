{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { UIPlugin } from '@uppy/core';\nimport dataURItoBlob from '@uppy/utils/lib/dataURItoBlob';\nimport isObjectURL from '@uppy/utils/lib/isObjectURL';\nimport isPreviewSupported from '@uppy/utils/lib/isPreviewSupported';\nimport { rotation } from 'exifr/dist/mini.esm.mjs';\nimport locale from './locale.js';\nconst packageJson = {\n  \"version\": \"3.0.2\"\n};\n/**\n * Save a <canvas> element's content to a Blob object.\n *\n * @param {HTMLCanvasElement} canvas\n * @returns {Promise}\n */\n\nfunction canvasToBlob(canvas, type, quality) {\n  try {\n    canvas.getContext('2d').getImageData(0, 0, 1, 1);\n  } catch (err) {\n    if (err.code === 18) {\n      return Promise.reject(new Error('cannot read image, probably an svg with external resources'));\n    }\n  }\n  if (canvas.toBlob) {\n    return new Promise(resolve => {\n      canvas.toBlob(resolve, type, quality);\n    }).then(blob => {\n      if (blob === null) {\n        throw new Error('cannot read image, probably an svg with external resources');\n      }\n      return blob;\n    });\n  }\n  return Promise.resolve().then(() => {\n    return dataURItoBlob(canvas.toDataURL(type, quality), {});\n  }).then(blob => {\n    if (blob === null) {\n      throw new Error('could not extract blob, probably an old browser');\n    }\n    return blob;\n  });\n}\nfunction rotateImage(image, translate) {\n  let w = image.width;\n  let h = image.height;\n  if (translate.deg === 90 || translate.deg === 270) {\n    w = image.height;\n    h = image.width;\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  const context = canvas.getContext('2d');\n  context.translate(w / 2, h / 2);\n  if (translate.canvas) {\n    context.rotate(translate.rad);\n    context.scale(translate.scaleX, translate.scaleY);\n  }\n  context.drawImage(image, -image.width / 2, -image.height / 2, image.width, image.height);\n  return canvas;\n}\n/**\n * Make sure the image doesnâ€™t exceed browser/device canvas limits.\n * For ios with 256 RAM and ie\n */\n\nfunction protect(image) {\n  // https://stackoverflow.com/questions/6081483/maximum-size-of-a-canvas-element\n  const ratio = image.width / image.height;\n  const maxSquare = 5000000; // ios max canvas square\n\n  const maxSize = 4096; // ie max canvas dimensions\n\n  let maxW = Math.floor(Math.sqrt(maxSquare * ratio));\n  let maxH = Math.floor(maxSquare / Math.sqrt(maxSquare * ratio));\n  if (maxW > maxSize) {\n    maxW = maxSize;\n    maxH = Math.round(maxW / ratio);\n  }\n  if (maxH > maxSize) {\n    maxH = maxSize;\n    maxW = Math.round(ratio * maxH);\n  }\n  if (image.width > maxW) {\n    const canvas = document.createElement('canvas');\n    canvas.width = maxW;\n    canvas.height = maxH;\n    canvas.getContext('2d').drawImage(image, 0, 0, maxW, maxH);\n    return canvas;\n  }\n  return image;\n}\n/**\n * The Thumbnail Generator plugin\n */\n\nexport default class ThumbnailGenerator extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.onFileAdded = file => {\n      if (!file.preview && file.data && isPreviewSupported(file.type) && !file.isRemote) {\n        this.addToQueue(file.id);\n      }\n    };\n    this.onCancelRequest = file => {\n      const index = this.queue.indexOf(file.id);\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      }\n    };\n    this.onFileRemoved = file => {\n      const index = this.queue.indexOf(file.id);\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      } // Clean up object URLs.\n\n      if (file.preview && isObjectURL(file.preview)) {\n        URL.revokeObjectURL(file.preview);\n      }\n    };\n    this.onRestored = () => {\n      const restoredFiles = this.uppy.getFiles().filter(file => file.isRestored);\n      restoredFiles.forEach(file => {\n        // Only add blob URLs; they are likely invalid after being restored.\n        if (!file.preview || isObjectURL(file.preview)) {\n          this.addToQueue(file.id);\n        }\n      });\n    };\n    this.onAllFilesRemoved = () => {\n      this.queue = [];\n    };\n    this.waitUntilAllProcessed = fileIDs => {\n      fileIDs.forEach(fileID => {\n        const file = this.uppy.getFile(fileID);\n        this.uppy.emit('preprocess-progress', file, {\n          mode: 'indeterminate',\n          message: this.i18n('generatingThumbnails')\n        });\n      });\n      const emitPreprocessCompleteForAll = () => {\n        fileIDs.forEach(fileID => {\n          const file = this.uppy.getFile(fileID);\n          this.uppy.emit('preprocess-complete', file);\n        });\n      };\n      return new Promise(resolve => {\n        if (this.queueProcessing) {\n          this.uppy.once('thumbnail:all-generated', () => {\n            emitPreprocessCompleteForAll();\n            resolve();\n          });\n        } else {\n          emitPreprocessCompleteForAll();\n          resolve();\n        }\n      });\n    };\n    this.type = 'modifier';\n    this.id = this.opts.id || 'ThumbnailGenerator';\n    this.title = 'Thumbnail Generator';\n    this.queue = [];\n    this.queueProcessing = false;\n    this.defaultThumbnailDimension = 200;\n    this.thumbnailType = this.opts.thumbnailType || 'image/jpeg';\n    this.defaultLocale = locale;\n    const defaultOptions = {\n      thumbnailWidth: null,\n      thumbnailHeight: null,\n      waitForThumbnailsBeforeUpload: false,\n      lazy: false\n    };\n    this.opts = {\n      ...defaultOptions,\n      ...opts\n    };\n    this.i18nInit();\n    if (this.opts.lazy && this.opts.waitForThumbnailsBeforeUpload) {\n      throw new Error('ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.');\n    }\n  }\n  /**\n   * Create a thumbnail for the given Uppy file object.\n   *\n   * @param {{data: Blob}} file\n   * @param {number} targetWidth\n   * @param {number} targetHeight\n   * @returns {Promise}\n   */\n\n  createThumbnail(file, targetWidth, targetHeight) {\n    const originalUrl = URL.createObjectURL(file.data);\n    const onload = new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = originalUrl;\n      image.addEventListener('load', () => {\n        URL.revokeObjectURL(originalUrl);\n        resolve(image);\n      });\n      image.addEventListener('error', event => {\n        URL.revokeObjectURL(originalUrl);\n        reject(event.error || new Error('Could not create thumbnail'));\n      });\n    });\n    const orientationPromise = rotation(file.data).catch(() => 1);\n    return Promise.all([onload, orientationPromise]).then(_ref => {\n      let [image, orientation] = _ref;\n      const dimensions = this.getProportionalDimensions(image, targetWidth, targetHeight, orientation.deg);\n      const rotatedImage = rotateImage(image, orientation);\n      const resizedImage = this.resizeImage(rotatedImage, dimensions.width, dimensions.height);\n      return canvasToBlob(resizedImage, this.thumbnailType, 80);\n    }).then(blob => {\n      return URL.createObjectURL(blob);\n    });\n  }\n  /**\n   * Get the new calculated dimensions for the given image and a target width\n   * or height. If both width and height are given, only width is taken into\n   * account. If neither width nor height are given, the default dimension\n   * is used.\n   */\n\n  getProportionalDimensions(img, width, height, rotation) {\n    // eslint-disable-line no-shadow\n    let aspect = img.width / img.height;\n    if (rotation === 90 || rotation === 270) {\n      aspect = img.height / img.width;\n    }\n    if (width != null) {\n      return {\n        width,\n        height: Math.round(width / aspect)\n      };\n    }\n    if (height != null) {\n      return {\n        width: Math.round(height * aspect),\n        height\n      };\n    }\n    return {\n      width: this.defaultThumbnailDimension,\n      height: Math.round(this.defaultThumbnailDimension / aspect)\n    };\n  }\n  /**\n   * Resize an image to the target `width` and `height`.\n   *\n   * Returns a Canvas with the resized image on it.\n   */\n  // eslint-disable-next-line class-methods-use-this\n\n  resizeImage(image, targetWidth, targetHeight) {\n    // Resizing in steps refactored to use a solution from\n    // https://blog.uploadcare.com/image-resize-in-browsers-is-broken-e38eed08df01\n    let img = protect(image);\n    let steps = Math.ceil(Math.log2(img.width / targetWidth));\n    if (steps < 1) {\n      steps = 1;\n    }\n    let sW = targetWidth * 2 ** (steps - 1);\n    let sH = targetHeight * 2 ** (steps - 1);\n    const x = 2;\n    while (steps--) {\n      const canvas = document.createElement('canvas');\n      canvas.width = sW;\n      canvas.height = sH;\n      canvas.getContext('2d').drawImage(img, 0, 0, sW, sH);\n      img = canvas;\n      sW = Math.round(sW / x);\n      sH = Math.round(sH / x);\n    }\n    return img;\n  }\n  /**\n   * Set the preview URL for a file.\n   */\n\n  setPreviewURL(fileID, preview) {\n    this.uppy.setFileState(fileID, {\n      preview\n    });\n  }\n  addToQueue(item) {\n    this.queue.push(item);\n    if (this.queueProcessing === false) {\n      this.processQueue();\n    }\n  }\n  processQueue() {\n    this.queueProcessing = true;\n    if (this.queue.length > 0) {\n      const current = this.uppy.getFile(this.queue.shift());\n      if (!current) {\n        this.uppy.log('[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug', 'error');\n        return Promise.resolve();\n      }\n      return this.requestThumbnail(current).catch(() => {}) // eslint-disable-line node/handle-callback-err\n      .then(() => this.processQueue());\n    }\n    this.queueProcessing = false;\n    this.uppy.log('[ThumbnailGenerator] Emptied thumbnail queue');\n    this.uppy.emit('thumbnail:all-generated');\n    return Promise.resolve();\n  }\n  requestThumbnail(file) {\n    if (isPreviewSupported(file.type) && !file.isRemote) {\n      return this.createThumbnail(file, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(preview => {\n        this.setPreviewURL(file.id, preview);\n        this.uppy.log(`[ThumbnailGenerator] Generated thumbnail for ${file.id}`);\n        this.uppy.emit('thumbnail:generated', this.uppy.getFile(file.id), preview);\n      }).catch(err => {\n        this.uppy.log(`[ThumbnailGenerator] Failed thumbnail for ${file.id}:`, 'warning');\n        this.uppy.log(err, 'warning');\n        this.uppy.emit('thumbnail:error', this.uppy.getFile(file.id), err);\n      });\n    }\n    return Promise.resolve();\n  }\n  install() {\n    this.uppy.on('file-removed', this.onFileRemoved);\n    this.uppy.on('cancel-all', this.onAllFilesRemoved);\n    if (this.opts.lazy) {\n      this.uppy.on('thumbnail:request', this.onFileAdded);\n      this.uppy.on('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.on('file-added', this.onFileAdded);\n      this.uppy.on('restored', this.onRestored);\n    }\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.addPreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n  uninstall() {\n    this.uppy.off('file-removed', this.onFileRemoved);\n    this.uppy.off('cancel-all', this.onAllFilesRemoved);\n    if (this.opts.lazy) {\n      this.uppy.off('thumbnail:request', this.onFileAdded);\n      this.uppy.off('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.off('file-added', this.onFileAdded);\n      this.uppy.off('restored', this.onRestored);\n    }\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.removePreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n}\nThumbnailGenerator.VERSION = packageJson.version;","map":{"version":3,"names":["UIPlugin","dataURItoBlob","isObjectURL","isPreviewSupported","rotation","locale","packageJson","canvasToBlob","canvas","type","quality","getContext","getImageData","err","code","Promise","reject","Error","toBlob","resolve","then","blob","toDataURL","rotateImage","image","translate","w","width","h","height","deg","document","createElement","context","rotate","rad","scale","scaleX","scaleY","drawImage","protect","ratio","maxSquare","maxSize","maxW","Math","floor","sqrt","maxH","round","ThumbnailGenerator","constructor","uppy","opts","onFileAdded","file","preview","data","isRemote","addToQueue","id","onCancelRequest","index","queue","indexOf","splice","onFileRemoved","URL","revokeObjectURL","onRestored","restoredFiles","getFiles","filter","isRestored","forEach","onAllFilesRemoved","waitUntilAllProcessed","fileIDs","fileID","getFile","emit","mode","message","i18n","emitPreprocessCompleteForAll","queueProcessing","once","title","defaultThumbnailDimension","thumbnailType","defaultLocale","defaultOptions","thumbnailWidth","thumbnailHeight","waitForThumbnailsBeforeUpload","lazy","i18nInit","createThumbnail","targetWidth","targetHeight","originalUrl","createObjectURL","onload","Image","src","addEventListener","event","error","orientationPromise","catch","all","_ref","orientation","dimensions","getProportionalDimensions","rotatedImage","resizedImage","resizeImage","img","aspect","steps","ceil","log2","sW","sH","x","setPreviewURL","setFileState","item","push","processQueue","length","current","shift","log","requestThumbnail","install","on","addPreProcessor","uninstall","off","removePreProcessor","VERSION","version"],"sources":["/lab/node_modules/@uppy/thumbnail-generator/lib/index.js"],"sourcesContent":["import { UIPlugin } from '@uppy/core';\nimport dataURItoBlob from '@uppy/utils/lib/dataURItoBlob';\nimport isObjectURL from '@uppy/utils/lib/isObjectURL';\nimport isPreviewSupported from '@uppy/utils/lib/isPreviewSupported';\nimport { rotation } from 'exifr/dist/mini.esm.mjs';\nimport locale from './locale.js';\nconst packageJson = {\n  \"version\": \"3.0.2\"\n};\n/**\n * Save a <canvas> element's content to a Blob object.\n *\n * @param {HTMLCanvasElement} canvas\n * @returns {Promise}\n */\n\nfunction canvasToBlob(canvas, type, quality) {\n  try {\n    canvas.getContext('2d').getImageData(0, 0, 1, 1);\n  } catch (err) {\n    if (err.code === 18) {\n      return Promise.reject(new Error('cannot read image, probably an svg with external resources'));\n    }\n  }\n\n  if (canvas.toBlob) {\n    return new Promise(resolve => {\n      canvas.toBlob(resolve, type, quality);\n    }).then(blob => {\n      if (blob === null) {\n        throw new Error('cannot read image, probably an svg with external resources');\n      }\n\n      return blob;\n    });\n  }\n\n  return Promise.resolve().then(() => {\n    return dataURItoBlob(canvas.toDataURL(type, quality), {});\n  }).then(blob => {\n    if (blob === null) {\n      throw new Error('could not extract blob, probably an old browser');\n    }\n\n    return blob;\n  });\n}\n\nfunction rotateImage(image, translate) {\n  let w = image.width;\n  let h = image.height;\n\n  if (translate.deg === 90 || translate.deg === 270) {\n    w = image.height;\n    h = image.width;\n  }\n\n  const canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  const context = canvas.getContext('2d');\n  context.translate(w / 2, h / 2);\n\n  if (translate.canvas) {\n    context.rotate(translate.rad);\n    context.scale(translate.scaleX, translate.scaleY);\n  }\n\n  context.drawImage(image, -image.width / 2, -image.height / 2, image.width, image.height);\n  return canvas;\n}\n/**\n * Make sure the image doesnâ€™t exceed browser/device canvas limits.\n * For ios with 256 RAM and ie\n */\n\n\nfunction protect(image) {\n  // https://stackoverflow.com/questions/6081483/maximum-size-of-a-canvas-element\n  const ratio = image.width / image.height;\n  const maxSquare = 5000000; // ios max canvas square\n\n  const maxSize = 4096; // ie max canvas dimensions\n\n  let maxW = Math.floor(Math.sqrt(maxSquare * ratio));\n  let maxH = Math.floor(maxSquare / Math.sqrt(maxSquare * ratio));\n\n  if (maxW > maxSize) {\n    maxW = maxSize;\n    maxH = Math.round(maxW / ratio);\n  }\n\n  if (maxH > maxSize) {\n    maxH = maxSize;\n    maxW = Math.round(ratio * maxH);\n  }\n\n  if (image.width > maxW) {\n    const canvas = document.createElement('canvas');\n    canvas.width = maxW;\n    canvas.height = maxH;\n    canvas.getContext('2d').drawImage(image, 0, 0, maxW, maxH);\n    return canvas;\n  }\n\n  return image;\n}\n/**\n * The Thumbnail Generator plugin\n */\n\n\nexport default class ThumbnailGenerator extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.onFileAdded = file => {\n      if (!file.preview && file.data && isPreviewSupported(file.type) && !file.isRemote) {\n        this.addToQueue(file.id);\n      }\n    };\n\n    this.onCancelRequest = file => {\n      const index = this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      }\n    };\n\n    this.onFileRemoved = file => {\n      const index = this.queue.indexOf(file.id);\n\n      if (index !== -1) {\n        this.queue.splice(index, 1);\n      } // Clean up object URLs.\n\n\n      if (file.preview && isObjectURL(file.preview)) {\n        URL.revokeObjectURL(file.preview);\n      }\n    };\n\n    this.onRestored = () => {\n      const restoredFiles = this.uppy.getFiles().filter(file => file.isRestored);\n      restoredFiles.forEach(file => {\n        // Only add blob URLs; they are likely invalid after being restored.\n        if (!file.preview || isObjectURL(file.preview)) {\n          this.addToQueue(file.id);\n        }\n      });\n    };\n\n    this.onAllFilesRemoved = () => {\n      this.queue = [];\n    };\n\n    this.waitUntilAllProcessed = fileIDs => {\n      fileIDs.forEach(fileID => {\n        const file = this.uppy.getFile(fileID);\n        this.uppy.emit('preprocess-progress', file, {\n          mode: 'indeterminate',\n          message: this.i18n('generatingThumbnails')\n        });\n      });\n\n      const emitPreprocessCompleteForAll = () => {\n        fileIDs.forEach(fileID => {\n          const file = this.uppy.getFile(fileID);\n          this.uppy.emit('preprocess-complete', file);\n        });\n      };\n\n      return new Promise(resolve => {\n        if (this.queueProcessing) {\n          this.uppy.once('thumbnail:all-generated', () => {\n            emitPreprocessCompleteForAll();\n            resolve();\n          });\n        } else {\n          emitPreprocessCompleteForAll();\n          resolve();\n        }\n      });\n    };\n\n    this.type = 'modifier';\n    this.id = this.opts.id || 'ThumbnailGenerator';\n    this.title = 'Thumbnail Generator';\n    this.queue = [];\n    this.queueProcessing = false;\n    this.defaultThumbnailDimension = 200;\n    this.thumbnailType = this.opts.thumbnailType || 'image/jpeg';\n    this.defaultLocale = locale;\n    const defaultOptions = {\n      thumbnailWidth: null,\n      thumbnailHeight: null,\n      waitForThumbnailsBeforeUpload: false,\n      lazy: false\n    };\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n    this.i18nInit();\n\n    if (this.opts.lazy && this.opts.waitForThumbnailsBeforeUpload) {\n      throw new Error('ThumbnailGenerator: The `lazy` and `waitForThumbnailsBeforeUpload` options are mutually exclusive. Please ensure at most one of them is set to `true`.');\n    }\n  }\n  /**\n   * Create a thumbnail for the given Uppy file object.\n   *\n   * @param {{data: Blob}} file\n   * @param {number} targetWidth\n   * @param {number} targetHeight\n   * @returns {Promise}\n   */\n\n\n  createThumbnail(file, targetWidth, targetHeight) {\n    const originalUrl = URL.createObjectURL(file.data);\n    const onload = new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = originalUrl;\n      image.addEventListener('load', () => {\n        URL.revokeObjectURL(originalUrl);\n        resolve(image);\n      });\n      image.addEventListener('error', event => {\n        URL.revokeObjectURL(originalUrl);\n        reject(event.error || new Error('Could not create thumbnail'));\n      });\n    });\n    const orientationPromise = rotation(file.data).catch(() => 1);\n    return Promise.all([onload, orientationPromise]).then(_ref => {\n      let [image, orientation] = _ref;\n      const dimensions = this.getProportionalDimensions(image, targetWidth, targetHeight, orientation.deg);\n      const rotatedImage = rotateImage(image, orientation);\n      const resizedImage = this.resizeImage(rotatedImage, dimensions.width, dimensions.height);\n      return canvasToBlob(resizedImage, this.thumbnailType, 80);\n    }).then(blob => {\n      return URL.createObjectURL(blob);\n    });\n  }\n  /**\n   * Get the new calculated dimensions for the given image and a target width\n   * or height. If both width and height are given, only width is taken into\n   * account. If neither width nor height are given, the default dimension\n   * is used.\n   */\n\n\n  getProportionalDimensions(img, width, height, rotation) {\n    // eslint-disable-line no-shadow\n    let aspect = img.width / img.height;\n\n    if (rotation === 90 || rotation === 270) {\n      aspect = img.height / img.width;\n    }\n\n    if (width != null) {\n      return {\n        width,\n        height: Math.round(width / aspect)\n      };\n    }\n\n    if (height != null) {\n      return {\n        width: Math.round(height * aspect),\n        height\n      };\n    }\n\n    return {\n      width: this.defaultThumbnailDimension,\n      height: Math.round(this.defaultThumbnailDimension / aspect)\n    };\n  }\n  /**\n   * Resize an image to the target `width` and `height`.\n   *\n   * Returns a Canvas with the resized image on it.\n   */\n  // eslint-disable-next-line class-methods-use-this\n\n\n  resizeImage(image, targetWidth, targetHeight) {\n    // Resizing in steps refactored to use a solution from\n    // https://blog.uploadcare.com/image-resize-in-browsers-is-broken-e38eed08df01\n    let img = protect(image);\n    let steps = Math.ceil(Math.log2(img.width / targetWidth));\n\n    if (steps < 1) {\n      steps = 1;\n    }\n\n    let sW = targetWidth * 2 ** (steps - 1);\n    let sH = targetHeight * 2 ** (steps - 1);\n    const x = 2;\n\n    while (steps--) {\n      const canvas = document.createElement('canvas');\n      canvas.width = sW;\n      canvas.height = sH;\n      canvas.getContext('2d').drawImage(img, 0, 0, sW, sH);\n      img = canvas;\n      sW = Math.round(sW / x);\n      sH = Math.round(sH / x);\n    }\n\n    return img;\n  }\n  /**\n   * Set the preview URL for a file.\n   */\n\n\n  setPreviewURL(fileID, preview) {\n    this.uppy.setFileState(fileID, {\n      preview\n    });\n  }\n\n  addToQueue(item) {\n    this.queue.push(item);\n\n    if (this.queueProcessing === false) {\n      this.processQueue();\n    }\n  }\n\n  processQueue() {\n    this.queueProcessing = true;\n\n    if (this.queue.length > 0) {\n      const current = this.uppy.getFile(this.queue.shift());\n\n      if (!current) {\n        this.uppy.log('[ThumbnailGenerator] file was removed before a thumbnail could be generated, but not removed from the queue. This is probably a bug', 'error');\n        return Promise.resolve();\n      }\n\n      return this.requestThumbnail(current).catch(() => {}) // eslint-disable-line node/handle-callback-err\n      .then(() => this.processQueue());\n    }\n\n    this.queueProcessing = false;\n    this.uppy.log('[ThumbnailGenerator] Emptied thumbnail queue');\n    this.uppy.emit('thumbnail:all-generated');\n    return Promise.resolve();\n  }\n\n  requestThumbnail(file) {\n    if (isPreviewSupported(file.type) && !file.isRemote) {\n      return this.createThumbnail(file, this.opts.thumbnailWidth, this.opts.thumbnailHeight).then(preview => {\n        this.setPreviewURL(file.id, preview);\n        this.uppy.log(`[ThumbnailGenerator] Generated thumbnail for ${file.id}`);\n        this.uppy.emit('thumbnail:generated', this.uppy.getFile(file.id), preview);\n      }).catch(err => {\n        this.uppy.log(`[ThumbnailGenerator] Failed thumbnail for ${file.id}:`, 'warning');\n        this.uppy.log(err, 'warning');\n        this.uppy.emit('thumbnail:error', this.uppy.getFile(file.id), err);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  install() {\n    this.uppy.on('file-removed', this.onFileRemoved);\n    this.uppy.on('cancel-all', this.onAllFilesRemoved);\n\n    if (this.opts.lazy) {\n      this.uppy.on('thumbnail:request', this.onFileAdded);\n      this.uppy.on('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.on('file-added', this.onFileAdded);\n      this.uppy.on('restored', this.onRestored);\n    }\n\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.addPreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n\n  uninstall() {\n    this.uppy.off('file-removed', this.onFileRemoved);\n    this.uppy.off('cancel-all', this.onAllFilesRemoved);\n\n    if (this.opts.lazy) {\n      this.uppy.off('thumbnail:request', this.onFileAdded);\n      this.uppy.off('thumbnail:cancel', this.onCancelRequest);\n    } else {\n      this.uppy.off('file-added', this.onFileAdded);\n      this.uppy.off('restored', this.onRestored);\n    }\n\n    if (this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.removePreProcessor(this.waitUntilAllProcessed);\n    }\n  }\n\n}\nThumbnailGenerator.VERSION = packageJson.version;"],"mappings":"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"},"metadata":{},"sourceType":"module"}