{"ast":null,"code":"import { h } from 'preact';\nimport { UIPlugin } from '@uppy/core';\nconst packageJson = {\n  \"version\": \"3.0.1\"\n};\n/**\n * Progress bar\n *\n */\n\nexport default class ProgressBar extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.id = this.opts.id || 'ProgressBar';\n    this.title = 'Progress Bar';\n    this.type = 'progressindicator'; // set default options, must kept in sync with @uppy/react/src/ProgressBar.js\n\n    const defaultOptions = {\n      target: 'body',\n      fixed: false,\n      hideAfterFinish: true\n    }; // merge default options with the ones set by user\n\n    this.opts = {\n      ...defaultOptions,\n      ...opts\n    };\n    this.render = this.render.bind(this);\n  }\n  render(state) {\n    const progress = state.totalProgress || 0; // before starting and after finish should be hidden if specified in the options\n\n    const isHidden = (progress === 0 || progress === 100) && this.opts.hideAfterFinish;\n    return h(\"div\", {\n      className: \"uppy uppy-ProgressBar\",\n      style: {\n        position: this.opts.fixed ? 'fixed' : 'initial'\n      },\n      \"aria-hidden\": isHidden\n    }, h(\"div\", {\n      className: \"uppy-ProgressBar-inner\",\n      style: {\n        width: `${progress}%`\n      }\n    }), h(\"div\", {\n      className: \"uppy-ProgressBar-percentage\"\n    }, progress));\n  }\n  install() {\n    const {\n      target\n    } = this.opts;\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n  uninstall() {\n    this.unmount();\n  }\n}\nProgressBar.VERSION = packageJson.version;","map":{"version":3,"names":["h","UIPlugin","packageJson","ProgressBar","constructor","uppy","opts","id","title","type","defaultOptions","target","fixed","hideAfterFinish","render","bind","state","progress","totalProgress","isHidden","className","style","position","width","install","mount","uninstall","unmount","VERSION","version"],"sources":["/lab/node_modules/@uppy/progress-bar/lib/ProgressBar.js"],"sourcesContent":["import { h } from 'preact';\nimport { UIPlugin } from '@uppy/core';\nconst packageJson = {\n  \"version\": \"3.0.1\"\n};\n/**\n * Progress bar\n *\n */\n\nexport default class ProgressBar extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.id = this.opts.id || 'ProgressBar';\n    this.title = 'Progress Bar';\n    this.type = 'progressindicator'; // set default options, must kept in sync with @uppy/react/src/ProgressBar.js\n\n    const defaultOptions = {\n      target: 'body',\n      fixed: false,\n      hideAfterFinish: true\n    }; // merge default options with the ones set by user\n\n    this.opts = { ...defaultOptions,\n      ...opts\n    };\n    this.render = this.render.bind(this);\n  }\n\n  render(state) {\n    const progress = state.totalProgress || 0; // before starting and after finish should be hidden if specified in the options\n\n    const isHidden = (progress === 0 || progress === 100) && this.opts.hideAfterFinish;\n    return h(\"div\", {\n      className: \"uppy uppy-ProgressBar\",\n      style: {\n        position: this.opts.fixed ? 'fixed' : 'initial'\n      },\n      \"aria-hidden\": isHidden\n    }, h(\"div\", {\n      className: \"uppy-ProgressBar-inner\",\n      style: {\n        width: `${progress}%`\n      }\n    }), h(\"div\", {\n      className: \"uppy-ProgressBar-percentage\"\n    }, progress));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}\nProgressBar.VERSION = packageJson.version;"],"mappings":"AAAA,SAASA,CAAC,QAAQ,QAAQ;AAC1B,SAASC,QAAQ,QAAQ,YAAY;AACrC,MAAMC,WAAW,GAAG;EAClB,SAAS,EAAE;AACb,CAAC;AACD;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,WAAW,SAASF,QAAQ,CAAC;EAChDG,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAE;IACtB,KAAK,CAACD,IAAI,EAAEC,IAAI,CAAC;IACjB,IAAI,CAACC,EAAE,GAAG,IAAI,CAACD,IAAI,CAACC,EAAE,IAAI,aAAa;IACvC,IAAI,CAACC,KAAK,GAAG,cAAc;IAC3B,IAAI,CAACC,IAAI,GAAG,mBAAmB,CAAC,CAAC;;IAEjC,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,KAAK;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC,CAAC;;IAEH,IAAI,CAACP,IAAI,GAAG;MAAE,GAAGI,cAAc;MAC7B,GAAGJ;IACL,CAAC;IACD,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;EACtC;EAEAD,MAAM,CAACE,KAAK,EAAE;IACZ,MAAMC,QAAQ,GAAGD,KAAK,CAACE,aAAa,IAAI,CAAC,CAAC,CAAC;;IAE3C,MAAMC,QAAQ,GAAG,CAACF,QAAQ,KAAK,CAAC,IAAIA,QAAQ,KAAK,GAAG,KAAK,IAAI,CAACX,IAAI,CAACO,eAAe;IAClF,OAAOb,CAAC,CAAC,KAAK,EAAE;MACdoB,SAAS,EAAE,uBAAuB;MAClCC,KAAK,EAAE;QACLC,QAAQ,EAAE,IAAI,CAAChB,IAAI,CAACM,KAAK,GAAG,OAAO,GAAG;MACxC,CAAC;MACD,aAAa,EAAEO;IACjB,CAAC,EAAEnB,CAAC,CAAC,KAAK,EAAE;MACVoB,SAAS,EAAE,wBAAwB;MACnCC,KAAK,EAAE;QACLE,KAAK,EAAG,GAAEN,QAAS;MACrB;IACF,CAAC,CAAC,EAAEjB,CAAC,CAAC,KAAK,EAAE;MACXoB,SAAS,EAAE;IACb,CAAC,EAAEH,QAAQ,CAAC,CAAC;EACf;EAEAO,OAAO,GAAG;IACR,MAAM;MACJb;IACF,CAAC,GAAG,IAAI,CAACL,IAAI;IAEb,IAAIK,MAAM,EAAE;MACV,IAAI,CAACc,KAAK,CAACd,MAAM,EAAE,IAAI,CAAC;IAC1B;EACF;EAEAe,SAAS,GAAG;IACV,IAAI,CAACC,OAAO,EAAE;EAChB;AAEF;AACAxB,WAAW,CAACyB,OAAO,GAAG1B,WAAW,CAAC2B,OAAO"},"metadata":{},"sourceType":"module"}