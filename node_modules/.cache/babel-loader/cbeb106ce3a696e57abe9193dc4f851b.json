{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    //변수생성\n    return {\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      listData: [],\n      searchData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n      search: '',\n      flag: false\n    };\n  },\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\").then(res => {\n        this.list = res.data;\n        this.listData = res.data;\n        console.log(res.data);\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    fnView(index) {\n      if (index = this.list[index - 1][0]) {\n        if (this.list[index - 1][1] == \"IP신청서\") {\n          this.$router.push({\n            path: './BoardDetail',\n            query: this.list[index - 1]\n          });\n        } else if (this.list[index - 1][1] == \"인터넷차단해제신청서\") {\n          this.$router.push({\n            path: './BoardDetail_int',\n            query: this.list[index - 1]\n          });\n        } else if (this.list[index - 1][1] == \"방화벽정책신청서\") {\n          this.$router.push({\n            path: './BoardDetail_firewall',\n            query: this.list[index - 1]\n          });\n        }\n      }\n    }\n  },\n  computed: {\n    startOffset() {\n      return (this.curPageNum - 1) * this.dataPerPage;\n    },\n    endOffset() {\n      return this.startOffset + this.dataPerPage;\n    },\n    numOfPages() {\n      return Math.ceil(this.searchData.length / this.dataPerPage);\n    },\n    callist() {\n      const searchWord = this.search.toLowerCase();\n      this.searchData = this.listData.filter(data => {\n        const flag = false;\n        data.forEach(data2 => {\n          if (data2 && data2.toString().toLowerCase().includes(searchWord)) {\n            this.flag = true;\n          }\n        });\n      }).slice(0);\n      return this.searchData.slice(this.startOffset, this.endOffset);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","components","data","list","no","listData","searchData","dataPerPage","curPageNum","search","flag","mounted","fnGetList","methods","get","then","res","console","log","catch","err","message","indexOf","alert","fnView","index","$router","push","path","query","computed","startOffset","endOffset","numOfPages","Math","ceil","length","callist","searchWord","toLowerCase","filter","forEach","data2","toString","includes","slice"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n      <v-text-field label=\"기안자 검색...\"\n                    v-model=\"search\">\n      </v-text-field>\n  <div class=\"ui icon input\" style=\"width: 100%\">\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>  \n        <th>분류</th>\n        <th>구분</th>\n        <th>기안자</th>\n        <th>부서</th>\n        <th>기안일</th>\n        <th>기안번호</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in callist\" :key=\"idx\">\n          <td><a @click=\"fnView(row[0])\">{{ row[1] }}</a></td>\n          <td>{{ row[3] }}</td>\n          <td>{{ row[5] }}</td>\n          <td>{{ row[9] }}</td>\n          <td>{{ row[20] }}</td>\n          <td>{{ row[19] }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <v-pagination\n        v-model=\"curPageNum\"\n        :length=\"numOfPages\">\n      </v-pagination>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\n\nexport default {\n  components: {\n  },\n  data() { //변수생성\n    return {\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      listData: [],\n      searchData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n      search: '',\n      flag:false,\n    }\n  },\n  mounted() {\n  this.fnGetList()\n},\n  methods: {\n      fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\")\n      .then((res) => {      \n        this.list = res.data\n        this.listData = res.data\n        console.log(res.data)\n\n\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    },\n    fnView(index) {\n        if(index = this.list[index-1][0]){\n          if(this.list[index-1][1] == \"IP신청서\"){\n          this.$router.push({\n          path: './BoardDetail',\n          query: this.list[index-1]\n    })\n}\n      else if(this.list[index-1][1] == \"인터넷차단해제신청서\"){\n          this.$router.push({\n          path: './BoardDetail_int',\n          query: this.list[index-1]\n    })\n      }\n      else if(this.list[index-1][1] == \"방화벽정책신청서\"){\n          this.$router.push({\n          path: './BoardDetail_firewall',\n          query: this.list[index-1]\n    })\n      }\n    }\n  },\n\n  },\n  computed:{\n    startOffset() {\n        return ((this.curPageNum - 1) * this.dataPerPage);\n      },\n      endOffset() {\n        return (this.startOffset + this.dataPerPage);\n      },\n      numOfPages() {\n        return Math.ceil(this.searchData.length / this.dataPerPage);\n      },\n      callist(){\n        const searchWord = this.search.toLowerCase();\n\n        this.searchData = this.listData.filter((data) => \n        {const flag=false\n          data.forEach((data2) =>{\n            if (data2 && data2.toString().toLowerCase().includes(searchWord)){\n              this.flag=true\n            }\n          })\n        }).slice(0)\n        return this.searchData.slice(this.startOffset, this.endOffset)\n      }\n    }\n  }\n</script>\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}