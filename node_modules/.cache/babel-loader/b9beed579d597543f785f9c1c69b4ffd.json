{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  slot: \"activator\"\n};\nconst _hoisted_2 = {\n  class: \"board-list\"\n};\nconst _hoisted_3 = {\n  class: \"common-buttons\"\n};\nconst _hoisted_4 = {\n  class: \"w3-table-all\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"분류\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"부서\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안일\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안번호\")])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tooltip = _resolveComponent(\"v-tooltip\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"headline\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_tooltip, {\n        bottom: \"\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_1, _toDisplayString(_ctx.board.name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.board.rmk), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_spacer), _createVNode(_component_v_text_field, {\n        modelValue: _ctx.params.search,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.params.search = $event),\n        \"append-icon\": \"search\",\n        label: \"검색\",\n        clearable: \"\",\n        style: {\n          \"width\": \"40px\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue-gray\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.fnWrite && _ctx.fnWrite(...args))\n  }, \"검색\")]), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.callist, (row, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row[2]), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n      onClick: $event => $options.fnView(row[0])\n    }, _toDisplayString(row[3]), 9 /* TEXT, PROPS */, _hoisted_6)]), _createElementVNode(\"td\", null, _toDisplayString(row[4]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[8]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[14]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[13]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_v_pagination, {\n    modelValue: $data.curPageNum,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.curPageNum = $event),\n    length: $options.numOfPages\n  }, null, 8 /* PROPS */, [\"modelValue\", \"length\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAIYA,IAAI,EAAC;AAAW;;EAarBC,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAgB;;EAGpBA,KAAK,EAAC;AAAc;gCACzBC,oBASQ,6BARRA,oBAOK,0BANHA,oBAAW,YAAP,IAAE,gBACNA,oBAAW,YAAP,IAAE,gBACNA,oBAAY,YAAR,KAAG,gBACPA,oBAAW,YAAP,IAAE,gBACNA,oBAAY,YAAR,KAAG,gBACPA,oBAAa,YAAT,MAAI;;;;;;;;;6DA5BdC,aAeSC;sBAdT,MAae,CAbfD,aAaeE;MAbDJ,KAAK,EAAC;IAAU;wBAC5B,MAGY,CAHZE,aAGYG;QAHDC,MAAM,EAAN;MAAM;0BACf,MAA4C,CAA5CL,oBAA4C,QAA5CM,UAA4C,mBAAnBC,UAAK,CAACC,IAAI,kBACnCR,oBAA0B,+BAAlBO,UAAK,CAACE,GAAG;;;UAEnBR,aAAqBS,sBACrBT,aAMgBU;oBALLJ,WAAM,CAACK,MAAM;mEAAbL,WAAM,CAACK,MAAM;QACtB,aAAW,EAAC,QAAQ;QACpBC,KAAK,EAAC,IAAI;QACVC,SAAS,EAAT,EAAS;QACTC,KAAkB,EAAlB;UAAA;QAAA;;;;;;MAIJf,oBA8BM,OA9BNgB,UA8BM,GA7BJhB,oBAEM,OAFNiB,UAEM,GADJjB,oBAA8F;IAAtFkB,IAAI,EAAC,QAAQ;IAACnB,KAAK,EAAC,iCAAiC;IAAMoB,OAAK,yCAAEZ,qCAAO;KAAE,IAAE,KAEvFP,oBAqBQ,SArBRoB,UAqBQ,GApBNC,UASQ,EACRrB,oBASQ,mCARRsB,oBAOOC,6BAPkBC,gBAAO,GAApBC,GAAG,EAAEC,GAAG;yBAApBJ,oBAOO;MAP4BK,GAAG,EAAED;IAAG,IACvC1B,oBAAqB,6BAAdyB,GAAG,qBACVzB,oBAAoD,aAAhDA,oBAA2C;MAAvCmB,OAAK,YAAEK,eAAM,CAACC,GAAG;wBAASA,GAAG,0CACrCzB,oBAAqB,6BAAdyB,GAAG,qBACVzB,oBAAqB,6BAAdyB,GAAG,qBACVzB,oBAAsB,6BAAfyB,GAAG,sBACVzB,oBAAsB,6BAAfyB,GAAG;sCAIhBxB,aAGiB2B;gBAFJC,gBAAU;+DAAVA,gBAAU;IAClBC,MAAM,EAAEN","names":["slot","class","_createElementVNode","_createVNode","_component_v_card","_component_v_card_title","_component_v_tooltip","bottom","_hoisted_1","_ctx","name","rmk","_component_v_spacer","_component_v_text_field","search","label","clearable","style","_hoisted_2","_hoisted_3","type","onClick","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","$options","row","idx","key","_component_v_pagination","$data","length"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n  <v-card>\n  <v-card-title class=\"headline\">\n    <v-tooltip bottom>\n      <span slot=\"activator\">{{board.name}}</span>\n      <span>{{board.rmk}}</span>\n    </v-tooltip>\n    <v-spacer></v-spacer>\n    <v-text-field\n      v-model=\"params.search\"\n      append-icon=\"search\"\n      label=\"검색\"\n      clearable\n      style=\"width:40px\"\n    ></v-text-field>\n  </v-card-title>\n  </v-card>\n  <div class=\"board-list\">\n    <div class=\"common-buttons\">\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnWrite\">검색</button>\n    </div>\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>  \n        <th>분류</th>\n        <th>제목</th>\n        <th>기안자</th>\n        <th>부서</th>\n        <th>기안일</th>\n        <th>기안번호</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in callist\" :key=\"idx\">\n          <td>{{ row[2] }}</td>\n          <td><a @click=\"fnView(row[0])\">{{ row[3] }}</a></td>\n          <td>{{ row[4] }}</td>\n          <td>{{ row[8] }}</td>\n          <td>{{ row[14] }}</td>\n          <td>{{ row[13] }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <v-pagination\n        v-model=\"curPageNum\"\n        :length=\"numOfPages\">\n      </v-pagination>\n  </div>\n  \n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  components: {\n  },\n  data() { //변수생성\n    return {\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      listData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n    }\n  },\n  mounted() {\n  this.fnGetList()\n},\n  methods: {\n      fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\")\n      .then((res) => {      \n        this.list = res.data  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\n        this.listData = res.data\n        console.log(res.data)\n\n\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    },\n    fnView(index) {\n      if(index = this.list[index-1][0]){\n    this.$router.push({\n   path: './BoardDetail',\n    query: this.list[index-1]\n    })\n  }\n  },\n\n  },\n  computed:{\n    startOffset() {\n        return ((this.curPageNum - 1) * this.dataPerPage);\n      },\n      endOffset() {\n        return (this.startOffset + this.dataPerPage);\n      },\n      numOfPages() {\n        return Math.ceil(this.listData.length / this.dataPerPage);\n      },\n      callist() {\n        return this.listData.slice(this.startOffset, this.endOffset)\n      }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}