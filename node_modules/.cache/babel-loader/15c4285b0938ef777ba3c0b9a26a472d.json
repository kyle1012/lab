{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.formSubmit && $options.formSubmit(...args), [\"prevent\"])),\n    method: \"post\"\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"selectFile\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.previewFile && $options.previewFile(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isUploading\n  }, \"Upload\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", null, [_hoisted_3, _createTextVNode(\" response : \" + _toDisplayString($data.response), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;;gCAMlBC,oBAAM;;;uBANZC,oBAUM,OAVNC,UAUM,GATJF,oBAQO;IARAG,QAAM,wDAAUC,mDAAU;IAAEC,MAAM,EAAC;MACxCL,oBAA4D;IAArDM,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,YAAY;IAAEC,QAAM,yCAAEJ,qDAAW;kDACxDJ,oBAA6D;IAArDM,IAAI,EAAC,QAAQ;IAAEG,QAAQ,EAAEC;KAAa,QAAM,8BAEpDV,oBAGM,cAFJW,UAAM,iCACK,oBAAGD,cAAQ","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","onSubmit","$options","method","type","ref","onChange","disabled","$data","_hoisted_3"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n    <form @submit.prevent=\"formSubmit\" method=\"post\">\n      <input type=\"file\" ref=\"selectFile\" @change=\"previewFile\" />\n      <button type=\"submit\" :disabled=\"isUploading\">Upload</button>\n\n      <div>\n        <hr />\n        response : {{ response }}\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  // axios module import\n  import http from \"../http\"\n\n  export default {\n    name: \"FormValidation\",\n    components: {},\n    data() {\n      return {\n        selectFile: null, // 파일 객체\n        previewImgUrl: null, // 미리보기 이미지 URL\n        isUploading: false, // 파일 업로드 체크\n        response: null, // 파일 업로드후 응답값\n      }\n    },\n    methods: {\n      previewFile() {\n        // 선택된 파일이 있는가?\n        if (0 < this.$refs.selectFile.files.length) {\n          // 0 번째 파일을 가져 온다.\n          this.selectFile = this.$refs.selectFile.files[0]\n          // 마지막 . 위치를 찾고 + 1 하여 확장자 명을 가져온다.\n          let fileExt = this.selectFile.name.substring(\n            this.selectFile.name.lastIndexOf(\".\") + 1\n          )\n          // 소문자로 변환\n          fileExt = fileExt.toLowerCase()\n          // 이미지 확장자 체크, 1메가 바이트 이하 인지 체크\n          if (\n            [\"jpeg\", \"png\", \"gif\", \"bmp\", \"pdf\"].includes(fileExt) &&\n            this.selectFile.size <= 9048576\n          ) {\n            // FileReader 를 활용하여 파일을 읽는다\n            var reader = new FileReader()\n            reader.onload = e => {\n              // base64\n              this.previewImgUrl = e.target.result\n            }\n            reader.readAsDataURL(this.selectFile)\n          } else if (this.selectFile.size <= 9048576) {\n            // 이미지외 파일\n            this.previewImgUrl = null\n          } else {\n            alert(\"파일을 다시 선택해 주세요.\")\n            this.selectFile = null\n            this.previewImgUrl = null\n          }\n        } else {\n          // 파일을 선택하지 않았을때\n          this.selectFile = null\n          this.previewImgUrl = null\n        }\n        console.log(this.selectFile)\n      },\n\n      async formSubmit() {\n        if (this.selectFile) {\n          // Form 필드 생성\n          //let form = new FormData()\n          //form.append(\"file\", this.selectFile) // api file name\n          //this.isUploading = true\n\n          http\n            .post(\"http://10.1.30.202:5000/upload\")\n            .then((res) => {\n              this.response = res.data\n              this.isUploading = false\n            })\n            .catch((error) => {\n              this.response = error\n              this.isUploading = false\n            })\n        } else {\n          alert(\"파일을 선택해 주세요.\")\n        }\n\n        return true\n      },\n    },\n  }\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module"}