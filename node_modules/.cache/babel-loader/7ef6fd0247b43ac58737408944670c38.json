{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nlet _Symbol$for, _Symbol$for2;\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nimport ee from 'namespace-emitter';\nvar _queued = /*#__PURE__*/_classPrivateFieldLooseKey(\"queued\");\nvar _emitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"emitter\");\nvar _isOpen = /*#__PURE__*/_classPrivateFieldLooseKey(\"isOpen\");\nvar _socket = /*#__PURE__*/_classPrivateFieldLooseKey(\"socket\");\nvar _handleMessage = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleMessage\");\n_Symbol$for = Symbol.for('uppy test: getSocket');\n_Symbol$for2 = Symbol.for('uppy test: getQueued');\nexport default class UppySocket {\n  constructor(opts) {\n    Object.defineProperty(this, _queued, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _emitter, {\n      writable: true,\n      value: ee()\n    });\n    Object.defineProperty(this, _isOpen, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _socket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handleMessage, {\n      writable: true,\n      value: e => {\n        try {\n          const message = JSON.parse(e.data);\n          this.emit(message.action, message.payload);\n        } catch (err) {\n          // TODO: use a more robust error handler.\n          console.log(err); // eslint-disable-line no-console\n        }\n      }\n    });\n\n    this.opts = opts;\n    if (!opts || opts.autoOpen !== false) {\n      this.open();\n    }\n  }\n  get isOpen() {\n    return _classPrivateFieldLooseBase(this, _isOpen)[_isOpen];\n  }\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _socket)[_socket];\n  }\n  [_Symbol$for2]() {\n    return _classPrivateFieldLooseBase(this, _queued)[_queued];\n  }\n  open() {\n    _classPrivateFieldLooseBase(this, _socket)[_socket] = new WebSocket(this.opts.target);\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onopen = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = true;\n      while (_classPrivateFieldLooseBase(this, _queued)[_queued].length > 0 && _classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n        const first = _classPrivateFieldLooseBase(this, _queued)[_queued].shift();\n        this.send(first.action, first.payload);\n      }\n    };\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onclose = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = false;\n    };\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onmessage = _classPrivateFieldLooseBase(this, _handleMessage)[_handleMessage];\n  }\n  close() {\n    var _classPrivateFieldLoo;\n    (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _socket)[_socket]) == null ? void 0 : _classPrivateFieldLoo.close();\n  }\n  send(action, payload) {\n    // attach uuid\n    if (!_classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n      _classPrivateFieldLooseBase(this, _queued)[_queued].push({\n        action,\n        payload\n      });\n      return;\n    }\n    _classPrivateFieldLooseBase(this, _socket)[_socket].send(JSON.stringify({\n      action,\n      payload\n    }));\n  }\n  on(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].on(action, handler);\n  }\n  emit(action, payload) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].emit(action, payload);\n  }\n  once(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].once(action, handler);\n  }\n}","map":{"version":3,"names":["_Symbol$for","_Symbol$for2","_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","ee","_queued","_emitter","_isOpen","_socket","_handleMessage","Symbol","for","UppySocket","constructor","opts","defineProperty","writable","value","e","message","JSON","parse","data","emit","action","payload","err","console","log","autoOpen","open","isOpen","WebSocket","target","onopen","length","first","shift","send","onclose","onmessage","close","_classPrivateFieldLoo","push","stringify","on","handler","once"],"sources":["/lab/node_modules/@uppy/companion-client/lib/Socket.js"],"sourcesContent":["let _Symbol$for, _Symbol$for2;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport ee from 'namespace-emitter';\n\nvar _queued = /*#__PURE__*/_classPrivateFieldLooseKey(\"queued\");\n\nvar _emitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"emitter\");\n\nvar _isOpen = /*#__PURE__*/_classPrivateFieldLooseKey(\"isOpen\");\n\nvar _socket = /*#__PURE__*/_classPrivateFieldLooseKey(\"socket\");\n\nvar _handleMessage = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleMessage\");\n\n_Symbol$for = Symbol.for('uppy test: getSocket');\n_Symbol$for2 = Symbol.for('uppy test: getQueued');\nexport default class UppySocket {\n  constructor(opts) {\n    Object.defineProperty(this, _queued, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _emitter, {\n      writable: true,\n      value: ee()\n    });\n    Object.defineProperty(this, _isOpen, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _socket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handleMessage, {\n      writable: true,\n      value: e => {\n        try {\n          const message = JSON.parse(e.data);\n          this.emit(message.action, message.payload);\n        } catch (err) {\n          // TODO: use a more robust error handler.\n          console.log(err); // eslint-disable-line no-console\n        }\n      }\n    });\n    this.opts = opts;\n\n    if (!opts || opts.autoOpen !== false) {\n      this.open();\n    }\n  }\n\n  get isOpen() {\n    return _classPrivateFieldLooseBase(this, _isOpen)[_isOpen];\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _socket)[_socket];\n  }\n\n  [_Symbol$for2]() {\n    return _classPrivateFieldLooseBase(this, _queued)[_queued];\n  }\n\n  open() {\n    _classPrivateFieldLooseBase(this, _socket)[_socket] = new WebSocket(this.opts.target);\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onopen = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = true;\n\n      while (_classPrivateFieldLooseBase(this, _queued)[_queued].length > 0 && _classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n        const first = _classPrivateFieldLooseBase(this, _queued)[_queued].shift();\n\n        this.send(first.action, first.payload);\n      }\n    };\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onclose = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = false;\n    };\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onmessage = _classPrivateFieldLooseBase(this, _handleMessage)[_handleMessage];\n  }\n\n  close() {\n    var _classPrivateFieldLoo;\n\n    (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _socket)[_socket]) == null ? void 0 : _classPrivateFieldLoo.close();\n  }\n\n  send(action, payload) {\n    // attach uuid\n    if (!_classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n      _classPrivateFieldLooseBase(this, _queued)[_queued].push({\n        action,\n        payload\n      });\n\n      return;\n    }\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].send(JSON.stringify({\n      action,\n      payload\n    }));\n  }\n\n  on(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].on(action, handler);\n  }\n\n  emit(action, payload) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].emit(action, payload);\n  }\n\n  once(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].once(action, handler);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}