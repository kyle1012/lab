{"ast":null,"code":"import secondsToTime from './secondsToTime.js';\nexport default function prettyETA(seconds) {\n  const time = secondsToTime(seconds); // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n\n  const hoursStr = time.hours === 0 ? '' : `${time.hours}h`;\n  const minutesStr = time.minutes === 0 ? '' : `${time.hours === 0 ? time.minutes : ` ${time.minutes.toString(10).padStart(2, '0')}`}m`;\n  const secondsStr = time.hours !== 0 ? '' : `${time.minutes === 0 ? time.seconds : ` ${time.seconds.toString(10).padStart(2, '0')}`}s`;\n  return `${hoursStr}${minutesStr}${secondsStr}`;\n}","map":{"version":3,"names":["secondsToTime","prettyETA","seconds","time","hoursStr","hours","minutesStr","minutes","toString","padStart","secondsStr"],"sources":["/lab/node_modules/@uppy/utils/lib/prettyETA.js"],"sourcesContent":["import secondsToTime from './secondsToTime.js';\nexport default function prettyETA(seconds) {\n  const time = secondsToTime(seconds); // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n\n  const hoursStr = time.hours === 0 ? '' : `${time.hours}h`;\n  const minutesStr = time.minutes === 0 ? '' : `${time.hours === 0 ? time.minutes : ` ${time.minutes.toString(10).padStart(2, '0')}`}m`;\n  const secondsStr = time.hours !== 0 ? '' : `${time.minutes === 0 ? time.seconds : ` ${time.seconds.toString(10).padStart(2, '0')}`}s`;\n  return `${hoursStr}${minutesStr}${secondsStr}`;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,eAAe,SAASC,SAAS,CAACC,OAAO,EAAE;EACzC,MAAMC,IAAI,GAAGH,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC;EACrC;EACA;;EAEA,MAAME,QAAQ,GAAGD,IAAI,CAACE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAI,GAAEF,IAAI,CAACE,KAAM,GAAE;EACzD,MAAMC,UAAU,GAAGH,IAAI,CAACI,OAAO,KAAK,CAAC,GAAG,EAAE,GAAI,GAAEJ,IAAI,CAACE,KAAK,KAAK,CAAC,GAAGF,IAAI,CAACI,OAAO,GAAI,IAAGJ,IAAI,CAACI,OAAO,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAE,GAAE;EACrI,MAAMC,UAAU,GAAGP,IAAI,CAACE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAI,GAAEF,IAAI,CAACI,OAAO,KAAK,CAAC,GAAGJ,IAAI,CAACD,OAAO,GAAI,IAAGC,IAAI,CAACD,OAAO,CAACM,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAE,GAAE;EACrI,OAAQ,GAAEL,QAAS,GAAEE,UAAW,GAAEI,UAAW,EAAC;AAChD"},"metadata":{},"sourceType":"module"}