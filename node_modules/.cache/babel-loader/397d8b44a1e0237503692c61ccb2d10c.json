{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.formSubmit && $options.formSubmit(...args), [\"prevent\"])),\n    method: \"post\"\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"selectFile\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.previewFile && $options.previewFile(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), $data.selectFile ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [_createElementVNode(\"li\", null, \"lastModified : \" + _toDisplayString($data.selectFile.lastModified), 1 /* TEXT */), _createElementVNode(\"li\", null, \"lastModifiedDate : \" + _toDisplayString($data.selectFile.lastModifiedDate), 1 /* TEXT */), _createElementVNode(\"li\", null, \"name : \" + _toDisplayString($data.selectFile.name), 1 /* TEXT */), _createElementVNode(\"li\", null, \"size(byte) : \" + _toDisplayString($data.selectFile.size), 1 /* TEXT */), _createElementVNode(\"li\", null, \"type : \" + _toDisplayString($data.selectFile.type), 1 /* TEXT */), _createElementVNode(\"li\", null, \"webkitRelativePath : \" + _toDisplayString($data.selectFile.webkitRelativePath), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.previewImgUrl ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: $data.previewImgUrl\n  }, null, 8 /* PROPS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isUploading\n  }, \"Upload\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", null, [_hoisted_5, _createTextVNode(\" response : \" + _toDisplayString(_ctx.resopnse.body), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;;;;;;gCAelBC,oBAAM;;;uBAfZC,oBAmBM,OAnBNC,UAmBM,GAlBJF,oBAiBO;IAjBAG,QAAM,wDAAUC,mDAAU;IAAEC,MAAM,EAAC;MACxCL,oBAA4D;IAArDM,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,YAAY;IAAEC,QAAM,yCAAEJ,qDAAW;kDAC9CK,gBAAU,kBAApBR,oBAOK,mBANHD,oBAAqD,YAAjD,iBAAe,oBAAGS,gBAAU,CAACC,YAAY,kBAC7CV,oBAA6D,YAAzD,qBAAmB,oBAAGS,gBAAU,CAACE,gBAAgB,kBACrDX,oBAAqC,YAAjC,SAAO,oBAAGS,gBAAU,CAACG,IAAI,kBAC7BZ,oBAA2C,YAAvC,eAAa,oBAAGS,gBAAU,CAACI,IAAI,kBACnCb,oBAAqC,YAAjC,SAAO,oBAAGS,gBAAU,CAACH,IAAI,kBAC7BN,oBAAiE,YAA7D,uBAAqB,oBAAGS,gBAAU,CAACK,kBAAkB,yDAEhDL,mBAAa,kBAAxBR,oBAAiD;;IAAtBc,GAAG,EAAEN;4EAChCT,oBAA6D;IAArDM,IAAI,EAAC,QAAQ;IAAEU,QAAQ,EAAEP;KAAa,QAAM,8BAEpDT,oBAGM,cAFJiB,UAAM,iCACK,oBAAGC,aAAQ,CAACC,IAAI","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","onSubmit","$options","method","type","ref","onChange","$data","lastModified","lastModifiedDate","name","size","webkitRelativePath","src","disabled","_hoisted_5","_ctx","body"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n    <form @submit.prevent=\"formSubmit\" method=\"post\">\n      <input type=\"file\" ref=\"selectFile\" @change=\"previewFile\" />\n      <ul v-if=\"selectFile\">\n        <li>lastModified : {{ selectFile.lastModified }}</li>\n        <li>lastModifiedDate : {{ selectFile.lastModifiedDate }}</li>\n        <li>name : {{ selectFile.name }}</li>\n        <li>size(byte) : {{ selectFile.size }}</li>\n        <li>type : {{ selectFile.type }}</li>\n        <li>webkitRelativePath : {{ selectFile.webkitRelativePath }}</li>\n      </ul>\n      <img v-if=\"previewImgUrl\" :src=\"previewImgUrl\" />\n      <button type=\"submit\" :disabled=\"isUploading\">Upload</button>\n\n      <div>\n        <hr />\n        response : {{ resopnse.body }}\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  // axios module import\n  import http from \"../http\"\n\n  export default {\n    name: \"FormValidation\",\n    components: {},\n    data() {\n      return {\n        selectFile: null, // 파일 객체\n        previewImgUrl: null, // 미리보기 이미지 URL\n        isUploading: false, // 파일 업로드 체크\n        response: null, // 파일 업로드후 응답값\n      }\n    },\n    methods: {\n      previewFile() {\n        // 선택된 파일이 있는가?\n        if (0 < this.$refs.selectFile.files.length) {\n          // 0 번째 파일을 가져 온다.\n          this.selectFile = this.$refs.selectFile.files[0]\n          // 마지막 . 위치를 찾고 + 1 하여 확장자 명을 가져온다.\n          let fileExt = this.selectFile.name.substring(\n            this.selectFile.name.lastIndexOf(\".\") + 1\n          )\n          // 소문자로 변환\n          fileExt = fileExt.toLowerCase()\n          // 이미지 확장자 체크, 1메가 바이트 이하 인지 체크\n          if (\n            [\"jpeg\", \"png\", \"gif\", \"bmp\"].includes(fileExt) &&\n            this.selectFile.size <= 9048576\n          ) {\n            // FileReader 를 활용하여 파일을 읽는다\n            var reader = new FileReader()\n            reader.onload = e => {\n              // base64\n              this.previewImgUrl = e.target.result\n            }\n            reader.readAsDataURL(this.selectFile)\n          } else if (this.selectFile.size <= 9048576) {\n            // 이미지외 파일\n            this.previewImgUrl = null\n          } else {\n            alert(\"파일을 다시 선택해 주세요.\")\n            this.selectFile = null\n            this.previewImgUrl = null\n          }\n        } else {\n          // 파일을 선택하지 않았을때\n          this.selectFile = null\n          this.previewImgUrl = null\n        }\n        console.log(this.selectFile)\n      },\n\n      async formSubmit() {\n        if (this.selectFile) {\n          // Form 필드 생성\n          let form = new FormData()\n          form.append(\"file\", this.selectFile) // api file name\n          this.isUploading = true\n\n          http\n            .post(\"http://10.1.30.202:5000/upload\", form, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            })\n            .then(res => {\n              this.response = res\n              this.isUploading = false\n            })\n            .catch(error => {\n              this.response = error\n              this.isUploading = false\n            })\n        } else {\n          alert(\"파일을 선택해 주세요.\")\n        }\n\n        return true\n      },\n    },\n  }\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module"}