{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nexport default {\n  data() {\n    return {\n      Src: null,\n      Base64: null,\n      DocumentName: null,\n      DialogStatus: false,\n      Pdf: null,\n      BtnCloseName: null,\n      BtnCloseColor: null,\n      TypeBtnClose: null,\n      HideBtnClose: false,\n      HideIconClose: false,\n      Text: null,\n      Outlined: null\n    };\n  },\n  props: ['pdf', 'dialogStatus', 'documentName', 'btnCloseName', 'btnCloseColor', 'typeBtnClose', 'hideBtnClose', 'hideIconClose'],\n  created() {\n    this.DocumentName = this.documentName;\n    this.BtnCloseName = !this.btnCloseName || this.btnCloseName == '' ? 'CLOSE' : this.btnCloseName;\n    this.BtnCloseColor = !this.btnCloseColor || this.btnCloseColor == '' ? '#ffffff darken' : this.btnCloseColor;\n    this.HideBtnClose = !this.hideBtnClose ? false : this.hideBtnClose;\n    this.HideIconClose = this.hideIconClose ? true : this.hideIconClose;\n    this.Pdf = this.pdf;\n    this.DialogStatus = this.dialogStatus;\n    this.TypeBtnClose = this.typeBtnCloseFun(this.typeBtnClose);\n  },\n  watch: {\n    pdf: function (val) {\n      this.Pdf = val;\n    },\n    dialogStatus: function (val) {\n      this.DialogStatus = val;\n      if (val) {\n        this.openDialog();\n      }\n    }\n  },\n  methods: {\n    openDialog() {\n      let pdfData = this.base64ToArrayBuffer(this.Pdf);\n      let file = new Blob([pdfData], {\n        type: 'application/pdf'\n      });\n      let fileUrl = URL.createObjectURL(file);\n      this.Src = fileUrl;\n    },\n    base64ToArrayBuffer(base64) {\n      let binary_string = atob(base64.toString().split(\",\")[1]);\n      let len = binary_string.length;\n      let bytes = new Uint8Array(len);\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n      }\n      return bytes.buffer;\n    },\n    typeBtnCloseFun(val) {\n      if (val === 'text') {\n        this.Text = true;\n        this.Outlined = false;\n      } else if (val === 'outlined') {\n        this.Text = false;\n        this.Outlined = true;\n      }\n    },\n    closePdfViewer() {\n      this.DialogStatus = false;\n      this.$emit('closePdfViewer', false);\n    }\n  }\n};","map":{"version":3,"names":["data","Src","Base64","DocumentName","DialogStatus","Pdf","BtnCloseName","BtnCloseColor","TypeBtnClose","HideBtnClose","HideIconClose","Text","Outlined","props","created","documentName","btnCloseName","btnCloseColor","hideBtnClose","hideIconClose","pdf","dialogStatus","typeBtnCloseFun","typeBtnClose","watch","val","openDialog","methods","pdfData","base64ToArrayBuffer","file","Blob","type","fileUrl","URL","createObjectURL","base64","binary_string","atob","toString","split","len","length","bytes","Uint8Array","i","charCodeAt","buffer","closePdfViewer","$emit"],"sources":["/lab/node_modules/vuetify-more-component/src/components/pdfViewer/pdfViewer.js"],"sourcesContent":["export default {\r\n    data() {\r\n        return {\r\n            Src: null,\r\n            Base64: null,\r\n            DocumentName: null,\r\n            DialogStatus: false,\r\n            Pdf: null,\r\n            BtnCloseName: null,\r\n            BtnCloseColor: null,\r\n            TypeBtnClose: null,\r\n            HideBtnClose: false,\r\n            HideIconClose: false,\r\n            Text: null,\r\n            Outlined: null,\r\n\r\n        }\r\n    },\r\n    props: ['pdf', 'dialogStatus', 'documentName', 'btnCloseName', 'btnCloseColor', 'typeBtnClose', 'hideBtnClose', 'hideIconClose'],\r\n    created() {\r\n        this.DocumentName = this.documentName;\r\n        this.BtnCloseName = !this.btnCloseName || this.btnCloseName == '' ? 'CLOSE' : this.btnCloseName;\r\n        this.BtnCloseColor = !this.btnCloseColor || this.btnCloseColor == '' ? '#ffffff darken' : this.btnCloseColor;\r\n        this.HideBtnClose = !this.hideBtnClose ? false : this.hideBtnClose;\r\n        this.HideIconClose = this.hideIconClose ? true : this.hideIconClose;\r\n        this.Pdf = this.pdf;\r\n        this.DialogStatus = this.dialogStatus;\r\n        this.TypeBtnClose = this.typeBtnCloseFun(this.typeBtnClose);\r\n    },\r\n\r\n    watch: {\r\n        pdf: function (val) {\r\n            this.Pdf = val;\r\n        },\r\n        dialogStatus: function (val) {\r\n            this.DialogStatus = val;\r\n            if (val) {\r\n                this.openDialog();\r\n            }\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        openDialog() {\r\n            let pdfData = this.base64ToArrayBuffer(this.Pdf);\r\n            let file = new Blob([pdfData], { type: 'application/pdf' });\r\n            let fileUrl = URL.createObjectURL(file);\r\n            this.Src = fileUrl;\r\n        },\r\n\r\n        base64ToArrayBuffer(base64) {\r\n            let binary_string = atob(base64.toString().split(\",\")[1]);\r\n            let len = binary_string.length;\r\n            let bytes = new Uint8Array(len);\r\n            for (let i = 0; i < len; i++) {\r\n                bytes[i] = binary_string.charCodeAt(i);\r\n            }\r\n            return bytes.buffer;\r\n        },\r\n\r\n        typeBtnCloseFun(val) {\r\n            if (val === 'text') {\r\n                this.Text = true;\r\n                this.Outlined = false;\r\n            } else if (val === 'outlined') {\r\n                this.Text = false;\r\n                this.Outlined = true;\r\n            }\r\n        },\r\n\r\n        closePdfViewer() {\r\n            this.DialogStatus = false;\r\n            this.$emit('closePdfViewer', false);\r\n        },\r\n    },\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}