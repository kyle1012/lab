{"ast":null,"code":"function _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nvar _aliveTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"aliveTimer\");\nvar _isDone = /*#__PURE__*/_classPrivateFieldLooseKey(\"isDone\");\nvar _onTimedOut = /*#__PURE__*/_classPrivateFieldLooseKey(\"onTimedOut\");\nvar _timeout = /*#__PURE__*/_classPrivateFieldLooseKey(\"timeout\");\n\n/**\n * Helper to abort upload requests if there has not been any progress for `timeout` ms.\n * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`\n * Call `timer.progress()` to signal that there has been progress of any kind.\n * Call `timer.done()` when the upload has completed.\n */\nclass ProgressTimeout {\n  constructor(timeout, timeoutHandler) {\n    Object.defineProperty(this, _aliveTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isDone, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _onTimedOut, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _timeout, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _timeout)[_timeout] = timeout;\n    _classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut] = timeoutHandler;\n  }\n  progress() {\n    // Some browsers fire another progress event when the upload is\n    // cancelled, so we have to ignore progress after the timer was\n    // told to stop.\n    if (_classPrivateFieldLooseBase(this, _isDone)[_isDone]) return;\n    if (_classPrivateFieldLooseBase(this, _timeout)[_timeout] > 0) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = setTimeout(_classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut], _classPrivateFieldLooseBase(this, _timeout)[_timeout]);\n    }\n  }\n  done() {\n    if (!_classPrivateFieldLooseBase(this, _isDone)[_isDone]) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = null;\n      _classPrivateFieldLooseBase(this, _isDone)[_isDone] = true;\n    }\n  }\n}\nexport default ProgressTimeout;","map":{"version":3,"names":["_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","_aliveTimer","_isDone","_onTimedOut","_timeout","ProgressTimeout","constructor","timeout","timeoutHandler","defineProperty","writable","value","progress","clearTimeout","setTimeout","done"],"sources":["/lab/node_modules/@uppy/utils/lib/ProgressTimeout.js"],"sourcesContent":["function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nvar _aliveTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"aliveTimer\");\n\nvar _isDone = /*#__PURE__*/_classPrivateFieldLooseKey(\"isDone\");\n\nvar _onTimedOut = /*#__PURE__*/_classPrivateFieldLooseKey(\"onTimedOut\");\n\nvar _timeout = /*#__PURE__*/_classPrivateFieldLooseKey(\"timeout\");\n\n/**\n * Helper to abort upload requests if there has not been any progress for `timeout` ms.\n * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`\n * Call `timer.progress()` to signal that there has been progress of any kind.\n * Call `timer.done()` when the upload has completed.\n */\nclass ProgressTimeout {\n  constructor(timeout, timeoutHandler) {\n    Object.defineProperty(this, _aliveTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isDone, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _onTimedOut, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _timeout, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _timeout)[_timeout] = timeout;\n    _classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut] = timeoutHandler;\n  }\n\n  progress() {\n    // Some browsers fire another progress event when the upload is\n    // cancelled, so we have to ignore progress after the timer was\n    // told to stop.\n    if (_classPrivateFieldLooseBase(this, _isDone)[_isDone]) return;\n\n    if (_classPrivateFieldLooseBase(this, _timeout)[_timeout] > 0) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = setTimeout(_classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut], _classPrivateFieldLooseBase(this, _timeout)[_timeout]);\n    }\n  }\n\n  done() {\n    if (!_classPrivateFieldLooseBase(this, _isDone)[_isDone]) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = null;\n      _classPrivateFieldLooseBase(this, _isDone)[_isDone] = true;\n    }\n  }\n\n}\n\nexport default ProgressTimeout;"],"mappings":"AAAA,SAASA,2BAA2B,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,QAAQ,EAAEC,UAAU,CAAC,EAAE;IAAE,MAAM,IAAIK,SAAS,CAAC,gDAAgD,CAAC;EAAE;EAAE,OAAON,QAAQ;AAAE;AAE1N,IAAIO,EAAE,GAAG,CAAC;AAEV,SAASC,0BAA0B,CAACC,IAAI,EAAE;EAAE,OAAO,YAAY,GAAGF,EAAE,EAAE,GAAG,GAAG,GAAGE,IAAI;AAAE;AAErF,IAAIC,WAAW,GAAG,aAAaF,0BAA0B,CAAC,YAAY,CAAC;AAEvE,IAAIG,OAAO,GAAG,aAAaH,0BAA0B,CAAC,QAAQ,CAAC;AAE/D,IAAII,WAAW,GAAG,aAAaJ,0BAA0B,CAAC,YAAY,CAAC;AAEvE,IAAIK,QAAQ,GAAG,aAAaL,0BAA0B,CAAC,SAAS,CAAC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,eAAe,CAAC;EACpBC,WAAW,CAACC,OAAO,EAAEC,cAAc,EAAE;IACnCf,MAAM,CAACgB,cAAc,CAAC,IAAI,EAAER,WAAW,EAAE;MACvCS,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFlB,MAAM,CAACgB,cAAc,CAAC,IAAI,EAAEP,OAAO,EAAE;MACnCQ,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IACFlB,MAAM,CAACgB,cAAc,CAAC,IAAI,EAAEN,WAAW,EAAE;MACvCO,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFlB,MAAM,CAACgB,cAAc,CAAC,IAAI,EAAEL,QAAQ,EAAE;MACpCM,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IACd,CAAC,CAAC;IACFrB,2BAA2B,CAAC,IAAI,EAAEc,QAAQ,CAAC,CAACA,QAAQ,CAAC,GAAGG,OAAO;IAC/DjB,2BAA2B,CAAC,IAAI,EAAEa,WAAW,CAAC,CAACA,WAAW,CAAC,GAAGK,cAAc;EAC9E;EAEAI,QAAQ,GAAG;IACT;IACA;IACA;IACA,IAAItB,2BAA2B,CAAC,IAAI,EAAEY,OAAO,CAAC,CAACA,OAAO,CAAC,EAAE;IAEzD,IAAIZ,2BAA2B,CAAC,IAAI,EAAEc,QAAQ,CAAC,CAACA,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7DS,YAAY,CAACvB,2BAA2B,CAAC,IAAI,EAAEW,WAAW,CAAC,CAACA,WAAW,CAAC,CAAC;MACzEX,2BAA2B,CAAC,IAAI,EAAEW,WAAW,CAAC,CAACA,WAAW,CAAC,GAAGa,UAAU,CAACxB,2BAA2B,CAAC,IAAI,EAAEa,WAAW,CAAC,CAACA,WAAW,CAAC,EAAEb,2BAA2B,CAAC,IAAI,EAAEc,QAAQ,CAAC,CAACA,QAAQ,CAAC,CAAC;IAC9L;EACF;EAEAW,IAAI,GAAG;IACL,IAAI,CAACzB,2BAA2B,CAAC,IAAI,EAAEY,OAAO,CAAC,CAACA,OAAO,CAAC,EAAE;MACxDW,YAAY,CAACvB,2BAA2B,CAAC,IAAI,EAAEW,WAAW,CAAC,CAACA,WAAW,CAAC,CAAC;MACzEX,2BAA2B,CAAC,IAAI,EAAEW,WAAW,CAAC,CAACA,WAAW,CAAC,GAAG,IAAI;MAClEX,2BAA2B,CAAC,IAAI,EAAEY,OAAO,CAAC,CAACA,OAAO,CAAC,GAAG,IAAI;IAC5D;EACF;AAEF;AAEA,eAAeG,eAAe"},"metadata":{},"sourceType":"module"}