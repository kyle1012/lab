{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"게시판\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"boardWrap\"\n};\nconst _hoisted_3 = {\n  class: \"boardTop\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"5\",\n  selected: \"\"\n}, \" 5개씩 보기\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"10\"\n}, \" 10개씩 보기\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"20\"\n}, \" 20개씩 보기\", -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_4, _hoisted_5, _hoisted_6];\nconst _hoisted_8 = {\n  class: \"table\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [/*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"70\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"120\"\n}), /*#__PURE__*/_createElementVNode(\"col\", {\n  width: \"120\"\n})], -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"등록일\")])], -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"pagination\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"total \" + _toDisplayString($setup.cache.length) + \" post \", 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.listCunt = $event)\n  }, _hoisted_7, 512 /* NEED_PATCH */), [[_vModelSelect, $setup.listCunt]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"table\", _hoisted_8, [_hoisted_9, _hoisted_10, _createElementVNode(\"tbody\", null, [$setup.list.length > 0 ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.list, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: `list-${idx}`\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.idx), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.userName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.regDate.substr(0, 10)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"ul\", _hoisted_11, [_createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      'disabled': $setup.isBtnFirst\n    }])\n  }, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $setup.pageArrow('first'), [\"prevent\"]))\n  }, \"First\")], 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      'disabled': $setup.isBtnPrev\n    }])\n  }, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => $setup.pageArrow('prev'), [\"prevent\"]))\n  }, \"Previous\")], 2 /* CLASS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pageList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: `list-${index}`,\n      class: _normalizeClass([\"page-item\", {\n        'active': item == $setup.currentPage\n      }])\n    }, [_createElementVNode(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: _withModifiers($event => $setup.page(item), [\"prevent\"])\n    }, _toDisplayString(item + 1), 9 /* TEXT, PROPS */, _hoisted_12)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      'disabled': $setup.isBtnNext\n    }])\n  }, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers($event => $setup.pageArrow('next'), [\"prevent\"]))\n  }, \"Next\")], 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass([\"page-item\", {\n      'disabled': $setup.isBtnLast\n    }])\n  }, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers($event => $setup.pageArrow('last'), [\"prevent\"]))\n  }, \"Last\")], 2 /* CLASS */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _withModifiers($setup.write, [\"prevent\"]),\n    class: \"btn btn-sm btn-primary\"\n  }, \"작성\", 8 /* PROPS */, _hoisted_13)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","value","selected","_hoisted_4","_hoisted_5","_hoisted_6","width","_hoisted_1","_hoisted_2","_hoisted_3","$setup","length","_hoisted_8","_hoisted_9","_hoisted_10","_createElementBlock","_Fragment","key","item","idx","title","userName","regDate","substr","_hoisted_11","href","onClick","index"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n    <h1>게시판</h1>\n    <div class=\"boardWrap\">\n      <div class=\"boardTop\">\n  \n        <p>total {{cache.length}} post </p>\n        <select v-model=\"listCunt\">\n          <option value=\"5\" selected> 5개씩 보기</option>\n          <option value=\"10\"> 10개씩 보기</option>\n          <option value=\"20\"> 20개씩 보기</option>\n        </select>\n      </div>\n      <div>\n        <table class=\"table\">\n          <colgroup>\n            <col width=\"70\">\n            <col width=\"\">\n            <col width=\"120\">\n            <col width=\"120\">\n          </colgroup>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>제목</th>\n              <th>작성자</th>\n              <th>등록일</th>\n            </tr>\n          </thead>\n          <tbody>\n            <template v-if=\"list.length > 0\">\n            <tr v-for=\"(item, idx) in list\" :key=\"`list-${idx}`\">\n              <td>{{item.idx}}</td>\n              <td>{{item.title}}</td>\n              <td>{{item.userName}}</td>\n              <td>{{item.regDate.substr(0,10)}}</td>\n            </tr>\n            </template>\n          </tbody>\n        </table>\n      </div>\n      <ul class=\"pagination\">\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnFirst}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('first')\">First</a></li>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnPrev}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('prev')\">Previous</a></li>\n        <template v-for=\"(item, index) in pageList\" :key=\"`list-${index}`\">\n          <li class=\"page-item\" :class=\"{'active' : item == currentPage}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"page(item)\">{{item+1}}</a></li>\n        </template>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnNext}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('next')\">Next</a></li>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnLast}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('last')\">Last</a></li>\n      </ul>\n      <div>\n        <a href=\"#\" @click.prevent=\"write\" class=\"btn btn-sm btn-primary\">작성</a>\n      </div>\n      \n    </div>\n  </template>\n  <script setup>\n  import router from '@/router'\n  import axios from 'axios'\n  import {ref, watch} from 'vue'\n  \n  const list = ref([]) //보여지는 리스트\n  const cache = ref([]) //리스트 전체\n  \n  const listCunt = ref('5') // 한 페이지에 노출될 게시글 개수\n  \n  let currentPage = ref(0) //현재 페이지\n  let pageNum = 10 //페이징 갯수\n  const pageList = ref([]) // 보여지는 페이지 리스트\n  let totalPage = ref(0); //페이지 숫자\n  \n  let isBtnFirst = ref(true); \n  let isBtnPrev = ref(true); \n  let isBtnNext = ref(true); \n  let isBtnLast = ref(true); \n  \n  const currentPageListStart = () =>{\n    return Math.floor(currentPage.value / pageNum) * pageNum\n  }\n  // 페이징 \n  const paging =() => {\n    //보여지는 페이지 리셋\n    pageList.value = [];\n  \n    //몇페이지 까지 있는지 확인\n    if(cache.value.length % listCunt.value == 0 ){\n      totalPage.value = (cache.value.length / listCunt.value) -1\n    } else{\n      totalPage.value =  Math.ceil(cache.value.length / listCunt.value) -1\n    }\n  \n    //현재페이지 기준으로 페이징 숫자 넣기\n    let pageListStart = currentPageListStart()\n    for(let i= 0; i< pageNum; i++){   \n      if(totalPage.value >= pageListStart){\n        pageList.value.push(pageListStart)\n        pageListStart ++;\n      }\n    }\n  }\n  \n  \n  const getList = () =>{\n    \n    axios.post('✨API 주소✨')\n    .then(res => {\n      \n      const json = res.data\n      if(json.result == \"success\"){\n        cache.value = json.data\n      }\n      list.value = [] //보여지는 게시물 리셋\n      \n      let listIdx = (listCunt.value * (currentPage.value )); // 보여질 게시물 index\n      for(let i= 0; i < listCunt.value; i++ ){       //게시글 수 만큼 루프\n        if(cache.value.length > listIdx) { //\n          list.value.push(cache.value[listIdx])\n          listIdx ++;\n        }\n      }\n      paging()\n      pageBtnCheck()\n  \n    })  \n  }\n  \n  getList()\n  \n  //페이지 번호 클릭시\n  const page = (e) =>{\n    currentPage.value = e  \n    getList()\n  }\n  \n  //리스트 갯수 수정시\n  watch(listCunt,(after, before)  =>{\n    currentPage.value = 0\n    getList()\n  })\n  \n  const pageBtnCheck = () =>{\n    isBtnFirst.value = currentPage.value == 0 ? true : false\n    isBtnPrev.value = currentPage.value == 0 ? true : false\n    \n    isBtnNext.value = currentPage.value == totalPage.value ? true : false\n    isBtnLast.value = currentPage.value == totalPage.value ? true : false\n  }\n  \n  watch(currentPage,(after, before)  =>{\n    pageBtnCheck()\n  })\n  \n  \n  //페이지 처음/끝/이전/다음 버튼 클릭시\n  const pageArrow = (e) => {\n    let movePage = parseInt(currentPage.value)\n    if(e == 'first'){ //처음으로\n      movePage = 0\n    } else if(e == 'last'){    //마지막\n      movePage = totalPage.value\n    } else if(e == 'prev'){    //이전  \n      movePage = currentPageListStart() - 1    \n      movePage < 0 ? movePage = 0 : ''\n    } else{//다음\n      movePage = currentPageListStart() + 10\n      movePage >= totalPage.value ? movePage = totalPage.value : ''\n    }\n    page(movePage)\n  }\n  \n  \n  const write = () => {\n    router.push('/ex/board/write')\n  }\n  \n  </script>"]},"metadata":{},"sourceType":"module"}