{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_dashboard, {\n    ref: \"dash\",\n    uppy: _ctx.uppy,\n    props: {\n      metaFields: [{\n        id: 'name',\n        name: 'Name',\n        placeholder: 'file name'\n      }, {\n        id: 'caption',\n        name: 'Caption',\n        placeholder: 'describe what the image is about'\n      }]\n    },\n    plugins: ['Webcam', 'ImageEditor']\n  }, null, 8 /* PROPS */, [\"uppy\"])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,oBAgBM,OAhBNC,UAgBM,GAfJC,aAcEC;IAbAC,GAAG,EAAC,MAAM;IACTC,IAAI,EAAEC,SAAI;IACVC,KAAK,EAAE;;;;;;;;;;KASP;IACAC,OAAO,EAAE","names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_dashboard","ref","uppy","_ctx","props","plugins"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <dashboard\n      ref=\"dash\"\n      :uppy=\"uppy\"\n      :props=\"{\n        metaFields: [\n          { id: 'name', name: 'Name', placeholder: 'file name' },\n          {\n            id: 'caption',\n            name: 'Caption',\n            placeholder: 'describe what the image is about',\n          },\n        ],\n      }\"\n      :plugins=\"['Webcam', 'ImageEditor']\"\n    />\n  </div>\n</template>\n\n<script>\nimport Uppy from '@uppy/core'\nimport FileInput from '@uppy/file-input'\nimport XHRUpload from '@uppy/xhr-upload'\nimport ProgressBar from '@uppy/progress-bar'\n\ndocument.querySelector('.Uppy').innerHTML = ''\n\nconst uppy = new Uppy({ debug: true, autoProceed: true })\nuppy.use(FileInput, {\n  target: '.Uppy',\n})\nuppy.use(ProgressBar, {\n  target: '.UppyProgressBar',\n  hideAfterFinish: false,\n})\nuppy.use(XHRUpload, {\n  endpoint: 'https://xhr-server.herokuapp.com/upload',\n  formData: true,\n  fieldName: 'files[]',\n})\n\n// And display uploaded files\nuppy.on('upload-success', (file, response) => {\n  const url = response.uploadURL\n  const fileName = file.name\n\n  const li = document.createElement('li')\n  const a = document.createElement('a')\n  a.href = url\n  a.target = '_blank'\n  a.appendChild(document.createTextNode(fileName))\n  li.appendChild(a)\n\n  document.querySelector('.uploaded-files ol').appendChild(li)\n})\n</script>"]},"metadata":{},"sourceType":"module"}