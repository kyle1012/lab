{"ast":null,"code":"export default {\n  name: \"CompoPdf\",\n  data() {\n    return {\n      srcData: null,\n      byteArrayPDF: false\n    };\n  },\n  created() {\n    this.fetchByteArray();\n  },\n  methods: {\n    fetchByteArray: async function () {\n      // to see the \"loading...\" effect, I intentionally add a \"setTimeout\" code. that loads the pdf after \"3s\". You can remove it in your real app.\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      fetch('http://10.1.30.202:5000/lab/backend/files/123_11:26:00.pdf').then(response => {\n        console.log(response);\n        // for this case \"response.url\" is what we need, but if you fetch data for example from a database ... you may need \"response.json()\" or other codes;\n        this.srcData = response.url;\n        this.byteArrayPDF = true;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAaE,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,cAAc,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IAEPD,cAAc,EAAE,kBAAkB;MAChC;MACA,MAAM,IAAIE,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvDE,KAAK,CAAC,4DAA4D,EAC7DC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB;QACA,IAAI,CAACV,OAAM,GAAIU,QAAQ,CAACG,GAAG;QAC3B,IAAI,CAACZ,YAAW,GAAI,IAAI;MAC1B,CAAC;IACP;EACF;AACF","names":["name","data","srcData","byteArrayPDF","created","fetchByteArray","methods","Promise","resolve","setTimeout","fetch","then","response","console","log","url"],"sourceRoot":"","sources":["/lab/src/components/pdfview.vue"],"sourcesContent":["<template>\n\n    <div v-if=\"byteArrayPDF\">\n      <iframe :src=\"srcData\" width=\"100%\" height=\"500px\">\n      </iframe>\n    </div>\n    <div v-else>\n      loading...\n    </div>\n  \n  </template>\n  \n  <script>\n  export default {\n    name: \"CompoPdf\",\n    data() {\n      return {\n        srcData: null,\n        byteArrayPDF: false,\n      }\n    },\n    created() {\n      this.fetchByteArray();\n    },\n    methods: {\n  \n      fetchByteArray: async function () {\n        // to see the \"loading...\" effect, I intentionally add a \"setTimeout\" code. that loads the pdf after \"3s\". You can remove it in your real app.\n        await new Promise(resolve => setTimeout(resolve, 3000));\n        fetch('http://10.1.30.202:5000/lab/backend/files/123_11:26:00.pdf')\n            .then(response => {\n              console.log(response);\n              // for this case \"response.url\" is what we need, but if you fetch data for example from a database ... you may need \"response.json()\" or other codes;\n              this.srcData = response.url;\n              this.byteArrayPDF = true;\n            })\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  \n  </style>"]},"metadata":{},"sourceType":"module"}