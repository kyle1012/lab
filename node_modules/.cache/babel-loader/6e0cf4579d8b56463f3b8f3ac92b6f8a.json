{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Login',\n  data: () => ({\n    uid: '',\n    password: ''\n  }),\n  methods: {\n    ...mapActions(['login']),\n    async onSubmit() {\n      this.$validator.validateAll();\n      if (!this.errors.any()) {\n        try {\n          let loginResult = await this.login({\n            uid: this.uid,\n            password: this.password\n          });\n          if (loginResult) this.goToPages();\n        } catch (err) {\n          console.error(err);\n        }\n      } else {\n        console.log('validate err');\n      }\n    },\n    goToPages() {\n      this.$router.push({\n        name: 'HelloWorld'\n      });\n    }\n  },\n  computed: {\n    ...mapGetters({\n      errorState: 'getErrorState'\n    })\n  }\n};","map":{"version":3,"mappings":";AAgBA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAK;AAC5C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,OAAO;IACXC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,GAAGN,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IACxB,MAAMO,QAAO,GAAK;MAChB,IAAI,CAACC,UAAU,CAACC,WAAW,EAAC;MAC5B,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,GAAG,EAAE,EAAE;QACtB,IAAI;UACF,IAAIC,WAAU,GAAI,MAAM,IAAI,CAACC,KAAK,CAAC;YAAET,GAAG,EAAE,IAAI,CAACA,GAAG;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC;UAC7E,IAAIO,WAAW,EAAE,IAAI,CAACE,SAAS,EAAC;QAClC,EAAE,OAAOC,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAACF,GAAG;QACnB;MACF,OAAO;QACLC,OAAO,CAACE,GAAG,CAAC,cAAc;MAC5B;IACF,CAAC;IACDJ,SAAQ,GAAK;MACX,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC;QAChBlB,IAAI,EAAE;MACR,CAAC;IACH;EACF,CAAC;EACDmB,QAAQ,EAAE;IACR,GAAGpB,UAAU,CAAC;MACZqB,UAAU,EAAE;IACd,CAAC;EACH;AACF","names":["mapActions","mapGetters","name","data","uid","password","methods","onSubmit","$validator","validateAll","errors","any","loginResult","login","goToPages","err","console","error","log","$router","push","computed","errorState"],"sourceRoot":"","sources":["/lab/src/components/Login.vue"],"sourcesContent":["<template>\n  <div>\n      <h2>Log In</h2>\n      <div class=\"alert-danger\" v-if=\"errorState\">\n        <p>{{ errorState }}</p>\n      </div>\n      <form @submit.prevent=\"onSubmit\">\n          <input name=\"uid\" placeholder=\"Enter your ID\" v-model=\"uid\" v-validate=\"'required'\">\n          <input name=\"password\" placeholder=\"Enter your password\" v-model=\"password\" type=\"password\" v-validate=\"'required|min:6'\">\n          <button type=\"submit\">Login</button>\n          <div class=\"alert-danger\" v-if=\"errors.has('password')\">{{errors.first('password')}}</div>\n      </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nexport default {\n  name: 'Login',\n  data: () => ({\n    uid: '',\n    password: ''\n  }),\n  methods: {\n    ...mapActions(['login']),\n    async onSubmit () {\n      this.$validator.validateAll()\n      if (!this.errors.any()) {\n        try {\n          let loginResult = await this.login({ uid: this.uid, password: this.password })\n          if (loginResult) this.goToPages()\n        } catch (err) {\n          console.error(err)\n        }\n      } else {\n        console.log('validate err')\n      }\n    },\n    goToPages () {\n      this.$router.push({\n        name: 'HelloWorld'\n      })\n    }\n  },\n  computed: {\n    ...mapGetters({\n      errorState: 'getErrorState'\n    })\n  }\n}\n</script>\n\n<style scoped>\n.alert-danger {\n  color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module"}