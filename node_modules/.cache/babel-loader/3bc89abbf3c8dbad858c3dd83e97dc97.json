{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.formSubmit && _ctx.formSubmit(...args), [\"prevent\"])),\n    method: \"post\"\n  }, [_hoisted_2, _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: _ctx.isUploading\n  }, \"Upload\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", null, [_hoisted_4, _createTextVNode(\" response : \" + _toDisplayString(_ctx.response), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;gCAEpBC,oBAAqB;EAAdC,IAAI,EAAC;AAAM;;gCAIhBD,oBAAM;;;uBANZE,oBAUM,OAVNC,UAUM,GATJH,oBAQO;IARAI,QAAM,wDAAUC,2CAAU;IAAEC,MAAM,EAAC;MACxCC,UAAqB,EACrBP,oBAA6D;IAArDC,IAAI,EAAC,QAAQ;IAAEO,QAAQ,EAAEH;KAAa,QAAM,8BAEpDL,oBAGM,cAFJS,UAAM,iCACK,oBAAGJ,aAAQ","names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","onSubmit","_ctx","method","_hoisted_2","disabled","_hoisted_4"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n    <form @submit.prevent=\"formSubmit\" method=\"post\">\n      <input type=\"file\" />\n      <button type=\"submit\" :disabled=\"isUploading\">Upload</button>\n\n      <div>\n        <hr />\n        response : {{ response }}\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  // axios module import\n  import \"@uppy/core/dist/style.css\";\n  import Uppy from \"@uppy/core\";\n  import XHRUpload from \"@uppy/xhr-upload\";\n\n  export default {\n    name: \"Hello\",\n    components: {},\n    data() {\n      return {\n        selectFile: null, // 파일 객체\n        isUploading: false, // 파일 업로드 체크\n        response: null, // 파일 업로드후 응답값\n      }\n    },\n    methods: {\n      uppy: () => new Uppy()\n        .use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false,\n      })\n\n      .on('upload-success', (file, response) => {\n        console.log(file.name, response.body)\n      })\n        },\n        beforeDestroy () {\n         this.uppy.close({ reason: 'unmount' })\n      }\n  }\n}\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module"}