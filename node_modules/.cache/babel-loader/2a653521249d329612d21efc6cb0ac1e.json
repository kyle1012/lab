{"ast":null,"code":"import { UIPlugin } from '@uppy/core';\nimport { h } from 'preact';\nimport Editor from \"./Editor.js\";\nconst packageJson = {\n  \"version\": \"2.0.1\"\n};\nimport locale from './locale.js';\nexport default class ImageEditor extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.save = () => {\n      const saveBlobCallback = blob => {\n        const {\n          currentImage\n        } = this.getPluginState();\n        this.uppy.setFileState(currentImage.id, {\n          data: blob,\n          size: blob.size,\n          preview: null\n        });\n        const updatedFile = this.uppy.getFile(currentImage.id);\n        this.uppy.emit('thumbnail:request', updatedFile);\n        this.setPluginState({\n          currentImage: updatedFile\n        });\n        this.uppy.emit('file-editor:complete', updatedFile);\n      };\n      const {\n        currentImage\n      } = this.getPluginState();\n      this.cropper.getCroppedCanvas(this.opts.cropperOptions.croppedCanvasOptions).toBlob(saveBlobCallback, currentImage.type, this.opts.quality);\n    };\n    this.storeCropperInstance = cropper => {\n      this.cropper = cropper;\n    };\n    this.selectFile = file => {\n      this.uppy.emit('file-editor:start', file);\n      this.setPluginState({\n        currentImage: file\n      });\n    };\n    this.id = this.opts.id || 'ImageEditor';\n    this.title = 'Image Editor';\n    this.type = 'editor';\n    this.defaultLocale = locale;\n    const defaultCropperOptions = {\n      viewMode: 1,\n      background: false,\n      autoCropArea: 1,\n      responsive: true,\n      croppedCanvasOptions: {}\n    };\n    const defaultActions = {\n      revert: true,\n      rotate: true,\n      granularRotate: true,\n      flip: true,\n      zoomIn: true,\n      zoomOut: true,\n      cropSquare: true,\n      cropWidescreen: true,\n      cropWidescreenVertical: true\n    };\n    const defaultOptions = {\n      quality: 0.8\n    };\n    this.opts = {\n      ...defaultOptions,\n      ...opts,\n      actions: {\n        ...defaultActions,\n        ...opts.actions\n      },\n      cropperOptions: {\n        ...defaultCropperOptions,\n        ...opts.cropperOptions\n      }\n    };\n    this.i18nInit();\n  } // eslint-disable-next-line class-methods-use-this\n\n  canEditFile(file) {\n    if (!file.type || file.isRemote) {\n      return false;\n    }\n    const fileTypeSpecific = file.type.split('/')[1];\n    if (/^(jpe?g|gif|png|bmp|webp)$/.test(fileTypeSpecific)) {\n      return true;\n    }\n    return false;\n  }\n  install() {\n    this.setPluginState({\n      currentImage: null\n    });\n    const {\n      target\n    } = this.opts;\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n  uninstall() {\n    const {\n      currentImage\n    } = this.getPluginState();\n    if (currentImage) {\n      const file = this.uppy.getFile(currentImage.id);\n      this.uppy.emit('file-editor:cancel', file);\n    }\n    this.unmount();\n  }\n  render() {\n    const {\n      currentImage\n    } = this.getPluginState();\n    if (currentImage === null || currentImage.isRemote) {\n      return null;\n    }\n    return h(Editor, {\n      currentImage: currentImage,\n      storeCropperInstance: this.storeCropperInstance,\n      save: this.save,\n      opts: this.opts,\n      i18n: this.i18n\n    });\n  }\n}\nImageEditor.VERSION = packageJson.version;","map":{"version":3,"names":["UIPlugin","h","Editor","packageJson","locale","ImageEditor","constructor","uppy","opts","save","saveBlobCallback","blob","currentImage","getPluginState","setFileState","id","data","size","preview","updatedFile","getFile","emit","setPluginState","cropper","getCroppedCanvas","cropperOptions","croppedCanvasOptions","toBlob","type","quality","storeCropperInstance","selectFile","file","title","defaultLocale","defaultCropperOptions","viewMode","background","autoCropArea","responsive","defaultActions","revert","rotate","granularRotate","flip","zoomIn","zoomOut","cropSquare","cropWidescreen","cropWidescreenVertical","defaultOptions","actions","i18nInit","canEditFile","isRemote","fileTypeSpecific","split","test","install","target","mount","uninstall","unmount","render","i18n","VERSION","version"],"sources":["/lab/node_modules/@uppy/image-editor/lib/ImageEditor.js"],"sourcesContent":["import { UIPlugin } from '@uppy/core';\nimport { h } from 'preact';\nimport Editor from \"./Editor.js\";\nconst packageJson = {\n  \"version\": \"2.0.1\"\n};\nimport locale from './locale.js';\nexport default class ImageEditor extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.save = () => {\n      const saveBlobCallback = blob => {\n        const {\n          currentImage\n        } = this.getPluginState();\n        this.uppy.setFileState(currentImage.id, {\n          data: blob,\n          size: blob.size,\n          preview: null\n        });\n        const updatedFile = this.uppy.getFile(currentImage.id);\n        this.uppy.emit('thumbnail:request', updatedFile);\n        this.setPluginState({\n          currentImage: updatedFile\n        });\n        this.uppy.emit('file-editor:complete', updatedFile);\n      };\n\n      const {\n        currentImage\n      } = this.getPluginState();\n      this.cropper.getCroppedCanvas(this.opts.cropperOptions.croppedCanvasOptions).toBlob(saveBlobCallback, currentImage.type, this.opts.quality);\n    };\n\n    this.storeCropperInstance = cropper => {\n      this.cropper = cropper;\n    };\n\n    this.selectFile = file => {\n      this.uppy.emit('file-editor:start', file);\n      this.setPluginState({\n        currentImage: file\n      });\n    };\n\n    this.id = this.opts.id || 'ImageEditor';\n    this.title = 'Image Editor';\n    this.type = 'editor';\n    this.defaultLocale = locale;\n    const defaultCropperOptions = {\n      viewMode: 1,\n      background: false,\n      autoCropArea: 1,\n      responsive: true,\n      croppedCanvasOptions: {}\n    };\n    const defaultActions = {\n      revert: true,\n      rotate: true,\n      granularRotate: true,\n      flip: true,\n      zoomIn: true,\n      zoomOut: true,\n      cropSquare: true,\n      cropWidescreen: true,\n      cropWidescreenVertical: true\n    };\n    const defaultOptions = {\n      quality: 0.8\n    };\n    this.opts = { ...defaultOptions,\n      ...opts,\n      actions: { ...defaultActions,\n        ...opts.actions\n      },\n      cropperOptions: { ...defaultCropperOptions,\n        ...opts.cropperOptions\n      }\n    };\n    this.i18nInit();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  canEditFile(file) {\n    if (!file.type || file.isRemote) {\n      return false;\n    }\n\n    const fileTypeSpecific = file.type.split('/')[1];\n\n    if (/^(jpe?g|gif|png|bmp|webp)$/.test(fileTypeSpecific)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  install() {\n    this.setPluginState({\n      currentImage: null\n    });\n    const {\n      target\n    } = this.opts;\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    const {\n      currentImage\n    } = this.getPluginState();\n\n    if (currentImage) {\n      const file = this.uppy.getFile(currentImage.id);\n      this.uppy.emit('file-editor:cancel', file);\n    }\n\n    this.unmount();\n  }\n\n  render() {\n    const {\n      currentImage\n    } = this.getPluginState();\n\n    if (currentImage === null || currentImage.isRemote) {\n      return null;\n    }\n\n    return h(Editor, {\n      currentImage: currentImage,\n      storeCropperInstance: this.storeCropperInstance,\n      save: this.save,\n      opts: this.opts,\n      i18n: this.i18n\n    });\n  }\n\n}\nImageEditor.VERSION = packageJson.version;"],"mappings":"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"},"metadata":{},"sourceType":"module"}