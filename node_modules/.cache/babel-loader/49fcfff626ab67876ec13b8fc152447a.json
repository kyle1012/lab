{"ast":null,"code":"import { UIPlugin } from '@uppy/core';\nimport toArray from '@uppy/utils/lib/toArray';\nimport isDragDropSupported from '@uppy/utils/lib/isDragDropSupported';\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles';\nimport { h } from 'preact';\nconst packageJson = {\n  \"version\": \"3.0.1\"\n};\nimport locale from './locale.js';\n/**\n * Drag & Drop plugin\n *\n */\n\nexport default class DragDrop extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.handleDrop = async event => {\n      var _this$opts$onDrop, _this$opts;\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout); // Remove dragover class\n\n      this.setPluginState({\n        isDraggingOver: false\n      });\n      const logDropError = error => {\n        this.uppy.log(error, 'error');\n      }; // Add all dropped files\n\n      const files = await getDroppedFiles(event.dataTransfer, {\n        logDropError\n      });\n      if (files.length > 0) {\n        this.uppy.log('[DragDrop] Files dropped');\n        this.addFiles(files);\n      }\n      (_this$opts$onDrop = (_this$opts = this.opts).onDrop) == null ? void 0 : _this$opts$onDrop.call(_this$opts, event);\n    };\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = locale; // Default options, must be kept in sync with @uppy/react/src/DragDrop.js.\n\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    this.opts = {\n      ...defaultOpts,\n      ...opts\n    };\n    this.i18nInit(); // Check for browser dragDrop support\n\n    this.isDragDropSupported = isDragDropSupported();\n    this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.addFiles = this.addFiles.bind(this);\n    this.render = this.render.bind(this);\n  }\n  addFiles(files) {\n    const descriptors = files.map(file => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null\n      }\n    }));\n    try {\n      this.uppy.addFiles(descriptors);\n    } catch (err) {\n      this.uppy.log(err);\n    }\n  }\n  onInputChange(event) {\n    const files = toArray(event.target.files);\n    if (files.length > 0) {\n      this.uppy.log('[DragDrop] Files selected through input');\n      this.addFiles(files);\n    } // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    // eslint-disable-next-line no-param-reassign\n\n    event.target.value = null;\n  }\n  handleDragOver(event) {\n    var _this$opts$onDragOver, _this$opts2;\n    event.preventDefault();\n    event.stopPropagation(); // Check if the \"type\" of the datatransfer object includes files. If not, deny drop.\n\n    const {\n      types\n    } = event.dataTransfer;\n    const hasFiles = types.some(type => type === 'Files');\n    const {\n      allowNewUpload\n    } = this.uppy.getState();\n    if (!hasFiles || !allowNewUpload) {\n      // eslint-disable-next-line no-param-reassign\n      event.dataTransfer.dropEffect = 'none';\n      clearTimeout(this.removeDragOverClassTimeout);\n      return;\n    } // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser\n    // https://github.com/transloadit/uppy/issues/1978)\n    //\n    // eslint-disable-next-line no-param-reassign\n\n    event.dataTransfer.dropEffect = 'copy';\n    clearTimeout(this.removeDragOverClassTimeout);\n    this.setPluginState({\n      isDraggingOver: true\n    });\n    (_this$opts$onDragOver = (_this$opts2 = this.opts).onDragOver) == null ? void 0 : _this$opts$onDragOver.call(_this$opts2, event);\n  }\n  handleDragLeave(event) {\n    var _this$opts$onDragLeav, _this$opts3;\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({\n        isDraggingOver: false\n      });\n    }, 50);\n    (_this$opts$onDragLeav = (_this$opts3 = this.opts).onDragLeave) == null ? void 0 : _this$opts$onDragLeav.call(_this$opts3, event);\n  }\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1,\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n  render() {\n    const dragDropClass = `uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n  uninstall() {\n    this.unmount();\n  }\n}\nDragDrop.VERSION = packageJson.version;","map":{"version":3,"names":["UIPlugin","toArray","isDragDropSupported","getDroppedFiles","h","packageJson","locale","DragDrop","constructor","uppy","opts","handleDrop","event","_this$opts$onDrop","_this$opts","preventDefault","stopPropagation","clearTimeout","removeDragOverClassTimeout","setPluginState","isDraggingOver","logDropError","error","log","files","dataTransfer","length","addFiles","onDrop","call","type","id","title","defaultLocale","defaultOpts","target","inputName","width","height","note","i18nInit","onInputChange","bind","handleDragOver","handleDragLeave","render","descriptors","map","file","source","name","data","meta","relativePath","err","value","_this$opts$onDragOver","_this$opts2","types","hasFiles","some","allowNewUpload","getState","dropEffect","onDragOver","_this$opts$onDragLeav","_this$opts3","setTimeout","onDragLeave","renderHiddenFileInput","restrictions","className","hidden","ref","fileInputRef","multiple","maxNumberOfFiles","accept","allowedFileTypes","onChange","renderArrowSvg","focusable","viewBox","d","fillRule","renderLabel","i18nArray","browse","i18n","renderNote","dragDropClass","getPluginState","dragDropStyle","style","onClick","click","install","mount","uninstall","unmount","VERSION","version"],"sources":["/lab/node_modules/@uppy/drag-drop/lib/DragDrop.js"],"sourcesContent":["import { UIPlugin } from '@uppy/core';\nimport toArray from '@uppy/utils/lib/toArray';\nimport isDragDropSupported from '@uppy/utils/lib/isDragDropSupported';\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles';\nimport { h } from 'preact';\nconst packageJson = {\n  \"version\": \"3.0.1\"\n};\nimport locale from './locale.js';\n/**\n * Drag & Drop plugin\n *\n */\n\nexport default class DragDrop extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n\n    this.handleDrop = async event => {\n      var _this$opts$onDrop, _this$opts;\n\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout); // Remove dragover class\n\n      this.setPluginState({\n        isDraggingOver: false\n      });\n\n      const logDropError = error => {\n        this.uppy.log(error, 'error');\n      }; // Add all dropped files\n\n\n      const files = await getDroppedFiles(event.dataTransfer, {\n        logDropError\n      });\n\n      if (files.length > 0) {\n        this.uppy.log('[DragDrop] Files dropped');\n        this.addFiles(files);\n      }\n\n      (_this$opts$onDrop = (_this$opts = this.opts).onDrop) == null ? void 0 : _this$opts$onDrop.call(_this$opts, event);\n    };\n\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = locale; // Default options, must be kept in sync with @uppy/react/src/DragDrop.js.\n\n    const defaultOpts = {\n      target: null,\n      inputName: 'files[]',\n      width: '100%',\n      height: '100%',\n      note: null\n    }; // Merge default options with the ones set by user\n\n    this.opts = { ...defaultOpts,\n      ...opts\n    };\n    this.i18nInit(); // Check for browser dragDrop support\n\n    this.isDragDropSupported = isDragDropSupported();\n    this.removeDragOverClassTimeout = null; // Bind `this` to class methods\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.addFiles = this.addFiles.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  addFiles(files) {\n    const descriptors = files.map(file => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null\n      }\n    }));\n\n    try {\n      this.uppy.addFiles(descriptors);\n    } catch (err) {\n      this.uppy.log(err);\n    }\n  }\n\n  onInputChange(event) {\n    const files = toArray(event.target.files);\n\n    if (files.length > 0) {\n      this.uppy.log('[DragDrop] Files selected through input');\n      this.addFiles(files);\n    } // We clear the input after a file is selected, because otherwise\n    // change event is not fired in Chrome and Safari when a file\n    // with the same name is selected.\n    // ___Why not use value=\"\" on <input/> instead?\n    //    Because if we use that method of clearing the input,\n    //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n    // eslint-disable-next-line no-param-reassign\n\n\n    event.target.value = null;\n  }\n\n  handleDragOver(event) {\n    var _this$opts$onDragOver, _this$opts2;\n\n    event.preventDefault();\n    event.stopPropagation(); // Check if the \"type\" of the datatransfer object includes files. If not, deny drop.\n\n    const {\n      types\n    } = event.dataTransfer;\n    const hasFiles = types.some(type => type === 'Files');\n    const {\n      allowNewUpload\n    } = this.uppy.getState();\n\n    if (!hasFiles || !allowNewUpload) {\n      // eslint-disable-next-line no-param-reassign\n      event.dataTransfer.dropEffect = 'none';\n      clearTimeout(this.removeDragOverClassTimeout);\n      return;\n    } // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the browser\n    // https://github.com/transloadit/uppy/issues/1978)\n    //\n    // eslint-disable-next-line no-param-reassign\n\n\n    event.dataTransfer.dropEffect = 'copy';\n    clearTimeout(this.removeDragOverClassTimeout);\n    this.setPluginState({\n      isDraggingOver: true\n    });\n    (_this$opts$onDragOver = (_this$opts2 = this.opts).onDragOver) == null ? void 0 : _this$opts$onDragOver.call(_this$opts2, event);\n  }\n\n  handleDragLeave(event) {\n    var _this$opts$onDragLeav, _this$opts3;\n\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this.removeDragOverClassTimeout); // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({\n        isDraggingOver: false\n      });\n    }, 50);\n    (_this$opts$onDragLeav = (_this$opts3 = this.opts).onDragLeave) == null ? void 0 : _this$opts$onDragLeav.call(_this$opts3, event);\n  }\n\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1,\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n\n  render() {\n    const dragDropClass = `uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n\n  uninstall() {\n    this.unmount();\n  }\n\n}\nDragDrop.VERSION = packageJson.version;"],"mappings":"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"},"metadata":{},"sourceType":"module"}