{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.byteArrayPDF ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"iframe\", {\n    src: $data.srcData,\n    width: \"100%\",\n    height: \"500px\"\n  }, \"\\n      \", 8 /* PROPS */, _hoisted_2)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" loading... \"));\n}","map":{"version":3,"mappings":";;;;;;;;;SAEeA,kBAAY,kBAAvBC,oBAGM,oBAFJC,oBACS;IADAC,GAAG,EAAEH,aAAO;IAAEI,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC;KAAQ,UACnD,iDAEFJ,oBAEM,mBAFM,cAEZ","names":["$data","_createElementBlock","_createElementVNode","src","width","height"],"sourceRoot":"","sources":["/lab/src/components/pdfview.vue"],"sourcesContent":["<template>\n\n    <div v-if=\"byteArrayPDF\">\n      <iframe :src=\"srcData\" width=\"100%\" height=\"500px\">\n      </iframe>\n    </div>\n    <div v-else>\n      loading...\n    </div>\n  \n  </template>\n  \n  <script>\n  export default {\n    name: \"CompoPdf\",\n    data() {\n      return {\n        srcData: null,\n        byteArrayPDF: false,\n      }\n    },\n    created() {\n      this.fetchByteArray();\n    },\n    methods: {\n  \n      fetchByteArray: async function () {\n        // to see the \"loading...\" effect, I intentionally add a \"setTimeout\" code. that loads the pdf after \"3s\". You can remove it in your real app.\n        await new Promise(resolve => setTimeout(resolve, 3000));\n        fetch('/lab/backend/files/123_11:26:00.pdf')\n            .then(response => {\n              console.log(response);\n              // for this case \"response.url\" is what we need, but if you fetch data for example from a database ... you may need \"response.json()\" or other codes;\n              this.srcData = response.url;\n              this.byteArrayPDF = true;\n            })\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  \n  </style>"]},"metadata":{},"sourceType":"module"}