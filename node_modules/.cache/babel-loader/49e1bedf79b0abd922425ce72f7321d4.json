{"ast":null,"code":"import { Dashboard } from \"@uppy/vue\";\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard\n  },\n  data: () => {\n    return {};\n  },\n  mounted() {\n    const uppy = new Uppy({\n      metaFields: [{\n        id: \"name\",\n        name: \"Name\",\n        placeholder: \"file name\"\n      }, {\n        id: \"caption\",\n        name: \"Caption\",\n        placeholder: \"describe what the image is about\"\n      }]\n    });\n    uppy.use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false\n    });\n    uppy.on('upload-success', (file, response) => {\n      console.log(file.name, response);\n      const httpbody = response.body;\n    });\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  }\n};","map":{"version":3,"mappings":"AAqBA,SAASA,SAAQ,QAAS,WAAW;AAErC,OAAO,2BAA2B;AAClC,OAAO,gCAAgC;AAEvC,OAAOC,IAAG,MAAO,YAAY;AAC7B,OAAOC,SAAQ,MAAO,kBAAkB;AAExC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,IAAI,EAAE,MAAM;IACV,OAAO,CACP;EACF,CAAC;EACDC,OAAO,GAAG;IACR,MAAMC,IAAG,GAAI,IAAIN,IAAI,CAAC;MACxBO,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,MAAM;QAAEN,IAAI,EAAE,MAAM;QAAEO,WAAW,EAAE;MAAY,CAAC,EACtD;QACED,EAAE,EAAE,SAAS;QACbN,IAAI,EAAE,SAAS;QACfO,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;IAEFH,IAAI,CAACI,GAAG,CAACT,SAAS,EAAE;MAClBU,QAAQ,EAAE,gCAAgC;MAC1CC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,IAAI;MACRC,WAAW,EAAE;IACb,EAEL;IAEDR,IAAI,CAACS,EAAE,CAAC,gBAAgB,EAAE,CAACC,IAAI,EAAEC,QAAQ,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACd,IAAI,EAAEe,QAAQ;MAC/B,MAAMG,QAAO,GAAIH,QAAQ,CAACI,IAAG;IAC/B,CAAC;EACC,CAAC;EACDC,aAAa,GAAG;IACd,IAAI,CAAChB,IAAI,CAACiB,KAAK,EAAE;EACnB;AACF,CAAC","names":["Dashboard","Uppy","XHRUpload","name","components","data","mounted","uppy","metaFields","id","placeholder","use","endpoint","fieldName","bundle","autoProceed","on","file","response","console","log","httpbody","body","beforeUnmount","close"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <dashboard\n      ref=\"dash\"\n      :uppy=\"uppy\"\n      :props=\"{\n        metaFields: [\n          { id: 'name', name: 'Name', placeholder: 'file name' },\n          {\n            id: 'caption',\n            name: 'Caption',\n            placeholder: 'describe what the image is about',\n          },\n        ],\n      }\"\n      \n    />\n  </div>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\n\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard,\n  },\n  data: () => {\n    return {\n    }\n  },\n  mounted() {\n    const uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" },\n    {\n      id: \"caption\",\n      name: \"Caption\",\n      placeholder: \"describe what the image is about\",\n    },\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpbody = response.body\n})\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}