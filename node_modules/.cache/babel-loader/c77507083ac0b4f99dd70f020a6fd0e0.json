{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/web/pdf_viewer\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/web/pdf_viewer\"] = factory();else root[\"pdfjs-dist/web/pdf_viewer\"] = root.pdfjsViewer = factory();\n})(this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __w_pdfjs_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __w_pdfjs_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __w_pdfjs_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __w_pdfjs_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __w_pdfjs_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"AnnotationLayerBuilder\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer_builder.AnnotationLayerBuilder;\n        }\n      });\n      Object.defineProperty(exports, \"DefaultAnnotationLayerFactory\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer_builder.DefaultAnnotationLayerFactory;\n        }\n      });\n      Object.defineProperty(exports, \"DefaultTextLayerFactory\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer_builder.DefaultTextLayerFactory;\n        }\n      });\n      Object.defineProperty(exports, \"TextLayerBuilder\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer_builder.TextLayerBuilder;\n        }\n      });\n      Object.defineProperty(exports, \"EventBus\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.EventBus;\n        }\n      });\n      Object.defineProperty(exports, \"NullL10n\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.NullL10n;\n        }\n      });\n      Object.defineProperty(exports, \"ProgressBar\", {\n        enumerable: true,\n        get: function () {\n          return _ui_utils.ProgressBar;\n        }\n      });\n      Object.defineProperty(exports, \"PDFLinkService\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_link_service.PDFLinkService;\n        }\n      });\n      Object.defineProperty(exports, \"SimpleLinkService\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_link_service.SimpleLinkService;\n        }\n      });\n      Object.defineProperty(exports, \"DownloadManager\", {\n        enumerable: true,\n        get: function () {\n          return _download_manager.DownloadManager;\n        }\n      });\n      Object.defineProperty(exports, \"GenericL10n\", {\n        enumerable: true,\n        get: function () {\n          return _genericl10n.GenericL10n;\n        }\n      });\n      Object.defineProperty(exports, \"PDFFindController\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_find_controller.PDFFindController;\n        }\n      });\n      Object.defineProperty(exports, \"PDFHistory\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_history.PDFHistory;\n        }\n      });\n      Object.defineProperty(exports, \"PDFPageView\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_page_view.PDFPageView;\n        }\n      });\n      Object.defineProperty(exports, \"PDFSinglePageViewer\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_single_page_viewer.PDFSinglePageViewer;\n        }\n      });\n      Object.defineProperty(exports, \"PDFViewer\", {\n        enumerable: true,\n        get: function () {\n          return _pdf_viewer.PDFViewer;\n        }\n      });\n      var _annotation_layer_builder = __w_pdfjs_require__(1);\n      var _text_layer_builder = __w_pdfjs_require__(5);\n      var _ui_utils = __w_pdfjs_require__(3);\n      var _pdf_link_service = __w_pdfjs_require__(4);\n      var _download_manager = __w_pdfjs_require__(6);\n      var _genericl10n = __w_pdfjs_require__(8);\n      var _pdf_find_controller = __w_pdfjs_require__(10);\n      var _pdf_history = __w_pdfjs_require__(12);\n      var _pdf_page_view = __w_pdfjs_require__(13);\n      var _pdf_single_page_viewer = __w_pdfjs_require__(15);\n      var _pdf_viewer = __w_pdfjs_require__(17);\n      const pdfjsVersion = '2.5.207';\n      const pdfjsBuild = '0974d605';\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = void 0;\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      var _ui_utils = __w_pdfjs_require__(3);\n      var _pdf_link_service = __w_pdfjs_require__(4);\n      class AnnotationLayerBuilder {\n        constructor({\n          pageDiv,\n          pdfPage,\n          linkService,\n          downloadManager,\n          imageResourcesPath = \"\",\n          renderInteractiveForms = false,\n          l10n = _ui_utils.NullL10n\n        }) {\n          this.pageDiv = pageDiv;\n          this.pdfPage = pdfPage;\n          this.linkService = linkService;\n          this.downloadManager = downloadManager;\n          this.imageResourcesPath = imageResourcesPath;\n          this.renderInteractiveForms = renderInteractiveForms;\n          this.l10n = l10n;\n          this.div = null;\n          this._cancelled = false;\n        }\n        render(viewport, intent = \"display\") {\n          this.pdfPage.getAnnotations({\n            intent\n          }).then(annotations => {\n            if (this._cancelled) {\n              return;\n            }\n            const parameters = {\n              viewport: viewport.clone({\n                dontFlip: true\n              }),\n              div: this.div,\n              annotations,\n              page: this.pdfPage,\n              imageResourcesPath: this.imageResourcesPath,\n              renderInteractiveForms: this.renderInteractiveForms,\n              linkService: this.linkService,\n              downloadManager: this.downloadManager\n            };\n            if (this.div) {\n              _pdfjsLib.AnnotationLayer.update(parameters);\n            } else {\n              if (annotations.length === 0) {\n                return;\n              }\n              this.div = document.createElement(\"div\");\n              this.div.className = \"annotationLayer\";\n              this.pageDiv.appendChild(this.div);\n              parameters.div = this.div;\n              _pdfjsLib.AnnotationLayer.render(parameters);\n              this.l10n.translate(this.div);\n            }\n          });\n        }\n        cancel() {\n          this._cancelled = true;\n        }\n        hide() {\n          if (!this.div) {\n            return;\n          }\n          this.div.setAttribute(\"hidden\", \"true\");\n        }\n      }\n      exports.AnnotationLayerBuilder = AnnotationLayerBuilder;\n      class DefaultAnnotationLayerFactory {\n        createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n          return new AnnotationLayerBuilder({\n            pageDiv,\n            pdfPage,\n            imageResourcesPath,\n            renderInteractiveForms,\n            linkService: new _pdf_link_service.SimpleLinkService(),\n            l10n\n          });\n        }\n      }\n      exports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      let pdfjsLib;\n      if (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n        pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n      } else {\n        pdfjsLib = require(\"../build/pdf.js\");\n      }\n      module.exports = pdfjsLib;\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isValidRotation = isValidRotation;\n      exports.isValidScrollMode = isValidScrollMode;\n      exports.isValidSpreadMode = isValidSpreadMode;\n      exports.isPortraitOrientation = isPortraitOrientation;\n      exports.clamp = clamp;\n      exports.getPDFFileNameFromURL = getPDFFileNameFromURL;\n      exports.noContextMenuHandler = noContextMenuHandler;\n      exports.parseQueryString = parseQueryString;\n      exports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements;\n      exports.getVisibleElements = getVisibleElements;\n      exports.roundToDivide = roundToDivide;\n      exports.getPageSizeInches = getPageSizeInches;\n      exports.approximateFraction = approximateFraction;\n      exports.getOutputScale = getOutputScale;\n      exports.scrollIntoView = scrollIntoView;\n      exports.watchScroll = watchScroll;\n      exports.binarySearchFirstItem = binarySearchFirstItem;\n      exports.normalizeWheelEventDelta = normalizeWheelEventDelta;\n      exports.waitOnEventOrTimeout = waitOnEventOrTimeout;\n      exports.moveToEndOfArray = moveToEndOfArray;\n      exports.WaitOnType = exports.animationStarted = exports.ProgressBar = exports.EventBus = exports.NullL10n = exports.SpreadMode = exports.ScrollMode = exports.TextLayerMode = exports.RendererType = exports.PresentationModeState = exports.VERTICAL_PADDING = exports.SCROLLBAR_PADDING = exports.MAX_AUTO_SCALE = exports.UNKNOWN_SCALE = exports.MAX_SCALE = exports.MIN_SCALE = exports.DEFAULT_SCALE = exports.DEFAULT_SCALE_VALUE = exports.CSS_UNITS = exports.AutoPrintRegExp = void 0;\n      const CSS_UNITS = 96.0 / 72.0;\n      exports.CSS_UNITS = CSS_UNITS;\n      const DEFAULT_SCALE_VALUE = \"auto\";\n      exports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\n      const DEFAULT_SCALE = 1.0;\n      exports.DEFAULT_SCALE = DEFAULT_SCALE;\n      const MIN_SCALE = 0.1;\n      exports.MIN_SCALE = MIN_SCALE;\n      const MAX_SCALE = 10.0;\n      exports.MAX_SCALE = MAX_SCALE;\n      const UNKNOWN_SCALE = 0;\n      exports.UNKNOWN_SCALE = UNKNOWN_SCALE;\n      const MAX_AUTO_SCALE = 1.25;\n      exports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\n      const SCROLLBAR_PADDING = 40;\n      exports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\n      const VERTICAL_PADDING = 5;\n      exports.VERTICAL_PADDING = VERTICAL_PADDING;\n      const PresentationModeState = {\n        UNKNOWN: 0,\n        NORMAL: 1,\n        CHANGING: 2,\n        FULLSCREEN: 3\n      };\n      exports.PresentationModeState = PresentationModeState;\n      const RendererType = {\n        CANVAS: \"canvas\",\n        SVG: \"svg\"\n      };\n      exports.RendererType = RendererType;\n      const TextLayerMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_ENHANCE: 2\n      };\n      exports.TextLayerMode = TextLayerMode;\n      const ScrollMode = {\n        UNKNOWN: -1,\n        VERTICAL: 0,\n        HORIZONTAL: 1,\n        WRAPPED: 2\n      };\n      exports.ScrollMode = ScrollMode;\n      const SpreadMode = {\n        UNKNOWN: -1,\n        NONE: 0,\n        ODD: 1,\n        EVEN: 2\n      };\n      exports.SpreadMode = SpreadMode;\n      const AutoPrintRegExp = /\\bprint\\s*\\(/;\n      exports.AutoPrintRegExp = AutoPrintRegExp;\n      function formatL10nValue(text, args) {\n        if (!args) {\n          return text;\n        }\n        return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n          return name in args ? args[name] : \"{{\" + name + \"}}\";\n        });\n      }\n      const NullL10n = {\n        async getLanguage() {\n          return \"en-us\";\n        },\n        async getDirection() {\n          return \"ltr\";\n        },\n        async get(property, args, fallback) {\n          return formatL10nValue(fallback, args);\n        },\n        async translate(element) {}\n      };\n      exports.NullL10n = NullL10n;\n      function getOutputScale(ctx) {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n        const pixelRatio = devicePixelRatio / backingStoreRatio;\n        return {\n          sx: pixelRatio,\n          sy: pixelRatio,\n          scaled: pixelRatio !== 1\n        };\n      }\n      function scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n        let parent = element.offsetParent;\n        if (!parent) {\n          console.error(\"offsetParent is not set -- cannot scroll\");\n          return;\n        }\n        let offsetY = element.offsetTop + element.clientTop;\n        let offsetX = element.offsetLeft + element.clientLeft;\n        while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || skipOverflowHiddenElements && getComputedStyle(parent).overflow === \"hidden\") {\n          if (parent.dataset._scaleY) {\n            offsetY /= parent.dataset._scaleY;\n            offsetX /= parent.dataset._scaleX;\n          }\n          offsetY += parent.offsetTop;\n          offsetX += parent.offsetLeft;\n          parent = parent.offsetParent;\n          if (!parent) {\n            return;\n          }\n        }\n        if (spot) {\n          if (spot.top !== undefined) {\n            offsetY += spot.top;\n          }\n          if (spot.left !== undefined) {\n            offsetX += spot.left;\n            parent.scrollLeft = offsetX;\n          }\n        }\n        parent.scrollTop = offsetY;\n      }\n      function watchScroll(viewAreaElement, callback) {\n        const debounceScroll = function (evt) {\n          if (rAF) {\n            return;\n          }\n          rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n            rAF = null;\n            const currentX = viewAreaElement.scrollLeft;\n            const lastX = state.lastX;\n            if (currentX !== lastX) {\n              state.right = currentX > lastX;\n            }\n            state.lastX = currentX;\n            const currentY = viewAreaElement.scrollTop;\n            const lastY = state.lastY;\n            if (currentY !== lastY) {\n              state.down = currentY > lastY;\n            }\n            state.lastY = currentY;\n            callback(state);\n          });\n        };\n        const state = {\n          right: true,\n          down: true,\n          lastX: viewAreaElement.scrollLeft,\n          lastY: viewAreaElement.scrollTop,\n          _eventHandler: debounceScroll\n        };\n        let rAF = null;\n        viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n        return state;\n      }\n      function parseQueryString(query) {\n        const parts = query.split(\"&\");\n        const params = Object.create(null);\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n          const param = parts[i].split(\"=\");\n          const key = param[0].toLowerCase();\n          const value = param.length > 1 ? param[1] : null;\n          params[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n        return params;\n      }\n      function binarySearchFirstItem(items, condition) {\n        let minIndex = 0;\n        let maxIndex = items.length - 1;\n        if (maxIndex < 0 || !condition(items[maxIndex])) {\n          return items.length;\n        }\n        if (condition(items[minIndex])) {\n          return minIndex;\n        }\n        while (minIndex < maxIndex) {\n          const currentIndex = minIndex + maxIndex >> 1;\n          const currentItem = items[currentIndex];\n          if (condition(currentItem)) {\n            maxIndex = currentIndex;\n          } else {\n            minIndex = currentIndex + 1;\n          }\n        }\n        return minIndex;\n      }\n      function approximateFraction(x) {\n        if (Math.floor(x) === x) {\n          return [x, 1];\n        }\n        const xinv = 1 / x;\n        const limit = 8;\n        if (xinv > limit) {\n          return [1, limit];\n        } else if (Math.floor(xinv) === xinv) {\n          return [1, xinv];\n        }\n        const x_ = x > 1 ? xinv : x;\n        let a = 0,\n          b = 1,\n          c = 1,\n          d = 1;\n        while (true) {\n          const p = a + c,\n            q = b + d;\n          if (q > limit) {\n            break;\n          }\n          if (x_ <= p / q) {\n            c = p;\n            d = q;\n          } else {\n            a = p;\n            b = q;\n          }\n        }\n        let result;\n        if (x_ - a / b < c / d - x_) {\n          result = x_ === x ? [a, b] : [b, a];\n        } else {\n          result = x_ === x ? [c, d] : [d, c];\n        }\n        return result;\n      }\n      function roundToDivide(x, div) {\n        const r = x % div;\n        return r === 0 ? x : Math.round(x - r + div);\n      }\n      function getPageSizeInches({\n        view,\n        userUnit,\n        rotate\n      }) {\n        const [x1, y1, x2, y2] = view;\n        const changeOrientation = rotate % 180 !== 0;\n        const width = (x2 - x1) / 72 * userUnit;\n        const height = (y2 - y1) / 72 * userUnit;\n        return {\n          width: changeOrientation ? height : width,\n          height: changeOrientation ? width : height\n        };\n      }\n      function backtrackBeforeAllVisibleElements(index, views, top) {\n        if (index < 2) {\n          return index;\n        }\n        let elt = views[index].div;\n        let pageTop = elt.offsetTop + elt.clientTop;\n        if (pageTop >= top) {\n          elt = views[index - 1].div;\n          pageTop = elt.offsetTop + elt.clientTop;\n        }\n        for (let i = index - 2; i >= 0; --i) {\n          elt = views[i].div;\n          if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n            break;\n          }\n          index = i;\n        }\n        return index;\n      }\n      function getVisibleElements(scrollEl, views, sortByVisibility = false, horizontal = false) {\n        const top = scrollEl.scrollTop,\n          bottom = top + scrollEl.clientHeight;\n        const left = scrollEl.scrollLeft,\n          right = left + scrollEl.clientWidth;\n        function isElementBottomAfterViewTop(view) {\n          const element = view.div;\n          const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n          return elementBottom > top;\n        }\n        function isElementRightAfterViewLeft(view) {\n          const element = view.div;\n          const elementRight = element.offsetLeft + element.clientLeft + element.clientWidth;\n          return elementRight > left;\n        }\n        const visible = [],\n          numViews = views.length;\n        let firstVisibleElementInd = numViews === 0 ? 0 : binarySearchFirstItem(views, horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop);\n        if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n          firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n        }\n        let lastEdge = horizontal ? right : -1;\n        for (let i = firstVisibleElementInd; i < numViews; i++) {\n          const view = views[i],\n            element = view.div;\n          const currentWidth = element.offsetLeft + element.clientLeft;\n          const currentHeight = element.offsetTop + element.clientTop;\n          const viewWidth = element.clientWidth,\n            viewHeight = element.clientHeight;\n          const viewRight = currentWidth + viewWidth;\n          const viewBottom = currentHeight + viewHeight;\n          if (lastEdge === -1) {\n            if (viewBottom >= bottom) {\n              lastEdge = viewBottom;\n            }\n          } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n            break;\n          }\n          if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n            continue;\n          }\n          const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n          const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n          const percent = (viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100 / viewHeight / viewWidth | 0;\n          visible.push({\n            id: view.id,\n            x: currentWidth,\n            y: currentHeight,\n            view,\n            percent\n          });\n        }\n        const first = visible[0],\n          last = visible[visible.length - 1];\n        if (sortByVisibility) {\n          visible.sort(function (a, b) {\n            const pc = a.percent - b.percent;\n            if (Math.abs(pc) > 0.001) {\n              return -pc;\n            }\n            return a.id - b.id;\n          });\n        }\n        return {\n          first,\n          last,\n          views: visible\n        };\n      }\n      function noContextMenuHandler(evt) {\n        evt.preventDefault();\n      }\n      function isDataSchema(url) {\n        let i = 0;\n        const ii = url.length;\n        while (i < ii && url[i].trim() === \"\") {\n          i++;\n        }\n        return url.substring(i, i + 5).toLowerCase() === \"data:\";\n      }\n      function getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n        if (typeof url !== \"string\") {\n          return defaultFilename;\n        }\n        if (isDataSchema(url)) {\n          console.warn(\"getPDFFileNameFromURL: \" + 'ignoring \"data:\" URL for performance reasons.');\n          return defaultFilename;\n        }\n        const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n        const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n        const splitURI = reURI.exec(url);\n        let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n        if (suggestedFilename) {\n          suggestedFilename = suggestedFilename[0];\n          if (suggestedFilename.includes(\"%\")) {\n            try {\n              suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n            } catch (ex) {}\n          }\n        }\n        return suggestedFilename || defaultFilename;\n      }\n      function normalizeWheelEventDelta(evt) {\n        let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n        const angle = Math.atan2(evt.deltaY, evt.deltaX);\n        if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n          delta = -delta;\n        }\n        const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n        const MOUSE_DOM_DELTA_LINE_MODE = 1;\n        const MOUSE_PIXELS_PER_LINE = 30;\n        const MOUSE_LINES_PER_PAGE = 30;\n        if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n          delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n        } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n          delta /= MOUSE_LINES_PER_PAGE;\n        }\n        return delta;\n      }\n      function isValidRotation(angle) {\n        return Number.isInteger(angle) && angle % 90 === 0;\n      }\n      function isValidScrollMode(mode) {\n        return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n      }\n      function isValidSpreadMode(mode) {\n        return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n      }\n      function isPortraitOrientation(size) {\n        return size.width <= size.height;\n      }\n      const WaitOnType = {\n        EVENT: \"event\",\n        TIMEOUT: \"timeout\"\n      };\n      exports.WaitOnType = WaitOnType;\n      function waitOnEventOrTimeout({\n        target,\n        name,\n        delay = 0\n      }) {\n        return new Promise(function (resolve, reject) {\n          if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\n            throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n          }\n          function handler(type) {\n            if (target instanceof EventBus) {\n              target._off(name, eventHandler);\n            } else {\n              target.removeEventListener(name, eventHandler);\n            }\n            if (timeout) {\n              clearTimeout(timeout);\n            }\n            resolve(type);\n          }\n          const eventHandler = handler.bind(null, WaitOnType.EVENT);\n          if (target instanceof EventBus) {\n            target._on(name, eventHandler);\n          } else {\n            target.addEventListener(name, eventHandler);\n          }\n          const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n          const timeout = setTimeout(timeoutHandler, delay);\n        });\n      }\n      const animationStarted = new Promise(function (resolve) {\n        window.requestAnimationFrame(resolve);\n      });\n      exports.animationStarted = animationStarted;\n      function dispatchDOMEvent(eventName, args = null) {\n        throw new Error(\"Not implemented: dispatchDOMEvent\");\n      }\n      class EventBus {\n        constructor(options) {\n          this._listeners = Object.create(null);\n        }\n        on(eventName, listener) {\n          this._on(eventName, listener, {\n            external: true\n          });\n        }\n        off(eventName, listener) {\n          this._off(eventName, listener, {\n            external: true\n          });\n        }\n        dispatch(eventName) {\n          const eventListeners = this._listeners[eventName];\n          if (!eventListeners || eventListeners.length === 0) {\n            return;\n          }\n          const args = Array.prototype.slice.call(arguments, 1);\n          let externalListeners;\n          eventListeners.slice(0).forEach(function ({\n            listener,\n            external\n          }) {\n            if (external) {\n              if (!externalListeners) {\n                externalListeners = [];\n              }\n              externalListeners.push(listener);\n              return;\n            }\n            listener.apply(null, args);\n          });\n          if (externalListeners) {\n            externalListeners.forEach(function (listener) {\n              listener.apply(null, args);\n            });\n            externalListeners = null;\n          }\n        }\n        _on(eventName, listener, options = null) {\n          let eventListeners = this._listeners[eventName];\n          if (!eventListeners) {\n            this._listeners[eventName] = eventListeners = [];\n          }\n          eventListeners.push({\n            listener,\n            external: (options && options.external) === true\n          });\n        }\n        _off(eventName, listener, options = null) {\n          const eventListeners = this._listeners[eventName];\n          if (!eventListeners) {\n            return;\n          }\n          for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n            if (eventListeners[i].listener === listener) {\n              eventListeners.splice(i, 1);\n              return;\n            }\n          }\n        }\n      }\n      exports.EventBus = EventBus;\n      function clamp(v, min, max) {\n        return Math.min(Math.max(v, min), max);\n      }\n      class ProgressBar {\n        constructor(id, {\n          height,\n          width,\n          units\n        } = {}) {\n          this.visible = true;\n          this.div = document.querySelector(id + \" .progress\");\n          this.bar = this.div.parentNode;\n          this.height = height || 100;\n          this.width = width || 100;\n          this.units = units || \"%\";\n          this.div.style.height = this.height + this.units;\n          this.percent = 0;\n        }\n        _updateBar() {\n          if (this._indeterminate) {\n            this.div.classList.add(\"indeterminate\");\n            this.div.style.width = this.width + this.units;\n            return;\n          }\n          this.div.classList.remove(\"indeterminate\");\n          const progressSize = this.width * this._percent / 100;\n          this.div.style.width = progressSize + this.units;\n        }\n        get percent() {\n          return this._percent;\n        }\n        set percent(val) {\n          this._indeterminate = isNaN(val);\n          this._percent = clamp(val, 0, 100);\n          this._updateBar();\n        }\n        setWidth(viewer) {\n          if (!viewer) {\n            return;\n          }\n          const container = viewer.parentNode;\n          const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n          if (scrollbarWidth > 0) {\n            this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n          }\n        }\n        hide() {\n          if (!this.visible) {\n            return;\n          }\n          this.visible = false;\n          this.bar.classList.add(\"hidden\");\n          document.body.classList.remove(\"loadingInProgress\");\n        }\n        show() {\n          if (this.visible) {\n            return;\n          }\n          this.visible = true;\n          document.body.classList.add(\"loadingInProgress\");\n          this.bar.classList.remove(\"hidden\");\n        }\n      }\n      exports.ProgressBar = ProgressBar;\n      function moveToEndOfArray(arr, condition) {\n        const moved = [],\n          len = arr.length;\n        let write = 0;\n        for (let read = 0; read < len; ++read) {\n          if (condition(arr[read])) {\n            moved.push(arr[read]);\n          } else {\n            arr[write] = arr[read];\n            ++write;\n          }\n        }\n        for (let read = 0; write < len; ++read, ++write) {\n          arr[write] = moved[read];\n        }\n      }\n\n      /***/\n    }, /* 4 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleLinkService = exports.PDFLinkService = void 0;\n      var _ui_utils = __w_pdfjs_require__(3);\n      class PDFLinkService {\n        constructor({\n          eventBus,\n          externalLinkTarget = null,\n          externalLinkRel = null,\n          externalLinkEnabled = true,\n          ignoreDestinationZoom = false\n        } = {}) {\n          this.eventBus = eventBus;\n          this.externalLinkTarget = externalLinkTarget;\n          this.externalLinkRel = externalLinkRel;\n          this.externalLinkEnabled = externalLinkEnabled;\n          this._ignoreDestinationZoom = ignoreDestinationZoom;\n          this.baseUrl = null;\n          this.pdfDocument = null;\n          this.pdfViewer = null;\n          this.pdfHistory = null;\n          this._pagesRefCache = null;\n        }\n        setDocument(pdfDocument, baseUrl = null) {\n          this.baseUrl = baseUrl;\n          this.pdfDocument = pdfDocument;\n          this._pagesRefCache = Object.create(null);\n        }\n        setViewer(pdfViewer) {\n          this.pdfViewer = pdfViewer;\n        }\n        setHistory(pdfHistory) {\n          this.pdfHistory = pdfHistory;\n        }\n        get pagesCount() {\n          return this.pdfDocument ? this.pdfDocument.numPages : 0;\n        }\n        get page() {\n          return this.pdfViewer.currentPageNumber;\n        }\n        set page(value) {\n          this.pdfViewer.currentPageNumber = value;\n        }\n        get rotation() {\n          return this.pdfViewer.pagesRotation;\n        }\n        set rotation(value) {\n          this.pdfViewer.pagesRotation = value;\n        }\n        navigateTo(dest) {\n          const goToDestination = ({\n            namedDest,\n            explicitDest\n          }) => {\n            const destRef = explicitDest[0];\n            let pageNumber;\n            if (destRef instanceof Object) {\n              pageNumber = this._cachedPageNumber(destRef);\n              if (pageNumber === null) {\n                this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\n                  this.cachePageRef(pageIndex + 1, destRef);\n                  goToDestination({\n                    namedDest,\n                    explicitDest\n                  });\n                }).catch(() => {\n                  console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${dest}\".`);\n                });\n                return;\n              }\n            } else if (Number.isInteger(destRef)) {\n              pageNumber = destRef + 1;\n            } else {\n              console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${dest}\".`);\n              return;\n            }\n            if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n              console.error(`PDFLinkService.navigateTo: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${dest}\".`);\n              return;\n            }\n            if (this.pdfHistory) {\n              this.pdfHistory.pushCurrentPosition();\n              this.pdfHistory.push({\n                namedDest,\n                explicitDest,\n                pageNumber\n              });\n            }\n            this.pdfViewer.scrollPageIntoView({\n              pageNumber,\n              destArray: explicitDest,\n              ignoreDestinationZoom: this._ignoreDestinationZoom\n            });\n          };\n          new Promise((resolve, reject) => {\n            if (typeof dest === \"string\") {\n              this.pdfDocument.getDestination(dest).then(destArray => {\n                resolve({\n                  namedDest: dest,\n                  explicitDest: destArray\n                });\n              });\n              return;\n            }\n            resolve({\n              namedDest: \"\",\n              explicitDest: dest\n            });\n          }).then(data => {\n            if (!Array.isArray(data.explicitDest)) {\n              console.error(`PDFLinkService.navigateTo: \"${data.explicitDest}\" is` + ` not a valid destination array, for dest=\"${dest}\".`);\n              return;\n            }\n            goToDestination(data);\n          });\n        }\n        getDestinationHash(dest) {\n          if (typeof dest === \"string\") {\n            return this.getAnchorUrl(\"#\" + escape(dest));\n          }\n          if (Array.isArray(dest)) {\n            const str = JSON.stringify(dest);\n            return this.getAnchorUrl(\"#\" + escape(str));\n          }\n          return this.getAnchorUrl(\"\");\n        }\n        getAnchorUrl(anchor) {\n          return (this.baseUrl || \"\") + anchor;\n        }\n        setHash(hash) {\n          let pageNumber, dest;\n          if (hash.includes(\"=\")) {\n            const params = (0, _ui_utils.parseQueryString)(hash);\n            if (\"search\" in params) {\n              this.eventBus.dispatch(\"findfromurlhash\", {\n                source: this,\n                query: params.search.replace(/\"/g, \"\"),\n                phraseSearch: params.phrase === \"true\"\n              });\n            }\n            if (\"page\" in params) {\n              pageNumber = params.page | 0 || 1;\n            }\n            if (\"zoom\" in params) {\n              const zoomArgs = params.zoom.split(\",\");\n              const zoomArg = zoomArgs[0];\n              const zoomArgNumber = parseFloat(zoomArg);\n              if (!zoomArg.includes(\"Fit\")) {\n                dest = [null, {\n                  name: \"XYZ\"\n                }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n              } else {\n                if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n                  dest = [null, {\n                    name: zoomArg\n                  }];\n                } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\n                  dest = [null, {\n                    name: zoomArg\n                  }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n                } else if (zoomArg === \"FitR\") {\n                  if (zoomArgs.length !== 5) {\n                    console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n                  } else {\n                    dest = [null, {\n                      name: zoomArg\n                    }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n                  }\n                } else {\n                  console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\n                }\n              }\n            }\n            if (dest) {\n              this.pdfViewer.scrollPageIntoView({\n                pageNumber: pageNumber || this.page,\n                destArray: dest,\n                allowNegativeOffset: true\n              });\n            } else if (pageNumber) {\n              this.page = pageNumber;\n            }\n            if (\"pagemode\" in params) {\n              this.eventBus.dispatch(\"pagemode\", {\n                source: this,\n                mode: params.pagemode\n              });\n            }\n            if (\"nameddest\" in params) {\n              this.navigateTo(params.nameddest);\n            }\n          } else {\n            dest = unescape(hash);\n            try {\n              dest = JSON.parse(dest);\n              if (!Array.isArray(dest)) {\n                dest = dest.toString();\n              }\n            } catch (ex) {}\n            if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n              this.navigateTo(dest);\n              return;\n            }\n            console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\n          }\n        }\n        executeNamedAction(action) {\n          switch (action) {\n            case \"GoBack\":\n              if (this.pdfHistory) {\n                this.pdfHistory.back();\n              }\n              break;\n            case \"GoForward\":\n              if (this.pdfHistory) {\n                this.pdfHistory.forward();\n              }\n              break;\n            case \"NextPage\":\n              if (this.page < this.pagesCount) {\n                this.page++;\n              }\n              break;\n            case \"PrevPage\":\n              if (this.page > 1) {\n                this.page--;\n              }\n              break;\n            case \"LastPage\":\n              this.page = this.pagesCount;\n              break;\n            case \"FirstPage\":\n              this.page = 1;\n              break;\n            default:\n              break;\n          }\n          this.eventBus.dispatch(\"namedaction\", {\n            source: this,\n            action\n          });\n        }\n        cachePageRef(pageNum, pageRef) {\n          if (!pageRef) {\n            return;\n          }\n          const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n          this._pagesRefCache[refStr] = pageNum;\n        }\n        _cachedPageNumber(pageRef) {\n          const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n          return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n        }\n        isPageVisible(pageNumber) {\n          return this.pdfViewer.isPageVisible(pageNumber);\n        }\n      }\n      exports.PDFLinkService = PDFLinkService;\n      function isValidExplicitDestination(dest) {\n        if (!Array.isArray(dest)) {\n          return false;\n        }\n        const destLength = dest.length;\n        if (destLength < 2) {\n          return false;\n        }\n        const page = dest[0];\n        if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\n          return false;\n        }\n        const zoom = dest[1];\n        if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n          return false;\n        }\n        let allowNull = true;\n        switch (zoom.name) {\n          case \"XYZ\":\n            if (destLength !== 5) {\n              return false;\n            }\n            break;\n          case \"Fit\":\n          case \"FitB\":\n            return destLength === 2;\n          case \"FitH\":\n          case \"FitBH\":\n          case \"FitV\":\n          case \"FitBV\":\n            if (destLength !== 3) {\n              return false;\n            }\n            break;\n          case \"FitR\":\n            if (destLength !== 6) {\n              return false;\n            }\n            allowNull = false;\n            break;\n          default:\n            return false;\n        }\n        for (let i = 2; i < destLength; i++) {\n          const param = dest[i];\n          if (!(typeof param === \"number\" || allowNull && param === null)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      class SimpleLinkService {\n        constructor() {\n          this.externalLinkTarget = null;\n          this.externalLinkRel = null;\n          this.externalLinkEnabled = true;\n          this._ignoreDestinationZoom = false;\n        }\n        get pagesCount() {\n          return 0;\n        }\n        get page() {\n          return 0;\n        }\n        set page(value) {}\n        get rotation() {\n          return 0;\n        }\n        set rotation(value) {}\n        navigateTo(dest) {}\n        getDestinationHash(dest) {\n          return \"#\";\n        }\n        getAnchorUrl(hash) {\n          return \"#\";\n        }\n        setHash(hash) {}\n        executeNamedAction(action) {}\n        cachePageRef(pageNum, pageRef) {}\n        isPageVisible(pageNumber) {\n          return true;\n        }\n      }\n      exports.SimpleLinkService = SimpleLinkService;\n\n      /***/\n    }, /* 5 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DefaultTextLayerFactory = exports.TextLayerBuilder = void 0;\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      const EXPAND_DIVS_TIMEOUT = 300;\n      class TextLayerBuilder {\n        constructor({\n          textLayerDiv,\n          eventBus,\n          pageIndex,\n          viewport,\n          findController = null,\n          enhanceTextSelection = false\n        }) {\n          this.textLayerDiv = textLayerDiv;\n          this.eventBus = eventBus;\n          this.textContent = null;\n          this.textContentItemsStr = [];\n          this.textContentStream = null;\n          this.renderingDone = false;\n          this.pageIdx = pageIndex;\n          this.pageNumber = this.pageIdx + 1;\n          this.matches = [];\n          this.viewport = viewport;\n          this.textDivs = [];\n          this.findController = findController;\n          this.textLayerRenderTask = null;\n          this.enhanceTextSelection = enhanceTextSelection;\n          this._onUpdateTextLayerMatches = null;\n          this._bindMouse();\n        }\n        _finishRendering() {\n          this.renderingDone = true;\n          if (!this.enhanceTextSelection) {\n            const endOfContent = document.createElement(\"div\");\n            endOfContent.className = \"endOfContent\";\n            this.textLayerDiv.appendChild(endOfContent);\n          }\n          this.eventBus.dispatch(\"textlayerrendered\", {\n            source: this,\n            pageNumber: this.pageNumber,\n            numTextDivs: this.textDivs.length\n          });\n        }\n        render(timeout = 0) {\n          if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n            return;\n          }\n          this.cancel();\n          this.textDivs = [];\n          const textLayerFrag = document.createDocumentFragment();\n          this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n            textContent: this.textContent,\n            textContentStream: this.textContentStream,\n            container: textLayerFrag,\n            viewport: this.viewport,\n            textDivs: this.textDivs,\n            textContentItemsStr: this.textContentItemsStr,\n            timeout,\n            enhanceTextSelection: this.enhanceTextSelection\n          });\n          this.textLayerRenderTask.promise.then(() => {\n            this.textLayerDiv.appendChild(textLayerFrag);\n            this._finishRendering();\n            this._updateMatches();\n          }, function (reason) {});\n          if (!this._onUpdateTextLayerMatches) {\n            this._onUpdateTextLayerMatches = evt => {\n              if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n                this._updateMatches();\n              }\n            };\n            this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n          }\n        }\n        cancel() {\n          if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.cancel();\n            this.textLayerRenderTask = null;\n          }\n          if (this._onUpdateTextLayerMatches) {\n            this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n            this._onUpdateTextLayerMatches = null;\n          }\n        }\n        setTextContentStream(readableStream) {\n          this.cancel();\n          this.textContentStream = readableStream;\n        }\n        setTextContent(textContent) {\n          this.cancel();\n          this.textContent = textContent;\n        }\n        _convertMatches(matches, matchesLength) {\n          if (!matches) {\n            return [];\n          }\n          const {\n            findController,\n            textContentItemsStr\n          } = this;\n          let i = 0,\n            iIndex = 0;\n          const end = textContentItemsStr.length - 1;\n          const queryLen = findController.state.query.length;\n          const result = [];\n          for (let m = 0, mm = matches.length; m < mm; m++) {\n            let matchIdx = matches[m];\n            while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n              iIndex += textContentItemsStr[i].length;\n              i++;\n            }\n            if (i === textContentItemsStr.length) {\n              console.error(\"Could not find a matching mapping\");\n            }\n            const match = {\n              begin: {\n                divIdx: i,\n                offset: matchIdx - iIndex\n              }\n            };\n            if (matchesLength) {\n              matchIdx += matchesLength[m];\n            } else {\n              matchIdx += queryLen;\n            }\n            while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n              iIndex += textContentItemsStr[i].length;\n              i++;\n            }\n            match.end = {\n              divIdx: i,\n              offset: matchIdx - iIndex\n            };\n            result.push(match);\n          }\n          return result;\n        }\n        _renderMatches(matches) {\n          if (matches.length === 0) {\n            return;\n          }\n          const {\n            findController,\n            pageIdx,\n            textContentItemsStr,\n            textDivs\n          } = this;\n          const isSelectedPage = pageIdx === findController.selected.pageIdx;\n          const selectedMatchIdx = findController.selected.matchIdx;\n          const highlightAll = findController.state.highlightAll;\n          let prevEnd = null;\n          const infinity = {\n            divIdx: -1,\n            offset: undefined\n          };\n          function beginText(begin, className) {\n            const divIdx = begin.divIdx;\n            textDivs[divIdx].textContent = \"\";\n            appendTextToDiv(divIdx, 0, begin.offset, className);\n          }\n          function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n            const div = textDivs[divIdx];\n            const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n            const node = document.createTextNode(content);\n            if (className) {\n              const span = document.createElement(\"span\");\n              span.className = className;\n              span.appendChild(node);\n              div.appendChild(span);\n              return;\n            }\n            div.appendChild(node);\n          }\n          let i0 = selectedMatchIdx,\n            i1 = i0 + 1;\n          if (highlightAll) {\n            i0 = 0;\n            i1 = matches.length;\n          } else if (!isSelectedPage) {\n            return;\n          }\n          for (let i = i0; i < i1; i++) {\n            const match = matches[i];\n            const begin = match.begin;\n            const end = match.end;\n            const isSelected = isSelectedPage && i === selectedMatchIdx;\n            const highlightSuffix = isSelected ? \" selected\" : \"\";\n            if (isSelected) {\n              findController.scrollMatchIntoView({\n                element: textDivs[begin.divIdx],\n                pageIndex: pageIdx,\n                matchIndex: selectedMatchIdx\n              });\n            }\n            if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n              if (prevEnd !== null) {\n                appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n              }\n              beginText(begin);\n            } else {\n              appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n            }\n            if (begin.divIdx === end.divIdx) {\n              appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\n            } else {\n              appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\n              for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n                textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n              }\n              beginText(end, \"highlight end\" + highlightSuffix);\n            }\n            prevEnd = end;\n          }\n          if (prevEnd) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n          }\n        }\n        _updateMatches() {\n          if (!this.renderingDone) {\n            return;\n          }\n          const {\n            findController,\n            matches,\n            pageIdx,\n            textContentItemsStr,\n            textDivs\n          } = this;\n          let clearedUntilDivIdx = -1;\n          for (let i = 0, ii = matches.length; i < ii; i++) {\n            const match = matches[i];\n            const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n            for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n              const div = textDivs[n];\n              div.textContent = textContentItemsStr[n];\n              div.className = \"\";\n            }\n            clearedUntilDivIdx = match.end.divIdx + 1;\n          }\n          if (!findController || !findController.highlightMatches) {\n            return;\n          }\n          const pageMatches = findController.pageMatches[pageIdx] || null;\n          const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n          this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n          this._renderMatches(this.matches);\n        }\n        _bindMouse() {\n          const div = this.textLayerDiv;\n          let expandDivsTimer = null;\n          div.addEventListener(\"mousedown\", evt => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(true);\n              if (expandDivsTimer) {\n                clearTimeout(expandDivsTimer);\n                expandDivsTimer = null;\n              }\n              return;\n            }\n            const end = div.querySelector(\".endOfContent\");\n            if (!end) {\n              return;\n            }\n            let adjustTop = evt.target !== div;\n            adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\n            if (adjustTop) {\n              const divBounds = div.getBoundingClientRect();\n              const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n              end.style.top = (r * 100).toFixed(2) + \"%\";\n            }\n            end.classList.add(\"active\");\n          });\n          div.addEventListener(\"mouseup\", () => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n              expandDivsTimer = setTimeout(() => {\n                if (this.textLayerRenderTask) {\n                  this.textLayerRenderTask.expandTextDivs(false);\n                }\n                expandDivsTimer = null;\n              }, EXPAND_DIVS_TIMEOUT);\n              return;\n            }\n            const end = div.querySelector(\".endOfContent\");\n            if (!end) {\n              return;\n            }\n            end.style.top = \"\";\n            end.classList.remove(\"active\");\n          });\n        }\n      }\n      exports.TextLayerBuilder = TextLayerBuilder;\n      class DefaultTextLayerFactory {\n        createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n          return new TextLayerBuilder({\n            textLayerDiv,\n            pageIndex,\n            viewport,\n            enhanceTextSelection,\n            eventBus\n          });\n        }\n      }\n      exports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n      /***/\n    }, /* 6 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DownloadManager = void 0;\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      var _viewer_compatibility = __w_pdfjs_require__(7);\n      ;\n      const DISABLE_CREATE_OBJECT_URL = _viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL || false;\n      function download(blobUrl, filename) {\n        const a = document.createElement(\"a\");\n        if (!a.click) {\n          throw new Error('DownloadManager: \"a.click()\" is not supported.');\n        }\n        a.href = blobUrl;\n        a.target = \"_parent\";\n        if (\"download\" in a) {\n          a.download = filename;\n        }\n        (document.body || document.documentElement).appendChild(a);\n        a.click();\n        a.remove();\n      }\n      class DownloadManager {\n        constructor({\n          disableCreateObjectURL = DISABLE_CREATE_OBJECT_URL\n        }) {\n          this.disableCreateObjectURL = disableCreateObjectURL;\n        }\n        downloadUrl(url, filename) {\n          if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) {\n            return;\n          }\n          download(url + \"#pdfjs.action=download\", filename);\n        }\n        downloadData(data, filename, contentType) {\n          if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(new Blob([data], {\n              type: contentType\n            }), filename);\n            return;\n          }\n          const blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, this.disableCreateObjectURL);\n          download(blobUrl, filename);\n        }\n        download(blob, url, filename) {\n          if (navigator.msSaveBlob) {\n            if (!navigator.msSaveBlob(blob, filename)) {\n              this.downloadUrl(url, filename);\n            }\n            return;\n          }\n          if (this.disableCreateObjectURL) {\n            this.downloadUrl(url, filename);\n            return;\n          }\n          const blobUrl = URL.createObjectURL(blob);\n          download(blobUrl, filename);\n        }\n      }\n      exports.DownloadManager = DownloadManager;\n\n      /***/\n    }, /* 7 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.viewerCompatibilityParams = void 0;\n      const compatibilityParams = Object.create(null);\n      {\n        const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n        const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\n        const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\n        const isAndroid = /Android/.test(userAgent);\n        const isIE = /Trident/.test(userAgent);\n        const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\n        const isIOSChrome = /CriOS/.test(userAgent);\n        (function checkOnBlobSupport() {\n          if (isIE || isIOSChrome) {\n            compatibilityParams.disableCreateObjectURL = true;\n          }\n        })();\n        (function checkCanvasSizeLimitation() {\n          if (isIOS || isAndroid) {\n            compatibilityParams.maxCanvasPixels = 5242880;\n          }\n        })();\n      }\n      const viewerCompatibilityParams = Object.freeze(compatibilityParams);\n      exports.viewerCompatibilityParams = viewerCompatibilityParams;\n\n      /***/\n    }, /* 8 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GenericL10n = void 0;\n      __w_pdfjs_require__(9);\n      const webL10n = document.webL10n;\n      class GenericL10n {\n        constructor(lang) {\n          this._lang = lang;\n          this._ready = new Promise((resolve, reject) => {\n            webL10n.setLanguage(lang, () => {\n              resolve(webL10n);\n            });\n          });\n        }\n        async getLanguage() {\n          const l10n = await this._ready;\n          return l10n.getLanguage();\n        }\n        async getDirection() {\n          const l10n = await this._ready;\n          return l10n.getDirection();\n        }\n        async get(property, args, fallback) {\n          const l10n = await this._ready;\n          return l10n.get(property, args, fallback);\n        }\n        async translate(element) {\n          const l10n = await this._ready;\n          return l10n.translate(element);\n        }\n      }\n      exports.GenericL10n = GenericL10n;\n\n      /***/\n    }, /* 9 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      document.webL10n = function (window, document, undefined) {\n        var gL10nData = {};\n        var gTextData = '';\n        var gTextProp = 'textContent';\n        var gLanguage = '';\n        var gMacros = {};\n        var gReadyState = 'loading';\n        var gAsyncResourceLoading = true;\n        function getL10nResourceLinks() {\n          return document.querySelectorAll('link[type=\"application/l10n\"]');\n        }\n        function getL10nDictionary() {\n          var script = document.querySelector('script[type=\"application/l10n\"]');\n          return script ? JSON.parse(script.innerHTML) : null;\n        }\n        function getTranslatableChildren(element) {\n          return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n        }\n        function getL10nAttributes(element) {\n          if (!element) return {};\n          var l10nId = element.getAttribute('data-l10n-id');\n          var l10nArgs = element.getAttribute('data-l10n-args');\n          var args = {};\n          if (l10nArgs) {\n            try {\n              args = JSON.parse(l10nArgs);\n            } catch (e) {\n              console.warn('could not parse arguments for #' + l10nId);\n            }\n          }\n          return {\n            id: l10nId,\n            args: args\n          };\n        }\n        function xhrLoadText(url, onSuccess, onFailure) {\n          onSuccess = onSuccess || function _onSuccess(data) {};\n          onFailure = onFailure || function _onFailure() {};\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, gAsyncResourceLoading);\n          if (xhr.overrideMimeType) {\n            xhr.overrideMimeType('text/plain; charset=utf-8');\n          }\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n              if (xhr.status == 200 || xhr.status === 0) {\n                onSuccess(xhr.responseText);\n              } else {\n                onFailure();\n              }\n            }\n          };\n          xhr.onerror = onFailure;\n          xhr.ontimeout = onFailure;\n          try {\n            xhr.send(null);\n          } catch (e) {\n            onFailure();\n          }\n        }\n        function parseResource(href, lang, successCallback, failureCallback) {\n          var baseURL = href.replace(/[^\\/]*$/, '') || './';\n          function evalString(text) {\n            if (text.lastIndexOf('\\\\') < 0) return text;\n            return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n          }\n          function parseProperties(text, parsedPropertiesCallback) {\n            var dictionary = {};\n            var reBlank = /^\\s*|\\s*$/;\n            var reComment = /^\\s*#|^\\s*$/;\n            var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n            var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n            var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n            function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n              var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n              var currentLang = '*';\n              var genericLang = lang.split('-', 1)[0];\n              var skipLang = false;\n              var match = '';\n              function nextEntry() {\n                while (true) {\n                  if (!entries.length) {\n                    parsedRawLinesCallback();\n                    return;\n                  }\n                  var line = entries.shift();\n                  if (reComment.test(line)) continue;\n                  if (extendedSyntax) {\n                    match = reSection.exec(line);\n                    if (match) {\n                      currentLang = match[1].toLowerCase();\n                      skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                      continue;\n                    } else if (skipLang) {\n                      continue;\n                    }\n                    match = reImport.exec(line);\n                    if (match) {\n                      loadImport(baseURL + match[1], nextEntry);\n                      return;\n                    }\n                  }\n                  var tmp = line.match(reSplit);\n                  if (tmp && tmp.length == 3) {\n                    dictionary[tmp[1]] = evalString(tmp[2]);\n                  }\n                }\n              }\n              nextEntry();\n            }\n            function loadImport(url, callback) {\n              xhrLoadText(url, function (content) {\n                parseRawLines(content, false, callback);\n              }, function () {\n                console.warn(url + ' not found.');\n                callback();\n              });\n            }\n            parseRawLines(text, true, function () {\n              parsedPropertiesCallback(dictionary);\n            });\n          }\n          xhrLoadText(href, function (response) {\n            gTextData += response;\n            parseProperties(response, function (data) {\n              for (var key in data) {\n                var id,\n                  prop,\n                  index = key.lastIndexOf('.');\n                if (index > 0) {\n                  id = key.substring(0, index);\n                  prop = key.substring(index + 1);\n                } else {\n                  id = key;\n                  prop = gTextProp;\n                }\n                if (!gL10nData[id]) {\n                  gL10nData[id] = {};\n                }\n                gL10nData[id][prop] = data[key];\n              }\n              if (successCallback) {\n                successCallback();\n              }\n            });\n          }, failureCallback);\n        }\n        function loadLocale(lang, callback) {\n          if (lang) {\n            lang = lang.toLowerCase();\n          }\n          callback = callback || function _callback() {};\n          clear();\n          gLanguage = lang;\n          var langLinks = getL10nResourceLinks();\n          var langCount = langLinks.length;\n          if (langCount === 0) {\n            var dict = getL10nDictionary();\n            if (dict && dict.locales && dict.default_locale) {\n              console.log('using the embedded JSON directory, early way out');\n              gL10nData = dict.locales[lang];\n              if (!gL10nData) {\n                var defaultLocale = dict.default_locale.toLowerCase();\n                for (var anyCaseLang in dict.locales) {\n                  anyCaseLang = anyCaseLang.toLowerCase();\n                  if (anyCaseLang === lang) {\n                    gL10nData = dict.locales[lang];\n                    break;\n                  } else if (anyCaseLang === defaultLocale) {\n                    gL10nData = dict.locales[defaultLocale];\n                  }\n                }\n              }\n              callback();\n            } else {\n              console.log('no resource to load, early way out');\n            }\n            gReadyState = 'complete';\n            return;\n          }\n          var onResourceLoaded = null;\n          var gResourceCount = 0;\n          onResourceLoaded = function () {\n            gResourceCount++;\n            if (gResourceCount >= langCount) {\n              callback();\n              gReadyState = 'complete';\n            }\n          };\n          function L10nResourceLink(link) {\n            var href = link.href;\n            this.load = function (lang, callback) {\n              parseResource(href, lang, callback, function () {\n                console.warn(href + ' not found.');\n                console.warn('\"' + lang + '\" resource not found');\n                gLanguage = '';\n                callback();\n              });\n            };\n          }\n          for (var i = 0; i < langCount; i++) {\n            var resource = new L10nResourceLink(langLinks[i]);\n            resource.load(lang, onResourceLoaded);\n          }\n        }\n        function clear() {\n          gL10nData = {};\n          gTextData = '';\n          gLanguage = '';\n        }\n        function getPluralRules(lang) {\n          var locales2rules = {\n            'af': 3,\n            'ak': 4,\n            'am': 4,\n            'ar': 1,\n            'asa': 3,\n            'az': 0,\n            'be': 11,\n            'bem': 3,\n            'bez': 3,\n            'bg': 3,\n            'bh': 4,\n            'bm': 0,\n            'bn': 3,\n            'bo': 0,\n            'br': 20,\n            'brx': 3,\n            'bs': 11,\n            'ca': 3,\n            'cgg': 3,\n            'chr': 3,\n            'cs': 12,\n            'cy': 17,\n            'da': 3,\n            'de': 3,\n            'dv': 3,\n            'dz': 0,\n            'ee': 3,\n            'el': 3,\n            'en': 3,\n            'eo': 3,\n            'es': 3,\n            'et': 3,\n            'eu': 3,\n            'fa': 0,\n            'ff': 5,\n            'fi': 3,\n            'fil': 4,\n            'fo': 3,\n            'fr': 5,\n            'fur': 3,\n            'fy': 3,\n            'ga': 8,\n            'gd': 24,\n            'gl': 3,\n            'gsw': 3,\n            'gu': 3,\n            'guw': 4,\n            'gv': 23,\n            'ha': 3,\n            'haw': 3,\n            'he': 2,\n            'hi': 4,\n            'hr': 11,\n            'hu': 0,\n            'id': 0,\n            'ig': 0,\n            'ii': 0,\n            'is': 3,\n            'it': 3,\n            'iu': 7,\n            'ja': 0,\n            'jmc': 3,\n            'jv': 0,\n            'ka': 0,\n            'kab': 5,\n            'kaj': 3,\n            'kcg': 3,\n            'kde': 0,\n            'kea': 0,\n            'kk': 3,\n            'kl': 3,\n            'km': 0,\n            'kn': 0,\n            'ko': 0,\n            'ksb': 3,\n            'ksh': 21,\n            'ku': 3,\n            'kw': 7,\n            'lag': 18,\n            'lb': 3,\n            'lg': 3,\n            'ln': 4,\n            'lo': 0,\n            'lt': 10,\n            'lv': 6,\n            'mas': 3,\n            'mg': 4,\n            'mk': 16,\n            'ml': 3,\n            'mn': 3,\n            'mo': 9,\n            'mr': 3,\n            'ms': 0,\n            'mt': 15,\n            'my': 0,\n            'nah': 3,\n            'naq': 7,\n            'nb': 3,\n            'nd': 3,\n            'ne': 3,\n            'nl': 3,\n            'nn': 3,\n            'no': 3,\n            'nr': 3,\n            'nso': 4,\n            'ny': 3,\n            'nyn': 3,\n            'om': 3,\n            'or': 3,\n            'pa': 3,\n            'pap': 3,\n            'pl': 13,\n            'ps': 3,\n            'pt': 3,\n            'rm': 3,\n            'ro': 9,\n            'rof': 3,\n            'ru': 11,\n            'rwk': 3,\n            'sah': 0,\n            'saq': 3,\n            'se': 7,\n            'seh': 3,\n            'ses': 0,\n            'sg': 0,\n            'sh': 11,\n            'shi': 19,\n            'sk': 12,\n            'sl': 14,\n            'sma': 7,\n            'smi': 7,\n            'smj': 7,\n            'smn': 7,\n            'sms': 7,\n            'sn': 3,\n            'so': 3,\n            'sq': 3,\n            'sr': 11,\n            'ss': 3,\n            'ssy': 3,\n            'st': 3,\n            'sv': 3,\n            'sw': 3,\n            'syr': 3,\n            'ta': 3,\n            'te': 3,\n            'teo': 3,\n            'th': 0,\n            'ti': 4,\n            'tig': 3,\n            'tk': 3,\n            'tl': 4,\n            'tn': 3,\n            'to': 0,\n            'tr': 0,\n            'ts': 3,\n            'tzm': 22,\n            'uk': 11,\n            'ur': 3,\n            've': 3,\n            'vi': 0,\n            'vun': 3,\n            'wa': 4,\n            'wae': 3,\n            'wo': 0,\n            'xh': 3,\n            'xog': 3,\n            'yo': 0,\n            'zh': 0,\n            'zu': 3\n          };\n          function isIn(n, list) {\n            return list.indexOf(n) !== -1;\n          }\n          function isBetween(n, start, end) {\n            return start <= n && n <= end;\n          }\n          var pluralRules = {\n            '0': function (n) {\n              return 'other';\n            },\n            '1': function (n) {\n              if (isBetween(n % 100, 3, 10)) return 'few';\n              if (n === 0) return 'zero';\n              if (isBetween(n % 100, 11, 99)) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '2': function (n) {\n              if (n !== 0 && n % 10 === 0) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '3': function (n) {\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '4': function (n) {\n              if (isBetween(n, 0, 1)) return 'one';\n              return 'other';\n            },\n            '5': function (n) {\n              if (isBetween(n, 0, 2) && n != 2) return 'one';\n              return 'other';\n            },\n            '6': function (n) {\n              if (n === 0) return 'zero';\n              if (n % 10 == 1 && n % 100 != 11) return 'one';\n              return 'other';\n            },\n            '7': function (n) {\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '8': function (n) {\n              if (isBetween(n, 3, 6)) return 'few';\n              if (isBetween(n, 7, 10)) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '9': function (n) {\n              if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '10': function (n) {\n              if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n              if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n              return 'other';\n            },\n            '11': function (n) {\n              if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n              if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n              if (n % 10 == 1 && n % 100 != 11) return 'one';\n              return 'other';\n            },\n            '12': function (n) {\n              if (isBetween(n, 2, 4)) return 'few';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '13': function (n) {\n              if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n              if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '14': function (n) {\n              if (isBetween(n % 100, 3, 4)) return 'few';\n              if (n % 100 == 2) return 'two';\n              if (n % 100 == 1) return 'one';\n              return 'other';\n            },\n            '15': function (n) {\n              if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n              if (isBetween(n % 100, 11, 19)) return 'many';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '16': function (n) {\n              if (n % 10 == 1 && n != 11) return 'one';\n              return 'other';\n            },\n            '17': function (n) {\n              if (n == 3) return 'few';\n              if (n === 0) return 'zero';\n              if (n == 6) return 'many';\n              if (n == 2) return 'two';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '18': function (n) {\n              if (n === 0) return 'zero';\n              if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n              return 'other';\n            },\n            '19': function (n) {\n              if (isBetween(n, 2, 10)) return 'few';\n              if (isBetween(n, 0, 1)) return 'one';\n              return 'other';\n            },\n            '20': function (n) {\n              if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n              if (n % 1000000 === 0 && n !== 0) return 'many';\n              if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n              if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n              return 'other';\n            },\n            '21': function (n) {\n              if (n === 0) return 'zero';\n              if (n == 1) return 'one';\n              return 'other';\n            },\n            '22': function (n) {\n              if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n              return 'other';\n            },\n            '23': function (n) {\n              if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n              return 'other';\n            },\n            '24': function (n) {\n              if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n              if (isIn(n, [2, 12])) return 'two';\n              if (isIn(n, [1, 11])) return 'one';\n              return 'other';\n            }\n          };\n          var index = locales2rules[lang.replace(/-.*$/, '')];\n          if (!(index in pluralRules)) {\n            console.warn('plural form unknown for [' + lang + ']');\n            return function () {\n              return 'other';\n            };\n          }\n          return pluralRules[index];\n        }\n        gMacros.plural = function (str, param, key, prop) {\n          var n = parseFloat(param);\n          if (isNaN(n)) return str;\n          if (prop != gTextProp) return str;\n          if (!gMacros._pluralRules) {\n            gMacros._pluralRules = getPluralRules(gLanguage);\n          }\n          var index = '[' + gMacros._pluralRules(n) + ']';\n          if (n === 0 && key + '[zero]' in gL10nData) {\n            str = gL10nData[key + '[zero]'][prop];\n          } else if (n == 1 && key + '[one]' in gL10nData) {\n            str = gL10nData[key + '[one]'][prop];\n          } else if (n == 2 && key + '[two]' in gL10nData) {\n            str = gL10nData[key + '[two]'][prop];\n          } else if (key + index in gL10nData) {\n            str = gL10nData[key + index][prop];\n          } else if (key + '[other]' in gL10nData) {\n            str = gL10nData[key + '[other]'][prop];\n          }\n          return str;\n        };\n        function getL10nData(key, args, fallback) {\n          var data = gL10nData[key];\n          if (!data) {\n            console.warn('#' + key + ' is undefined.');\n            if (!fallback) {\n              return null;\n            }\n            data = fallback;\n          }\n          var rv = {};\n          for (var prop in data) {\n            var str = data[prop];\n            str = substIndexes(str, args, key, prop);\n            str = substArguments(str, args, key);\n            rv[prop] = str;\n          }\n          return rv;\n        }\n        function substIndexes(str, args, key, prop) {\n          var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n          var reMatch = reIndex.exec(str);\n          if (!reMatch || !reMatch.length) return str;\n          var macroName = reMatch[1];\n          var paramName = reMatch[2];\n          var param;\n          if (args && paramName in args) {\n            param = args[paramName];\n          } else if (paramName in gL10nData) {\n            param = gL10nData[paramName];\n          }\n          if (macroName in gMacros) {\n            var macro = gMacros[macroName];\n            str = macro(str, param, key, prop);\n          }\n          return str;\n        }\n        function substArguments(str, args, key) {\n          var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n          return str.replace(reArgs, function (matched_text, arg) {\n            if (args && arg in args) {\n              return args[arg];\n            }\n            if (arg in gL10nData) {\n              return gL10nData[arg];\n            }\n            console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n            return matched_text;\n          });\n        }\n        function translateElement(element) {\n          var l10n = getL10nAttributes(element);\n          if (!l10n.id) return;\n          var data = getL10nData(l10n.id, l10n.args);\n          if (!data) {\n            console.warn('#' + l10n.id + ' is undefined.');\n            return;\n          }\n          if (data[gTextProp]) {\n            if (getChildElementCount(element) === 0) {\n              element[gTextProp] = data[gTextProp];\n            } else {\n              var children = element.childNodes;\n              var found = false;\n              for (var i = 0, l = children.length; i < l; i++) {\n                if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n                  if (found) {\n                    children[i].nodeValue = '';\n                  } else {\n                    children[i].nodeValue = data[gTextProp];\n                    found = true;\n                  }\n                }\n              }\n              if (!found) {\n                var textNode = document.createTextNode(data[gTextProp]);\n                element.insertBefore(textNode, element.firstChild);\n              }\n            }\n            delete data[gTextProp];\n          }\n          for (var k in data) {\n            element[k] = data[k];\n          }\n        }\n        function getChildElementCount(element) {\n          if (element.children) {\n            return element.children.length;\n          }\n          if (typeof element.childElementCount !== 'undefined') {\n            return element.childElementCount;\n          }\n          var count = 0;\n          for (var i = 0; i < element.childNodes.length; i++) {\n            count += element.nodeType === 1 ? 1 : 0;\n          }\n          return count;\n        }\n        function translateFragment(element) {\n          element = element || document.documentElement;\n          var children = getTranslatableChildren(element);\n          var elementCount = children.length;\n          for (var i = 0; i < elementCount; i++) {\n            translateElement(children[i]);\n          }\n          translateElement(element);\n        }\n        return {\n          get: function (key, args, fallbackString) {\n            var index = key.lastIndexOf('.');\n            var prop = gTextProp;\n            if (index > 0) {\n              prop = key.substring(index + 1);\n              key = key.substring(0, index);\n            }\n            var fallback;\n            if (fallbackString) {\n              fallback = {};\n              fallback[prop] = fallbackString;\n            }\n            var data = getL10nData(key, args, fallback);\n            if (data && prop in data) {\n              return data[prop];\n            }\n            return '{{' + key + '}}';\n          },\n          getData: function () {\n            return gL10nData;\n          },\n          getText: function () {\n            return gTextData;\n          },\n          getLanguage: function () {\n            return gLanguage;\n          },\n          setLanguage: function (lang, callback) {\n            loadLocale(lang, function () {\n              if (callback) callback();\n            });\n          },\n          getDirection: function () {\n            var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n            var shortCode = gLanguage.split('-', 1)[0];\n            return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n          },\n          translate: translateFragment,\n          getReadyState: function () {\n            return gReadyState;\n          },\n          ready: function (callback) {\n            if (!callback) {\n              return;\n            } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n              window.setTimeout(function () {\n                callback();\n              });\n            } else if (document.addEventListener) {\n              document.addEventListener('localized', function once() {\n                document.removeEventListener('localized', once);\n                callback();\n              });\n            }\n          }\n        };\n      }(window, document);\n\n      /***/\n    }, /* 10 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFindController = exports.FindState = void 0;\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      var _pdf_find_utils = __w_pdfjs_require__(11);\n      var _ui_utils = __w_pdfjs_require__(3);\n      const FindState = {\n        FOUND: 0,\n        NOT_FOUND: 1,\n        WRAPPED: 2,\n        PENDING: 3\n      };\n      exports.FindState = FindState;\n      const FIND_TIMEOUT = 250;\n      const MATCH_SCROLL_OFFSET_TOP = -50;\n      const MATCH_SCROLL_OFFSET_LEFT = -400;\n      const CHARACTERS_TO_NORMALIZE = {\n        \"\\u2018\": \"'\",\n        \"\\u2019\": \"'\",\n        \"\\u201A\": \"'\",\n        \"\\u201B\": \"'\",\n        \"\\u201C\": '\"',\n        \"\\u201D\": '\"',\n        \"\\u201E\": '\"',\n        \"\\u201F\": '\"',\n        \"\\u00BC\": \"1/4\",\n        \"\\u00BD\": \"1/2\",\n        \"\\u00BE\": \"3/4\"\n      };\n      let normalizationRegex = null;\n      function normalize(text) {\n        if (!normalizationRegex) {\n          const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n          normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n        }\n        return text.replace(normalizationRegex, function (ch) {\n          return CHARACTERS_TO_NORMALIZE[ch];\n        });\n      }\n      class PDFFindController {\n        constructor({\n          linkService,\n          eventBus\n        }) {\n          this._linkService = linkService;\n          this._eventBus = eventBus;\n          this._reset();\n          eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n        }\n        get highlightMatches() {\n          return this._highlightMatches;\n        }\n        get pageMatches() {\n          return this._pageMatches;\n        }\n        get pageMatchesLength() {\n          return this._pageMatchesLength;\n        }\n        get selected() {\n          return this._selected;\n        }\n        get state() {\n          return this._state;\n        }\n        setDocument(pdfDocument) {\n          if (this._pdfDocument) {\n            this._reset();\n          }\n          if (!pdfDocument) {\n            return;\n          }\n          this._pdfDocument = pdfDocument;\n          this._firstPageCapability.resolve();\n        }\n        executeCommand(cmd, state) {\n          if (!state) {\n            return;\n          }\n          const pdfDocument = this._pdfDocument;\n          if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n            this._dirtyMatch = true;\n          }\n          this._state = state;\n          if (cmd !== \"findhighlightallchange\") {\n            this._updateUIState(FindState.PENDING);\n          }\n          this._firstPageCapability.promise.then(() => {\n            if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n              return;\n            }\n            this._extractText();\n            const findbarClosed = !this._highlightMatches;\n            const pendingTimeout = !!this._findTimeout;\n            if (this._findTimeout) {\n              clearTimeout(this._findTimeout);\n              this._findTimeout = null;\n            }\n            if (cmd === \"find\") {\n              this._findTimeout = setTimeout(() => {\n                this._nextMatch();\n                this._findTimeout = null;\n              }, FIND_TIMEOUT);\n            } else if (this._dirtyMatch) {\n              this._nextMatch();\n            } else if (cmd === \"findagain\") {\n              this._nextMatch();\n              if (findbarClosed && this._state.highlightAll) {\n                this._updateAllPages();\n              }\n            } else if (cmd === \"findhighlightallchange\") {\n              if (pendingTimeout) {\n                this._nextMatch();\n              } else {\n                this._highlightMatches = true;\n              }\n              this._updateAllPages();\n            } else {\n              this._nextMatch();\n            }\n          });\n        }\n        scrollMatchIntoView({\n          element = null,\n          pageIndex = -1,\n          matchIndex = -1\n        }) {\n          if (!this._scrollMatches || !element) {\n            return;\n          } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n            return;\n          } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n            return;\n          }\n          this._scrollMatches = false;\n          const spot = {\n            top: MATCH_SCROLL_OFFSET_TOP,\n            left: MATCH_SCROLL_OFFSET_LEFT\n          };\n          (0, _ui_utils.scrollIntoView)(element, spot, true);\n        }\n        _reset() {\n          this._highlightMatches = false;\n          this._scrollMatches = false;\n          this._pdfDocument = null;\n          this._pageMatches = [];\n          this._pageMatchesLength = [];\n          this._state = null;\n          this._selected = {\n            pageIdx: -1,\n            matchIdx: -1\n          };\n          this._offset = {\n            pageIdx: null,\n            matchIdx: null,\n            wrapped: false\n          };\n          this._extractTextPromises = [];\n          this._pageContents = [];\n          this._matchesCountTotal = 0;\n          this._pagesToSearch = null;\n          this._pendingFindMatches = Object.create(null);\n          this._resumePageIdx = null;\n          this._dirtyMatch = false;\n          clearTimeout(this._findTimeout);\n          this._findTimeout = null;\n          this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n        }\n        get _query() {\n          if (this._state.query !== this._rawQuery) {\n            this._rawQuery = this._state.query;\n            this._normalizedQuery = normalize(this._state.query);\n          }\n          return this._normalizedQuery;\n        }\n        _shouldDirtyMatch(cmd, state) {\n          if (state.query !== this._state.query) {\n            return true;\n          }\n          switch (cmd) {\n            case \"findagain\":\n              const pageNumber = this._selected.pageIdx + 1;\n              const linkService = this._linkService;\n              if (pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !linkService.isPageVisible(pageNumber)) {\n                return true;\n              }\n              return false;\n            case \"findhighlightallchange\":\n              return false;\n          }\n          return true;\n        }\n        _prepareMatches(matchesWithLength, matches, matchesLength) {\n          function isSubTerm(currentIndex) {\n            const currentElem = matchesWithLength[currentIndex];\n            const nextElem = matchesWithLength[currentIndex + 1];\n            if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n              currentElem.skipped = true;\n              return true;\n            }\n            for (let i = currentIndex - 1; i >= 0; i--) {\n              const prevElem = matchesWithLength[i];\n              if (prevElem.skipped) {\n                continue;\n              }\n              if (prevElem.match + prevElem.matchLength < currentElem.match) {\n                break;\n              }\n              if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n                currentElem.skipped = true;\n                return true;\n              }\n            }\n            return false;\n          }\n          matchesWithLength.sort(function (a, b) {\n            return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n          });\n          for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n            if (isSubTerm(i)) {\n              continue;\n            }\n            matches.push(matchesWithLength[i].match);\n            matchesLength.push(matchesWithLength[i].matchLength);\n          }\n        }\n        _isEntireWord(content, startIdx, length) {\n          if (startIdx > 0) {\n            const first = content.charCodeAt(startIdx);\n            const limit = content.charCodeAt(startIdx - 1);\n            if ((0, _pdf_find_utils.getCharacterType)(first) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n              return false;\n            }\n          }\n          const endIdx = startIdx + length - 1;\n          if (endIdx < content.length - 1) {\n            const last = content.charCodeAt(endIdx);\n            const limit = content.charCodeAt(endIdx + 1);\n            if ((0, _pdf_find_utils.getCharacterType)(last) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n              return false;\n            }\n          }\n          return true;\n        }\n        _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n          const matches = [];\n          const queryLen = query.length;\n          let matchIdx = -queryLen;\n          while (true) {\n            matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n            if (matchIdx === -1) {\n              break;\n            }\n            if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n              continue;\n            }\n            matches.push(matchIdx);\n          }\n          this._pageMatches[pageIndex] = matches;\n        }\n        _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n          const matchesWithLength = [];\n          const queryArray = query.match(/\\S+/g);\n          for (let i = 0, len = queryArray.length; i < len; i++) {\n            const subquery = queryArray[i];\n            const subqueryLen = subquery.length;\n            let matchIdx = -subqueryLen;\n            while (true) {\n              matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n              if (matchIdx === -1) {\n                break;\n              }\n              if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n                continue;\n              }\n              matchesWithLength.push({\n                match: matchIdx,\n                matchLength: subqueryLen,\n                skipped: false\n              });\n            }\n          }\n          this._pageMatchesLength[pageIndex] = [];\n          this._pageMatches[pageIndex] = [];\n          this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n        }\n        _calculateMatch(pageIndex) {\n          let pageContent = this._pageContents[pageIndex];\n          let query = this._query;\n          const {\n            caseSensitive,\n            entireWord,\n            phraseSearch\n          } = this._state;\n          if (query.length === 0) {\n            return;\n          }\n          if (!caseSensitive) {\n            pageContent = pageContent.toLowerCase();\n            query = query.toLowerCase();\n          }\n          if (phraseSearch) {\n            this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n          } else {\n            this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n          }\n          if (this._state.highlightAll) {\n            this._updatePage(pageIndex);\n          }\n          if (this._resumePageIdx === pageIndex) {\n            this._resumePageIdx = null;\n            this._nextPageMatch();\n          }\n          const pageMatchesCount = this._pageMatches[pageIndex].length;\n          if (pageMatchesCount > 0) {\n            this._matchesCountTotal += pageMatchesCount;\n            this._updateUIResultsCount();\n          }\n        }\n        _extractText() {\n          if (this._extractTextPromises.length > 0) {\n            return;\n          }\n          let promise = Promise.resolve();\n          for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n            const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n            this._extractTextPromises[i] = extractTextCapability.promise;\n            promise = promise.then(() => {\n              return this._pdfDocument.getPage(i + 1).then(pdfPage => {\n                return pdfPage.getTextContent({\n                  normalizeWhitespace: true\n                });\n              }).then(textContent => {\n                const textItems = textContent.items;\n                const strBuf = [];\n                for (let j = 0, jj = textItems.length; j < jj; j++) {\n                  strBuf.push(textItems[j].str);\n                }\n                this._pageContents[i] = normalize(strBuf.join(\"\"));\n                extractTextCapability.resolve(i);\n              }, reason => {\n                console.error(`Unable to get text content for page ${i + 1}`, reason);\n                this._pageContents[i] = \"\";\n                extractTextCapability.resolve(i);\n              });\n            });\n          }\n        }\n        _updatePage(index) {\n          if (this._scrollMatches && this._selected.pageIdx === index) {\n            this._linkService.page = index + 1;\n          }\n          this._eventBus.dispatch(\"updatetextlayermatches\", {\n            source: this,\n            pageIndex: index\n          });\n        }\n        _updateAllPages() {\n          this._eventBus.dispatch(\"updatetextlayermatches\", {\n            source: this,\n            pageIndex: -1\n          });\n        }\n        _nextMatch() {\n          const previous = this._state.findPrevious;\n          const currentPageIndex = this._linkService.page - 1;\n          const numPages = this._linkService.pagesCount;\n          this._highlightMatches = true;\n          if (this._dirtyMatch) {\n            this._dirtyMatch = false;\n            this._selected.pageIdx = this._selected.matchIdx = -1;\n            this._offset.pageIdx = currentPageIndex;\n            this._offset.matchIdx = null;\n            this._offset.wrapped = false;\n            this._resumePageIdx = null;\n            this._pageMatches.length = 0;\n            this._pageMatchesLength.length = 0;\n            this._matchesCountTotal = 0;\n            this._updateAllPages();\n            for (let i = 0; i < numPages; i++) {\n              if (this._pendingFindMatches[i] === true) {\n                continue;\n              }\n              this._pendingFindMatches[i] = true;\n              this._extractTextPromises[i].then(pageIdx => {\n                delete this._pendingFindMatches[pageIdx];\n                this._calculateMatch(pageIdx);\n              });\n            }\n          }\n          if (this._query === \"\") {\n            this._updateUIState(FindState.FOUND);\n            return;\n          }\n          if (this._resumePageIdx) {\n            return;\n          }\n          const offset = this._offset;\n          this._pagesToSearch = numPages;\n          if (offset.matchIdx !== null) {\n            const numPageMatches = this._pageMatches[offset.pageIdx].length;\n            if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n              offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n              this._updateMatch(true);\n              return;\n            }\n            this._advanceOffsetPage(previous);\n          }\n          this._nextPageMatch();\n        }\n        _matchesReady(matches) {\n          const offset = this._offset;\n          const numMatches = matches.length;\n          const previous = this._state.findPrevious;\n          if (numMatches) {\n            offset.matchIdx = previous ? numMatches - 1 : 0;\n            this._updateMatch(true);\n            return true;\n          }\n          this._advanceOffsetPage(previous);\n          if (offset.wrapped) {\n            offset.matchIdx = null;\n            if (this._pagesToSearch < 0) {\n              this._updateMatch(false);\n              return true;\n            }\n          }\n          return false;\n        }\n        _nextPageMatch() {\n          if (this._resumePageIdx !== null) {\n            console.error(\"There can only be one pending page.\");\n          }\n          let matches = null;\n          do {\n            const pageIdx = this._offset.pageIdx;\n            matches = this._pageMatches[pageIdx];\n            if (!matches) {\n              this._resumePageIdx = pageIdx;\n              break;\n            }\n          } while (!this._matchesReady(matches));\n        }\n        _advanceOffsetPage(previous) {\n          const offset = this._offset;\n          const numPages = this._linkService.pagesCount;\n          offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n          offset.matchIdx = null;\n          this._pagesToSearch--;\n          if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n            offset.pageIdx = previous ? numPages - 1 : 0;\n            offset.wrapped = true;\n          }\n        }\n        _updateMatch(found = false) {\n          let state = FindState.NOT_FOUND;\n          const wrapped = this._offset.wrapped;\n          this._offset.wrapped = false;\n          if (found) {\n            const previousPage = this._selected.pageIdx;\n            this._selected.pageIdx = this._offset.pageIdx;\n            this._selected.matchIdx = this._offset.matchIdx;\n            state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n            if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n              this._updatePage(previousPage);\n            }\n          }\n          this._updateUIState(state, this._state.findPrevious);\n          if (this._selected.pageIdx !== -1) {\n            this._scrollMatches = true;\n            this._updatePage(this._selected.pageIdx);\n          }\n        }\n        _onFindBarClose(evt) {\n          const pdfDocument = this._pdfDocument;\n          this._firstPageCapability.promise.then(() => {\n            if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n              return;\n            }\n            if (this._findTimeout) {\n              clearTimeout(this._findTimeout);\n              this._findTimeout = null;\n            }\n            if (this._resumePageIdx) {\n              this._resumePageIdx = null;\n              this._dirtyMatch = true;\n            }\n            this._updateUIState(FindState.FOUND);\n            this._highlightMatches = false;\n            this._updateAllPages();\n          });\n        }\n        _requestMatchesCount() {\n          const {\n            pageIdx,\n            matchIdx\n          } = this._selected;\n          let current = 0,\n            total = this._matchesCountTotal;\n          if (matchIdx !== -1) {\n            for (let i = 0; i < pageIdx; i++) {\n              current += this._pageMatches[i] && this._pageMatches[i].length || 0;\n            }\n            current += matchIdx + 1;\n          }\n          if (current < 1 || current > total) {\n            current = total = 0;\n          }\n          return {\n            current,\n            total\n          };\n        }\n        _updateUIResultsCount() {\n          this._eventBus.dispatch(\"updatefindmatchescount\", {\n            source: this,\n            matchesCount: this._requestMatchesCount()\n          });\n        }\n        _updateUIState(state, previous) {\n          this._eventBus.dispatch(\"updatefindcontrolstate\", {\n            source: this,\n            state,\n            previous,\n            matchesCount: this._requestMatchesCount()\n          });\n        }\n      }\n      exports.PDFFindController = PDFFindController;\n\n      /***/\n    }, /* 11 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getCharacterType = getCharacterType;\n      exports.CharacterType = void 0;\n      const CharacterType = {\n        SPACE: 0,\n        ALPHA_LETTER: 1,\n        PUNCT: 2,\n        HAN_LETTER: 3,\n        KATAKANA_LETTER: 4,\n        HIRAGANA_LETTER: 5,\n        HALFWIDTH_KATAKANA_LETTER: 6,\n        THAI_LETTER: 7\n      };\n      exports.CharacterType = CharacterType;\n      function isAlphabeticalScript(charCode) {\n        return charCode < 0x2e80;\n      }\n      function isAscii(charCode) {\n        return (charCode & 0xff80) === 0;\n      }\n      function isAsciiAlpha(charCode) {\n        return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n      }\n      function isAsciiDigit(charCode) {\n        return charCode >= 0x30 && charCode <= 0x39;\n      }\n      function isAsciiSpace(charCode) {\n        return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n      }\n      function isHan(charCode) {\n        return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n      }\n      function isKatakana(charCode) {\n        return charCode >= 0x30a0 && charCode <= 0x30ff;\n      }\n      function isHiragana(charCode) {\n        return charCode >= 0x3040 && charCode <= 0x309f;\n      }\n      function isHalfwidthKatakana(charCode) {\n        return charCode >= 0xff60 && charCode <= 0xff9f;\n      }\n      function isThai(charCode) {\n        return (charCode & 0xff80) === 0x0e00;\n      }\n      function getCharacterType(charCode) {\n        if (isAlphabeticalScript(charCode)) {\n          if (isAscii(charCode)) {\n            if (isAsciiSpace(charCode)) {\n              return CharacterType.SPACE;\n            } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n              return CharacterType.ALPHA_LETTER;\n            }\n            return CharacterType.PUNCT;\n          } else if (isThai(charCode)) {\n            return CharacterType.THAI_LETTER;\n          } else if (charCode === 0xa0) {\n            return CharacterType.SPACE;\n          }\n          return CharacterType.ALPHA_LETTER;\n        }\n        if (isHan(charCode)) {\n          return CharacterType.HAN_LETTER;\n        } else if (isKatakana(charCode)) {\n          return CharacterType.KATAKANA_LETTER;\n        } else if (isHiragana(charCode)) {\n          return CharacterType.HIRAGANA_LETTER;\n        } else if (isHalfwidthKatakana(charCode)) {\n          return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n        }\n        return CharacterType.ALPHA_LETTER;\n      }\n\n      /***/\n    }, /* 12 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isDestHashesEqual = isDestHashesEqual;\n      exports.isDestArraysEqual = isDestArraysEqual;\n      exports.PDFHistory = void 0;\n      var _ui_utils = __w_pdfjs_require__(3);\n      const HASH_CHANGE_TIMEOUT = 1000;\n      const POSITION_UPDATED_THRESHOLD = 50;\n      const UPDATE_VIEWAREA_TIMEOUT = 1000;\n      function getCurrentHash() {\n        return document.location.hash;\n      }\n      class PDFHistory {\n        constructor({\n          linkService,\n          eventBus\n        }) {\n          this.linkService = linkService;\n          this.eventBus = eventBus;\n          this._initialized = false;\n          this._fingerprint = \"\";\n          this.reset();\n          this._boundEvents = null;\n          this._isViewerInPresentationMode = false;\n          this.eventBus._on(\"presentationmodechanged\", evt => {\n            this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n          });\n          this.eventBus._on(\"pagesinit\", () => {\n            this._isPagesLoaded = false;\n            const onPagesLoaded = evt => {\n              this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n              this._isPagesLoaded = !!evt.pagesCount;\n            };\n            this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n          });\n        }\n        initialize({\n          fingerprint,\n          resetHistory = false,\n          updateUrl = false\n        }) {\n          if (!fingerprint || typeof fingerprint !== \"string\") {\n            console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');\n            return;\n          }\n          if (this._initialized) {\n            this.reset();\n          }\n          const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n          this._fingerprint = fingerprint;\n          this._updateUrl = updateUrl === true;\n          this._initialized = true;\n          this._bindEvents();\n          const state = window.history.state;\n          this._popStateInProgress = false;\n          this._blockHashChange = 0;\n          this._currentHash = getCurrentHash();\n          this._numPositionUpdates = 0;\n          this._uid = this._maxUid = 0;\n          this._destination = null;\n          this._position = null;\n          if (!this._isValidState(state, true) || resetHistory) {\n            const {\n              hash,\n              page,\n              rotation\n            } = this._parseCurrentHash(true);\n            if (!hash || reInitialized || resetHistory) {\n              this._pushOrReplaceState(null, true);\n              return;\n            }\n            this._pushOrReplaceState({\n              hash,\n              page,\n              rotation\n            }, true);\n            return;\n          }\n          const destination = state.destination;\n          this._updateInternalState(destination, state.uid, true);\n          if (this._uid > this._maxUid) {\n            this._maxUid = this._uid;\n          }\n          if (destination.rotation !== undefined) {\n            this._initialRotation = destination.rotation;\n          }\n          if (destination.dest) {\n            this._initialBookmark = JSON.stringify(destination.dest);\n            this._destination.page = null;\n          } else if (destination.hash) {\n            this._initialBookmark = destination.hash;\n          } else if (destination.page) {\n            this._initialBookmark = `page=${destination.page}`;\n          }\n        }\n        reset() {\n          if (this._initialized) {\n            this._pageHide();\n            this._initialized = false;\n            this._unbindEvents();\n          }\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n          this._initialBookmark = null;\n          this._initialRotation = null;\n        }\n        push({\n          namedDest = null,\n          explicitDest,\n          pageNumber\n        }) {\n          if (!this._initialized) {\n            return;\n          }\n          if (namedDest && typeof namedDest !== \"string\") {\n            console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`);\n            return;\n          } else if (!Array.isArray(explicitDest)) {\n            console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`);\n            return;\n          } else if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n            if (pageNumber !== null || this._destination) {\n              console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n              return;\n            }\n          }\n          const hash = namedDest || JSON.stringify(explicitDest);\n          if (!hash) {\n            return;\n          }\n          let forceReplace = false;\n          if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n            if (this._destination.page) {\n              return;\n            }\n            forceReplace = true;\n          }\n          if (this._popStateInProgress && !forceReplace) {\n            return;\n          }\n          this._pushOrReplaceState({\n            dest: explicitDest,\n            hash,\n            page: pageNumber,\n            rotation: this.linkService.rotation\n          }, forceReplace);\n          if (!this._popStateInProgress) {\n            this._popStateInProgress = true;\n            Promise.resolve().then(() => {\n              this._popStateInProgress = false;\n            });\n          }\n        }\n        pushCurrentPosition() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n          this._tryPushCurrentPosition();\n        }\n        back() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n          const state = window.history.state;\n          if (this._isValidState(state) && state.uid > 0) {\n            window.history.back();\n          }\n        }\n        forward() {\n          if (!this._initialized || this._popStateInProgress) {\n            return;\n          }\n          const state = window.history.state;\n          if (this._isValidState(state) && state.uid < this._maxUid) {\n            window.history.forward();\n          }\n        }\n        get popStateInProgress() {\n          return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n        }\n        get initialBookmark() {\n          return this._initialized ? this._initialBookmark : null;\n        }\n        get initialRotation() {\n          return this._initialized ? this._initialRotation : null;\n        }\n        _pushOrReplaceState(destination, forceReplace = false) {\n          const shouldReplace = forceReplace || !this._destination;\n          const newState = {\n            fingerprint: this._fingerprint,\n            uid: shouldReplace ? this._uid : this._uid + 1,\n            destination\n          };\n          this._updateInternalState(destination, newState.uid);\n          let newUrl;\n          if (this._updateUrl && destination && destination.hash) {\n            const baseUrl = document.location.href.split(\"#\")[0];\n            if (!baseUrl.startsWith(\"file://\")) {\n              newUrl = `${baseUrl}#${destination.hash}`;\n            }\n          }\n          if (shouldReplace) {\n            window.history.replaceState(newState, \"\", newUrl);\n          } else {\n            this._maxUid = this._uid;\n            window.history.pushState(newState, \"\", newUrl);\n          }\n        }\n        _tryPushCurrentPosition(temporary = false) {\n          if (!this._position) {\n            return;\n          }\n          let position = this._position;\n          if (temporary) {\n            position = Object.assign(Object.create(null), this._position);\n            position.temporary = true;\n          }\n          if (!this._destination) {\n            this._pushOrReplaceState(position);\n            return;\n          }\n          if (this._destination.temporary) {\n            this._pushOrReplaceState(position, true);\n            return;\n          }\n          if (this._destination.hash === position.hash) {\n            return;\n          }\n          if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n            return;\n          }\n          let forceReplace = false;\n          if (this._destination.page >= position.first && this._destination.page <= position.page) {\n            if (this._destination.dest || !this._destination.first) {\n              return;\n            }\n            forceReplace = true;\n          }\n          this._pushOrReplaceState(position, forceReplace);\n        }\n        _isValidState(state, checkReload = false) {\n          if (!state) {\n            return false;\n          }\n          if (state.fingerprint !== this._fingerprint) {\n            if (checkReload) {\n              if (typeof state.fingerprint !== \"string\" || state.fingerprint.length !== this._fingerprint.length) {\n                return false;\n              }\n              const [perfEntry] = performance.getEntriesByType(\"navigation\");\n              if (!perfEntry || perfEntry.type !== \"reload\") {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          }\n          if (!Number.isInteger(state.uid) || state.uid < 0) {\n            return false;\n          }\n          if (state.destination === null || typeof state.destination !== \"object\") {\n            return false;\n          }\n          return true;\n        }\n        _updateInternalState(destination, uid, removeTemporary = false) {\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n          if (removeTemporary && destination && destination.temporary) {\n            delete destination.temporary;\n          }\n          this._destination = destination;\n          this._uid = uid;\n          this._numPositionUpdates = 0;\n        }\n        _parseCurrentHash(checkNameddest = false) {\n          const hash = unescape(getCurrentHash()).substring(1);\n          const params = (0, _ui_utils.parseQueryString)(hash);\n          const nameddest = params.nameddest || \"\";\n          let page = params.page | 0;\n          if (!(Number.isInteger(page) && page > 0 && page <= this.linkService.pagesCount) || checkNameddest && nameddest.length > 0) {\n            page = null;\n          }\n          return {\n            hash,\n            page,\n            rotation: this.linkService.rotation\n          };\n        }\n        _updateViewarea({\n          location\n        }) {\n          if (this._updateViewareaTimeout) {\n            clearTimeout(this._updateViewareaTimeout);\n            this._updateViewareaTimeout = null;\n          }\n          this._position = {\n            hash: this._isViewerInPresentationMode ? `page=${location.pageNumber}` : location.pdfOpenParams.substring(1),\n            page: this.linkService.page,\n            first: location.pageNumber,\n            rotation: location.rotation\n          };\n          if (this._popStateInProgress) {\n            return;\n          }\n          if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n            this._numPositionUpdates++;\n          }\n          if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n            this._updateViewareaTimeout = setTimeout(() => {\n              if (!this._popStateInProgress) {\n                this._tryPushCurrentPosition(true);\n              }\n              this._updateViewareaTimeout = null;\n            }, UPDATE_VIEWAREA_TIMEOUT);\n          }\n        }\n        _popState({\n          state\n        }) {\n          const newHash = getCurrentHash(),\n            hashChanged = this._currentHash !== newHash;\n          this._currentHash = newHash;\n          if (!state) {\n            this._uid++;\n            const {\n              hash,\n              page,\n              rotation\n            } = this._parseCurrentHash();\n            this._pushOrReplaceState({\n              hash,\n              page,\n              rotation\n            }, true);\n            return;\n          }\n          if (!this._isValidState(state)) {\n            return;\n          }\n          this._popStateInProgress = true;\n          if (hashChanged) {\n            this._blockHashChange++;\n            (0, _ui_utils.waitOnEventOrTimeout)({\n              target: window,\n              name: \"hashchange\",\n              delay: HASH_CHANGE_TIMEOUT\n            }).then(() => {\n              this._blockHashChange--;\n            });\n          }\n          const destination = state.destination;\n          this._updateInternalState(destination, state.uid, true);\n          if (this._uid > this._maxUid) {\n            this._maxUid = this._uid;\n          }\n          if ((0, _ui_utils.isValidRotation)(destination.rotation)) {\n            this.linkService.rotation = destination.rotation;\n          }\n          if (destination.dest) {\n            this.linkService.navigateTo(destination.dest);\n          } else if (destination.hash) {\n            this.linkService.setHash(destination.hash);\n          } else if (destination.page) {\n            this.linkService.page = destination.page;\n          }\n          Promise.resolve().then(() => {\n            this._popStateInProgress = false;\n          });\n        }\n        _pageHide() {\n          if (!this._destination || this._destination.temporary) {\n            this._tryPushCurrentPosition();\n          }\n        }\n        _bindEvents() {\n          if (this._boundEvents) {\n            return;\n          }\n          this._boundEvents = {\n            updateViewarea: this._updateViewarea.bind(this),\n            popState: this._popState.bind(this),\n            pageHide: this._pageHide.bind(this)\n          };\n          this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n          window.addEventListener(\"popstate\", this._boundEvents.popState);\n          window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n        }\n        _unbindEvents() {\n          if (!this._boundEvents) {\n            return;\n          }\n          this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n          window.removeEventListener(\"popstate\", this._boundEvents.popState);\n          window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n          this._boundEvents = null;\n        }\n      }\n      exports.PDFHistory = PDFHistory;\n      function isDestHashesEqual(destHash, pushHash) {\n        if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n          return false;\n        }\n        if (destHash === pushHash) {\n          return true;\n        }\n        const {\n          nameddest\n        } = (0, _ui_utils.parseQueryString)(destHash);\n        if (nameddest === pushHash) {\n          return true;\n        }\n        return false;\n      }\n      function isDestArraysEqual(firstDest, secondDest) {\n        function isEntryEqual(first, second) {\n          if (typeof first !== typeof second) {\n            return false;\n          }\n          if (Array.isArray(first) || Array.isArray(second)) {\n            return false;\n          }\n          if (first !== null && typeof first === \"object\" && second !== null) {\n            if (Object.keys(first).length !== Object.keys(second).length) {\n              return false;\n            }\n            for (const key in first) {\n              if (!isEntryEqual(first[key], second[key])) {\n                return false;\n              }\n            }\n            return true;\n          }\n          return first === second || Number.isNaN(first) && Number.isNaN(second);\n        }\n        if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n          return false;\n        }\n        if (firstDest.length !== secondDest.length) {\n          return false;\n        }\n        for (let i = 0, ii = firstDest.length; i < ii; i++) {\n          if (!isEntryEqual(firstDest[i], secondDest[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      /***/\n    }, /* 13 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFPageView = void 0;\n      var _ui_utils = __w_pdfjs_require__(3);\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      var _pdf_rendering_queue = __w_pdfjs_require__(14);\n      var _viewer_compatibility = __w_pdfjs_require__(7);\n      const MAX_CANVAS_PIXELS = _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels || 16777216;\n      class PDFPageView {\n        constructor(options) {\n          const container = options.container;\n          const defaultViewport = options.defaultViewport;\n          this.id = options.id;\n          this.renderingId = \"page\" + this.id;\n          this.pdfPage = null;\n          this.pageLabel = null;\n          this.rotation = 0;\n          this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n          this.viewport = defaultViewport;\n          this.pdfPageRotate = defaultViewport.rotation;\n          this.hasRestrictedScaling = false;\n          this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n          this.imageResourcesPath = options.imageResourcesPath || \"\";\n          this.renderInteractiveForms = options.renderInteractiveForms || false;\n          this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n          this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n          this.eventBus = options.eventBus;\n          this.renderingQueue = options.renderingQueue;\n          this.textLayerFactory = options.textLayerFactory;\n          this.annotationLayerFactory = options.annotationLayerFactory;\n          this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n          this.enableWebGL = options.enableWebGL || false;\n          this.l10n = options.l10n || _ui_utils.NullL10n;\n          this.paintTask = null;\n          this.paintedViewportMap = new WeakMap();\n          this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n          this.resume = null;\n          this.error = null;\n          this.annotationLayer = null;\n          this.textLayer = null;\n          this.zoomLayer = null;\n          const div = document.createElement(\"div\");\n          div.className = \"page\";\n          div.style.width = Math.floor(this.viewport.width) + \"px\";\n          div.style.height = Math.floor(this.viewport.height) + \"px\";\n          div.setAttribute(\"data-page-number\", this.id);\n          this.div = div;\n          container.appendChild(div);\n        }\n        setPdfPage(pdfPage) {\n          this.pdfPage = pdfPage;\n          this.pdfPageRotate = pdfPage.rotate;\n          const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n          this.viewport = pdfPage.getViewport({\n            scale: this.scale * _ui_utils.CSS_UNITS,\n            rotation: totalRotation\n          });\n          this.stats = pdfPage.stats;\n          this.reset();\n        }\n        destroy() {\n          this.reset();\n          if (this.pdfPage) {\n            this.pdfPage.cleanup();\n          }\n        }\n        _resetZoomLayer(removeFromDOM = false) {\n          if (!this.zoomLayer) {\n            return;\n          }\n          const zoomLayerCanvas = this.zoomLayer.firstChild;\n          this.paintedViewportMap.delete(zoomLayerCanvas);\n          zoomLayerCanvas.width = 0;\n          zoomLayerCanvas.height = 0;\n          if (removeFromDOM) {\n            this.zoomLayer.remove();\n          }\n          this.zoomLayer = null;\n        }\n        reset(keepZoomLayer = false, keepAnnotations = false) {\n          this.cancelRendering(keepAnnotations);\n          this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n          const div = this.div;\n          div.style.width = Math.floor(this.viewport.width) + \"px\";\n          div.style.height = Math.floor(this.viewport.height) + \"px\";\n          const childNodes = div.childNodes;\n          const currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n          const currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n          for (let i = childNodes.length - 1; i >= 0; i--) {\n            const node = childNodes[i];\n            if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n              continue;\n            }\n            div.removeChild(node);\n          }\n          div.removeAttribute(\"data-loaded\");\n          if (currentAnnotationNode) {\n            this.annotationLayer.hide();\n          } else if (this.annotationLayer) {\n            this.annotationLayer.cancel();\n            this.annotationLayer = null;\n          }\n          if (!currentZoomLayerNode) {\n            if (this.canvas) {\n              this.paintedViewportMap.delete(this.canvas);\n              this.canvas.width = 0;\n              this.canvas.height = 0;\n              delete this.canvas;\n            }\n            this._resetZoomLayer();\n          }\n          if (this.svg) {\n            this.paintedViewportMap.delete(this.svg);\n            delete this.svg;\n          }\n          this.loadingIconDiv = document.createElement(\"div\");\n          this.loadingIconDiv.className = \"loadingIcon\";\n          div.appendChild(this.loadingIconDiv);\n        }\n        update(scale, rotation) {\n          this.scale = scale || this.scale;\n          if (typeof rotation !== \"undefined\") {\n            this.rotation = rotation;\n          }\n          const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n          this.viewport = this.viewport.clone({\n            scale: this.scale * _ui_utils.CSS_UNITS,\n            rotation: totalRotation\n          });\n          if (this.svg) {\n            this.cssTransform(this.svg, true);\n            this.eventBus.dispatch(\"pagerendered\", {\n              source: this,\n              pageNumber: this.id,\n              cssTransform: true,\n              timestamp: performance.now()\n            });\n            return;\n          }\n          let isScalingRestricted = false;\n          if (this.canvas && this.maxCanvasPixels > 0) {\n            const outputScale = this.outputScale;\n            if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\n              isScalingRestricted = true;\n            }\n          }\n          if (this.canvas) {\n            if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n              this.cssTransform(this.canvas, true);\n              this.eventBus.dispatch(\"pagerendered\", {\n                source: this,\n                pageNumber: this.id,\n                cssTransform: true,\n                timestamp: performance.now()\n              });\n              return;\n            }\n            if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n              this.zoomLayer = this.canvas.parentNode;\n              this.zoomLayer.style.position = \"absolute\";\n            }\n          }\n          if (this.zoomLayer) {\n            this.cssTransform(this.zoomLayer.firstChild);\n          }\n          this.reset(true, true);\n        }\n        cancelRendering(keepAnnotations = false) {\n          if (this.paintTask) {\n            this.paintTask.cancel();\n            this.paintTask = null;\n          }\n          this.resume = null;\n          if (this.textLayer) {\n            this.textLayer.cancel();\n            this.textLayer = null;\n          }\n          if (!keepAnnotations && this.annotationLayer) {\n            this.annotationLayer.cancel();\n            this.annotationLayer = null;\n          }\n        }\n        cssTransform(target, redrawAnnotations = false) {\n          const width = this.viewport.width;\n          const height = this.viewport.height;\n          const div = this.div;\n          target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\n          target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\";\n          const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n          const absRotation = Math.abs(relativeRotation);\n          let scaleX = 1,\n            scaleY = 1;\n          if (absRotation === 90 || absRotation === 270) {\n            scaleX = height / width;\n            scaleY = width / height;\n          }\n          const cssTransform = \"rotate(\" + relativeRotation + \"deg) \" + \"scale(\" + scaleX + \",\" + scaleY + \")\";\n          target.style.transform = cssTransform;\n          if (this.textLayer) {\n            const textLayerViewport = this.textLayer.viewport;\n            const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n            const textAbsRotation = Math.abs(textRelativeRotation);\n            let scale = width / textLayerViewport.width;\n            if (textAbsRotation === 90 || textAbsRotation === 270) {\n              scale = width / textLayerViewport.height;\n            }\n            const textLayerDiv = this.textLayer.textLayerDiv;\n            let transX, transY;\n            switch (textAbsRotation) {\n              case 0:\n                transX = transY = 0;\n                break;\n              case 90:\n                transX = 0;\n                transY = \"-\" + textLayerDiv.style.height;\n                break;\n              case 180:\n                transX = \"-\" + textLayerDiv.style.width;\n                transY = \"-\" + textLayerDiv.style.height;\n                break;\n              case 270:\n                transX = \"-\" + textLayerDiv.style.width;\n                transY = 0;\n                break;\n              default:\n                console.error(\"Bad rotation value.\");\n                break;\n            }\n            textLayerDiv.style.transform = \"rotate(\" + textAbsRotation + \"deg) \" + \"scale(\" + scale + \", \" + scale + \") \" + \"translate(\" + transX + \", \" + transY + \")\";\n            textLayerDiv.style.transformOrigin = \"0% 0%\";\n          }\n          if (redrawAnnotations && this.annotationLayer) {\n            this.annotationLayer.render(this.viewport, \"display\");\n          }\n        }\n        get width() {\n          return this.viewport.width;\n        }\n        get height() {\n          return this.viewport.height;\n        }\n        getPagePoint(x, y) {\n          return this.viewport.convertToPdfPoint(x, y);\n        }\n        draw() {\n          if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n            console.error(\"Must be in new state before drawing\");\n            this.reset();\n          }\n          const {\n            div,\n            pdfPage\n          } = this;\n          if (!pdfPage) {\n            this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n            if (this.loadingIconDiv) {\n              div.removeChild(this.loadingIconDiv);\n              delete this.loadingIconDiv;\n            }\n            return Promise.reject(new Error(\"pdfPage is not loaded\"));\n          }\n          this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n          const canvasWrapper = document.createElement(\"div\");\n          canvasWrapper.style.width = div.style.width;\n          canvasWrapper.style.height = div.style.height;\n          canvasWrapper.classList.add(\"canvasWrapper\");\n          if (this.annotationLayer && this.annotationLayer.div) {\n            div.insertBefore(canvasWrapper, this.annotationLayer.div);\n          } else {\n            div.appendChild(canvasWrapper);\n          }\n          let textLayer = null;\n          if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) {\n            const textLayerDiv = document.createElement(\"div\");\n            textLayerDiv.className = \"textLayer\";\n            textLayerDiv.style.width = canvasWrapper.style.width;\n            textLayerDiv.style.height = canvasWrapper.style.height;\n            if (this.annotationLayer && this.annotationLayer.div) {\n              div.insertBefore(textLayerDiv, this.annotationLayer.div);\n            } else {\n              div.appendChild(textLayerDiv);\n            }\n            textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus);\n          }\n          this.textLayer = textLayer;\n          let renderContinueCallback = null;\n          if (this.renderingQueue) {\n            renderContinueCallback = cont => {\n              if (!this.renderingQueue.isHighestPriority(this)) {\n                this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n                this.resume = () => {\n                  this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n                  cont();\n                };\n                return;\n              }\n              cont();\n            };\n          }\n          const finishPaintTask = async error => {\n            if (paintTask === this.paintTask) {\n              this.paintTask = null;\n            }\n            if (error instanceof _pdfjsLib.RenderingCancelledException) {\n              this.error = null;\n              return;\n            }\n            this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n            if (this.loadingIconDiv) {\n              div.removeChild(this.loadingIconDiv);\n              delete this.loadingIconDiv;\n            }\n            this._resetZoomLayer(true);\n            this.error = error;\n            this.stats = pdfPage.stats;\n            this.eventBus.dispatch(\"pagerendered\", {\n              source: this,\n              pageNumber: this.id,\n              cssTransform: false,\n              timestamp: performance.now()\n            });\n            if (error) {\n              throw error;\n            }\n          };\n          const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n          paintTask.onRenderContinue = renderContinueCallback;\n          this.paintTask = paintTask;\n          const resultPromise = paintTask.promise.then(function () {\n            return finishPaintTask(null).then(function () {\n              if (textLayer) {\n                const readableStream = pdfPage.streamTextContent({\n                  normalizeWhitespace: true\n                });\n                textLayer.setTextContentStream(readableStream);\n                textLayer.render();\n              }\n            });\n          }, function (reason) {\n            return finishPaintTask(reason);\n          });\n          if (this.annotationLayerFactory) {\n            if (!this.annotationLayer) {\n              this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, this.imageResourcesPath, this.renderInteractiveForms, this.l10n);\n            }\n            this.annotationLayer.render(this.viewport, \"display\");\n          }\n          div.setAttribute(\"data-loaded\", true);\n          this.eventBus.dispatch(\"pagerender\", {\n            source: this,\n            pageNumber: this.id\n          });\n          return resultPromise;\n        }\n        paintOnCanvas(canvasWrapper) {\n          const renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n          const result = {\n            promise: renderCapability.promise,\n            onRenderContinue(cont) {\n              cont();\n            },\n            cancel() {\n              renderTask.cancel();\n            }\n          };\n          const viewport = this.viewport;\n          const canvas = document.createElement(\"canvas\");\n          this.l10n.get(\"page_canvas\", {\n            page: this.id\n          }, \"Page {{page}}\").then(msg => {\n            canvas.setAttribute(\"aria-label\", msg);\n          });\n          canvas.setAttribute(\"hidden\", \"hidden\");\n          let isCanvasHidden = true;\n          const showCanvas = function () {\n            if (isCanvasHidden) {\n              canvas.removeAttribute(\"hidden\");\n              isCanvasHidden = false;\n            }\n          };\n          canvasWrapper.appendChild(canvas);\n          this.canvas = canvas;\n          canvas.mozOpaque = true;\n          const ctx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n          this.outputScale = outputScale;\n          if (this.useOnlyCssZoom) {\n            const actualSizeViewport = viewport.clone({\n              scale: _ui_utils.CSS_UNITS\n            });\n            outputScale.sx *= actualSizeViewport.width / viewport.width;\n            outputScale.sy *= actualSizeViewport.height / viewport.height;\n            outputScale.scaled = true;\n          }\n          if (this.maxCanvasPixels > 0) {\n            const pixelsInViewport = viewport.width * viewport.height;\n            const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n            if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n              outputScale.sx = maxScale;\n              outputScale.sy = maxScale;\n              outputScale.scaled = true;\n              this.hasRestrictedScaling = true;\n            } else {\n              this.hasRestrictedScaling = false;\n            }\n          }\n          const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n          const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n          canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n          canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n          canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\";\n          canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\";\n          this.paintedViewportMap.set(canvas, viewport);\n          const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n          const renderContext = {\n            canvasContext: ctx,\n            transform,\n            viewport: this.viewport,\n            enableWebGL: this.enableWebGL,\n            renderInteractiveForms: this.renderInteractiveForms\n          };\n          const renderTask = this.pdfPage.render(renderContext);\n          renderTask.onContinue = function (cont) {\n            showCanvas();\n            if (result.onRenderContinue) {\n              result.onRenderContinue(cont);\n            } else {\n              cont();\n            }\n          };\n          renderTask.promise.then(function () {\n            showCanvas();\n            renderCapability.resolve(undefined);\n          }, function (error) {\n            showCanvas();\n            renderCapability.reject(error);\n          });\n          return result;\n        }\n        paintOnSvg(wrapper) {\n          let cancelled = false;\n          const ensureNotCancelled = () => {\n            if (cancelled) {\n              throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\n            }\n          };\n          const pdfPage = this.pdfPage;\n          const actualSizeViewport = this.viewport.clone({\n            scale: _ui_utils.CSS_UNITS\n          });\n          const promise = pdfPage.getOperatorList().then(opList => {\n            ensureNotCancelled();\n            const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n            return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n              ensureNotCancelled();\n              this.svg = svg;\n              this.paintedViewportMap.set(svg, actualSizeViewport);\n              svg.style.width = wrapper.style.width;\n              svg.style.height = wrapper.style.height;\n              this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n              wrapper.appendChild(svg);\n            });\n          });\n          return {\n            promise,\n            onRenderContinue(cont) {\n              cont();\n            },\n            cancel() {\n              cancelled = true;\n            }\n          };\n        }\n        setPageLabel(label) {\n          this.pageLabel = typeof label === \"string\" ? label : null;\n          if (this.pageLabel !== null) {\n            this.div.setAttribute(\"data-page-label\", this.pageLabel);\n          } else {\n            this.div.removeAttribute(\"data-page-label\");\n          }\n        }\n      }\n      exports.PDFPageView = PDFPageView;\n\n      /***/\n    }, /* 14 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFRenderingQueue = exports.RenderingStates = void 0;\n      const CLEANUP_TIMEOUT = 30000;\n      const RenderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n      };\n      exports.RenderingStates = RenderingStates;\n      class PDFRenderingQueue {\n        constructor() {\n          this.pdfViewer = null;\n          this.pdfThumbnailViewer = null;\n          this.onIdle = null;\n          this.highestPriorityPage = null;\n          this.idleTimeout = null;\n          this.printing = false;\n          this.isThumbnailViewEnabled = false;\n        }\n        setViewer(pdfViewer) {\n          this.pdfViewer = pdfViewer;\n        }\n        setThumbnailViewer(pdfThumbnailViewer) {\n          this.pdfThumbnailViewer = pdfThumbnailViewer;\n        }\n        isHighestPriority(view) {\n          return this.highestPriorityPage === view.renderingId;\n        }\n        renderHighestPriority(currentlyVisiblePages) {\n          if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n          }\n          if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n          }\n          if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n              return;\n            }\n          }\n          if (this.printing) {\n            return;\n          }\n          if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n          }\n        }\n        getHighestPriority(visible, views, scrolledDown) {\n          const visibleViews = visible.views;\n          const numVisible = visibleViews.length;\n          if (numVisible === 0) {\n            return null;\n          }\n          for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n              return view;\n            }\n          }\n          if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n              return views[nextPageIndex];\n            }\n          } else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n              return views[previousPageIndex];\n            }\n          }\n          return null;\n        }\n        isViewFinished(view) {\n          return view.renderingState === RenderingStates.FINISHED;\n        }\n        renderView(view) {\n          switch (view.renderingState) {\n            case RenderingStates.FINISHED:\n              return false;\n            case RenderingStates.PAUSED:\n              this.highestPriorityPage = view.renderingId;\n              view.resume();\n              break;\n            case RenderingStates.RUNNING:\n              this.highestPriorityPage = view.renderingId;\n              break;\n            case RenderingStates.INITIAL:\n              this.highestPriorityPage = view.renderingId;\n              view.draw().finally(() => {\n                this.renderHighestPriority();\n              }).catch(reason => {\n                console.error(`renderView: \"${reason}\"`);\n              });\n              break;\n          }\n          return true;\n        }\n      }\n      exports.PDFRenderingQueue = PDFRenderingQueue;\n\n      /***/\n    }, /* 15 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFSinglePageViewer = void 0;\n      var _base_viewer = __w_pdfjs_require__(16);\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      class PDFSinglePageViewer extends _base_viewer.BaseViewer {\n        constructor(options) {\n          super(options);\n          this.eventBus._on(\"pagesinit\", evt => {\n            this._ensurePageViewVisible();\n          });\n        }\n        get _viewerElement() {\n          return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this._shadowViewer);\n        }\n        _resetView() {\n          super._resetView();\n          this._previousPageNumber = 1;\n          this._shadowViewer = document.createDocumentFragment();\n          this._updateScrollDown = null;\n        }\n        _ensurePageViewVisible() {\n          const pageView = this._pages[this._currentPageNumber - 1];\n          const previousPageView = this._pages[this._previousPageNumber - 1];\n          const viewerNodes = this.viewer.childNodes;\n          switch (viewerNodes.length) {\n            case 0:\n              this.viewer.appendChild(pageView.div);\n              break;\n            case 1:\n              if (viewerNodes[0] !== previousPageView.div) {\n                throw new Error(\"_ensurePageViewVisible: Unexpected previously visible page.\");\n              }\n              if (pageView === previousPageView) {\n                break;\n              }\n              this._shadowViewer.appendChild(previousPageView.div);\n              this.viewer.appendChild(pageView.div);\n              this.container.scrollTop = 0;\n              break;\n            default:\n              throw new Error(\"_ensurePageViewVisible: Only one page should be visible at a time.\");\n          }\n          this._previousPageNumber = this._currentPageNumber;\n        }\n        _scrollUpdate() {\n          if (this._updateScrollDown) {\n            this._updateScrollDown();\n          }\n          super._scrollUpdate();\n        }\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          if (pageNumber) {\n            this._setCurrentPageNumber(pageNumber);\n          }\n          const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n          this._ensurePageViewVisible();\n          this.update();\n          super._scrollIntoView({\n            pageDiv,\n            pageSpot,\n            pageNumber\n          });\n          this._updateScrollDown = () => {\n            this.scroll.down = scrolledDown;\n            this._updateScrollDown = null;\n          };\n        }\n        _getVisiblePages() {\n          return this._getCurrentVisiblePage();\n        }\n        _updateHelper(visiblePages) {}\n        get _isScrollModeHorizontal() {\n          return (0, _pdfjsLib.shadow)(this, \"_isScrollModeHorizontal\", false);\n        }\n        _updateScrollMode() {}\n        _updateSpreadMode() {}\n      }\n      exports.PDFSinglePageViewer = PDFSinglePageViewer;\n\n      /***/\n    }, /* 16 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.BaseViewer = void 0;\n      var _ui_utils = __w_pdfjs_require__(3);\n      var _pdf_rendering_queue = __w_pdfjs_require__(14);\n      var _annotation_layer_builder = __w_pdfjs_require__(1);\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      var _pdf_page_view = __w_pdfjs_require__(13);\n      var _pdf_link_service = __w_pdfjs_require__(4);\n      var _text_layer_builder = __w_pdfjs_require__(5);\n      const DEFAULT_CACHE_SIZE = 10;\n      function PDFPageViewBuffer(size) {\n        const data = [];\n        this.push = function (view) {\n          const i = data.indexOf(view);\n          if (i >= 0) {\n            data.splice(i, 1);\n          }\n          data.push(view);\n          if (data.length > size) {\n            data.shift().destroy();\n          }\n        };\n        this.resize = function (newSize, pagesToKeep) {\n          size = newSize;\n          if (pagesToKeep) {\n            const pageIdsToKeep = new Set();\n            for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n              pageIdsToKeep.add(pagesToKeep[i].id);\n            }\n            (0, _ui_utils.moveToEndOfArray)(data, function (page) {\n              return pageIdsToKeep.has(page.id);\n            });\n          }\n          while (data.length > size) {\n            data.shift().destroy();\n          }\n        };\n      }\n      function isSameScale(oldScale, newScale) {\n        if (newScale === oldScale) {\n          return true;\n        }\n        if (Math.abs(newScale - oldScale) < 1e-15) {\n          return true;\n        }\n        return false;\n      }\n      class BaseViewer {\n        constructor(options) {\n          if (this.constructor === BaseViewer) {\n            throw new Error(\"Cannot initialize BaseViewer.\");\n          }\n          this._name = this.constructor.name;\n          this.container = options.container;\n          this.viewer = options.viewer || options.container.firstElementChild;\n          this.eventBus = options.eventBus;\n          this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n          this.downloadManager = options.downloadManager || null;\n          this.findController = options.findController || null;\n          this.removePageBorders = options.removePageBorders || false;\n          this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n          this.imageResourcesPath = options.imageResourcesPath || \"\";\n          this.renderInteractiveForms = options.renderInteractiveForms || false;\n          this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n          this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n          this.enableWebGL = options.enableWebGL || false;\n          this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n          this.maxCanvasPixels = options.maxCanvasPixels;\n          this.l10n = options.l10n || _ui_utils.NullL10n;\n          this.defaultRenderingQueue = !options.renderingQueue;\n          if (this.defaultRenderingQueue) {\n            this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n            this.renderingQueue.setViewer(this);\n          } else {\n            this.renderingQueue = options.renderingQueue;\n          }\n          this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n          this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN;\n          this._onBeforeDraw = this._onAfterDraw = null;\n          this._resetView();\n          if (this.removePageBorders) {\n            this.viewer.classList.add(\"removePageBorders\");\n          }\n          Promise.resolve().then(() => {\n            this.eventBus.dispatch(\"baseviewerinit\", {\n              source: this\n            });\n          });\n        }\n        get pagesCount() {\n          return this._pages.length;\n        }\n        getPageView(index) {\n          return this._pages[index];\n        }\n        get pageViewsReady() {\n          if (!this._pagesCapability.settled) {\n            return false;\n          }\n          return this._pages.every(function (pageView) {\n            return pageView && pageView.pdfPage;\n          });\n        }\n        get currentPageNumber() {\n          return this._currentPageNumber;\n        }\n        set currentPageNumber(val) {\n          if (!Number.isInteger(val)) {\n            throw new Error(\"Invalid page number.\");\n          }\n          if (!this.pdfDocument) {\n            return;\n          }\n          if (!this._setCurrentPageNumber(val, true)) {\n            console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\n          }\n        }\n        _setCurrentPageNumber(val, resetCurrentPageView = false) {\n          if (this._currentPageNumber === val) {\n            if (resetCurrentPageView) {\n              this._resetCurrentPageView();\n            }\n            return true;\n          }\n          if (!(0 < val && val <= this.pagesCount)) {\n            return false;\n          }\n          this._currentPageNumber = val;\n          this.eventBus.dispatch(\"pagechanging\", {\n            source: this,\n            pageNumber: val,\n            pageLabel: this._pageLabels && this._pageLabels[val - 1]\n          });\n          if (resetCurrentPageView) {\n            this._resetCurrentPageView();\n          }\n          return true;\n        }\n        get currentPageLabel() {\n          return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n        }\n        set currentPageLabel(val) {\n          if (!this.pdfDocument) {\n            return;\n          }\n          let page = val | 0;\n          if (this._pageLabels) {\n            const i = this._pageLabels.indexOf(val);\n            if (i >= 0) {\n              page = i + 1;\n            }\n          }\n          if (!this._setCurrentPageNumber(page, true)) {\n            console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\n          }\n        }\n        get currentScale() {\n          return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n        }\n        set currentScale(val) {\n          if (isNaN(val)) {\n            throw new Error(\"Invalid numeric scale.\");\n          }\n          if (!this.pdfDocument) {\n            return;\n          }\n          this._setScale(val, false);\n        }\n        get currentScaleValue() {\n          return this._currentScaleValue;\n        }\n        set currentScaleValue(val) {\n          if (!this.pdfDocument) {\n            return;\n          }\n          this._setScale(val, false);\n        }\n        get pagesRotation() {\n          return this._pagesRotation;\n        }\n        set pagesRotation(rotation) {\n          if (!(0, _ui_utils.isValidRotation)(rotation)) {\n            throw new Error(\"Invalid pages rotation angle.\");\n          }\n          if (!this.pdfDocument) {\n            return;\n          }\n          if (this._pagesRotation === rotation) {\n            return;\n          }\n          this._pagesRotation = rotation;\n          const pageNumber = this._currentPageNumber;\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            const pageView = this._pages[i];\n            pageView.update(pageView.scale, rotation);\n          }\n          if (this._currentScaleValue) {\n            this._setScale(this._currentScaleValue, true);\n          }\n          this.eventBus.dispatch(\"rotationchanging\", {\n            source: this,\n            pagesRotation: rotation,\n            pageNumber\n          });\n          if (this.defaultRenderingQueue) {\n            this.update();\n          }\n        }\n        get firstPagePromise() {\n          return this.pdfDocument ? this._firstPageCapability.promise : null;\n        }\n        get onePageRendered() {\n          return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n        }\n        get pagesPromise() {\n          return this.pdfDocument ? this._pagesCapability.promise : null;\n        }\n        get _viewerElement() {\n          throw new Error(\"Not implemented: _viewerElement\");\n        }\n        _onePageRenderedOrForceFetch() {\n          if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n            return Promise.resolve();\n          }\n          return this._onePageRenderedCapability.promise;\n        }\n        setDocument(pdfDocument) {\n          if (this.pdfDocument) {\n            this._cancelRendering();\n            this._resetView();\n            if (this.findController) {\n              this.findController.setDocument(null);\n            }\n          }\n          this.pdfDocument = pdfDocument;\n          if (!pdfDocument) {\n            return;\n          }\n          const pagesCount = pdfDocument.numPages;\n          const firstPagePromise = pdfDocument.getPage(1);\n          this._pagesCapability.promise.then(() => {\n            this.eventBus.dispatch(\"pagesloaded\", {\n              source: this,\n              pagesCount\n            });\n          });\n          this._onBeforeDraw = evt => {\n            const pageView = this._pages[evt.pageNumber - 1];\n            if (!pageView) {\n              return;\n            }\n            this._buffer.push(pageView);\n          };\n          this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n          this._onAfterDraw = evt => {\n            if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n              return;\n            }\n            this._onePageRenderedCapability.resolve();\n            this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n            this._onAfterDraw = null;\n          };\n          this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n          firstPagePromise.then(firstPdfPage => {\n            this._firstPageCapability.resolve(firstPdfPage);\n            const scale = this.currentScale;\n            const viewport = firstPdfPage.getViewport({\n              scale: scale * _ui_utils.CSS_UNITS\n            });\n            const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE ? this : null;\n            for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n              const pageView = new _pdf_page_view.PDFPageView({\n                container: this._viewerElement,\n                eventBus: this.eventBus,\n                id: pageNum,\n                scale,\n                defaultViewport: viewport.clone(),\n                renderingQueue: this.renderingQueue,\n                textLayerFactory,\n                textLayerMode: this.textLayerMode,\n                annotationLayerFactory: this,\n                imageResourcesPath: this.imageResourcesPath,\n                renderInteractiveForms: this.renderInteractiveForms,\n                renderer: this.renderer,\n                enableWebGL: this.enableWebGL,\n                useOnlyCssZoom: this.useOnlyCssZoom,\n                maxCanvasPixels: this.maxCanvasPixels,\n                l10n: this.l10n\n              });\n              this._pages.push(pageView);\n            }\n            const firstPageView = this._pages[0];\n            if (firstPageView) {\n              firstPageView.setPdfPage(firstPdfPage);\n              this.linkService.cachePageRef(1, firstPdfPage.ref);\n            }\n            if (this._spreadMode !== _ui_utils.SpreadMode.NONE) {\n              this._updateSpreadMode();\n            }\n            this._onePageRenderedOrForceFetch().then(() => {\n              if (this.findController) {\n                this.findController.setDocument(pdfDocument);\n              }\n              if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n                this._pagesCapability.resolve();\n                return;\n              }\n              let getPagesLeft = pagesCount - 1;\n              if (getPagesLeft <= 0) {\n                this._pagesCapability.resolve();\n                return;\n              }\n              for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n                pdfDocument.getPage(pageNum).then(pdfPage => {\n                  const pageView = this._pages[pageNum - 1];\n                  if (!pageView.pdfPage) {\n                    pageView.setPdfPage(pdfPage);\n                  }\n                  this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                }, reason => {\n                  console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                });\n              }\n            });\n            this.eventBus.dispatch(\"pagesinit\", {\n              source: this\n            });\n            if (this.defaultRenderingQueue) {\n              this.update();\n            }\n          }).catch(reason => {\n            console.error(\"Unable to initialize viewer\", reason);\n          });\n        }\n        setPageLabels(labels) {\n          if (!this.pdfDocument) {\n            return;\n          }\n          if (!labels) {\n            this._pageLabels = null;\n          } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n            this._pageLabels = null;\n            console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n          } else {\n            this._pageLabels = labels;\n          }\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            const pageView = this._pages[i];\n            const label = this._pageLabels && this._pageLabels[i];\n            pageView.setPageLabel(label);\n          }\n        }\n        _resetView() {\n          this._pages = [];\n          this._currentPageNumber = 1;\n          this._currentScale = _ui_utils.UNKNOWN_SCALE;\n          this._currentScaleValue = null;\n          this._pageLabels = null;\n          this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n          this._location = null;\n          this._pagesRotation = 0;\n          this._pagesRequests = new WeakMap();\n          this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n          this._scrollMode = _ui_utils.ScrollMode.VERTICAL;\n          this._spreadMode = _ui_utils.SpreadMode.NONE;\n          if (this._onBeforeDraw) {\n            this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n            this._onBeforeDraw = null;\n          }\n          if (this._onAfterDraw) {\n            this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n            this._onAfterDraw = null;\n          }\n          this.viewer.textContent = \"\";\n          this._updateScrollMode();\n        }\n        _scrollUpdate() {\n          if (this.pagesCount === 0) {\n            return;\n          }\n          this.update();\n        }\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot);\n        }\n        _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n          this._currentScaleValue = newValue.toString();\n          if (isSameScale(this._currentScale, newScale)) {\n            if (preset) {\n              this.eventBus.dispatch(\"scalechanging\", {\n                source: this,\n                scale: newScale,\n                presetValue: newValue\n              });\n            }\n            return;\n          }\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            this._pages[i].update(newScale);\n          }\n          this._currentScale = newScale;\n          if (!noScroll) {\n            let page = this._currentPageNumber,\n              dest;\n            if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n              page = this._location.pageNumber;\n              dest = [null, {\n                name: \"XYZ\"\n              }, this._location.left, this._location.top, null];\n            }\n            this.scrollPageIntoView({\n              pageNumber: page,\n              destArray: dest,\n              allowNegativeOffset: true\n            });\n          }\n          this.eventBus.dispatch(\"scalechanging\", {\n            source: this,\n            scale: newScale,\n            presetValue: preset ? newValue : undefined\n          });\n          if (this.defaultRenderingQueue) {\n            this.update();\n          }\n        }\n        _setScale(value, noScroll = false) {\n          let scale = parseFloat(value);\n          if (scale > 0) {\n            this._setScaleUpdatePages(scale, value, noScroll, false);\n          } else {\n            const currentPage = this._pages[this._currentPageNumber - 1];\n            if (!currentPage) {\n              return;\n            }\n            const noPadding = this.isInPresentationMode || this.removePageBorders;\n            let hPadding = noPadding ? 0 : _ui_utils.SCROLLBAR_PADDING;\n            let vPadding = noPadding ? 0 : _ui_utils.VERTICAL_PADDING;\n            if (!noPadding && this._isScrollModeHorizontal) {\n              [hPadding, vPadding] = [vPadding, hPadding];\n            }\n            const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n            switch (value) {\n              case \"page-actual\":\n                scale = 1;\n                break;\n              case \"page-width\":\n                scale = pageWidthScale;\n                break;\n              case \"page-height\":\n                scale = pageHeightScale;\n                break;\n              case \"page-fit\":\n                scale = Math.min(pageWidthScale, pageHeightScale);\n                break;\n              case \"auto\":\n                const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n                scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n                break;\n              default:\n                console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\n                return;\n            }\n            this._setScaleUpdatePages(scale, value, noScroll, true);\n          }\n        }\n        _resetCurrentPageView() {\n          if (this.isInPresentationMode) {\n            this._setScale(this._currentScaleValue, true);\n          }\n          const pageView = this._pages[this._currentPageNumber - 1];\n          this._scrollIntoView({\n            pageDiv: pageView.div\n          });\n        }\n        scrollPageIntoView({\n          pageNumber,\n          destArray = null,\n          allowNegativeOffset = false,\n          ignoreDestinationZoom = false\n        }) {\n          if (!this.pdfDocument) {\n            return;\n          }\n          const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n          if (!pageView) {\n            console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n            return;\n          }\n          if (this.isInPresentationMode || !destArray) {\n            this._setCurrentPageNumber(pageNumber, true);\n            return;\n          }\n          let x = 0,\n            y = 0;\n          let width = 0,\n            height = 0,\n            widthScale,\n            heightScale;\n          const changeOrientation = pageView.rotation % 180 !== 0;\n          const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n          const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n          let scale = 0;\n          switch (destArray[1].name) {\n            case \"XYZ\":\n              x = destArray[2];\n              y = destArray[3];\n              scale = destArray[4];\n              x = x !== null ? x : 0;\n              y = y !== null ? y : pageHeight;\n              break;\n            case \"Fit\":\n            case \"FitB\":\n              scale = \"page-fit\";\n              break;\n            case \"FitH\":\n            case \"FitBH\":\n              y = destArray[2];\n              scale = \"page-width\";\n              if (y === null && this._location) {\n                x = this._location.left;\n                y = this._location.top;\n              }\n              break;\n            case \"FitV\":\n            case \"FitBV\":\n              x = destArray[2];\n              width = pageWidth;\n              height = pageHeight;\n              scale = \"page-height\";\n              break;\n            case \"FitR\":\n              x = destArray[2];\n              y = destArray[3];\n              width = destArray[4] - x;\n              height = destArray[5] - y;\n              const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n              const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n              widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n              heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n              scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n              break;\n            default:\n              console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n              return;\n          }\n          if (!ignoreDestinationZoom) {\n            if (scale && scale !== this._currentScale) {\n              this.currentScaleValue = scale;\n            } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n              this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n            }\n          }\n          if (scale === \"page-fit\" && !destArray[4]) {\n            this._scrollIntoView({\n              pageDiv: pageView.div,\n              pageNumber\n            });\n            return;\n          }\n          const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n          let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n          let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n          if (!allowNegativeOffset) {\n            left = Math.max(left, 0);\n            top = Math.max(top, 0);\n          }\n          this._scrollIntoView({\n            pageDiv: pageView.div,\n            pageSpot: {\n              left,\n              top\n            },\n            pageNumber\n          });\n        }\n        _updateLocation(firstPage) {\n          const currentScale = this._currentScale;\n          const currentScaleValue = this._currentScaleValue;\n          const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n          const pageNumber = firstPage.id;\n          let pdfOpenParams = \"#page=\" + pageNumber;\n          pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n          const currentPageView = this._pages[pageNumber - 1];\n          const container = this.container;\n          const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n          const intLeft = Math.round(topLeft[0]);\n          const intTop = Math.round(topLeft[1]);\n          pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n          this._location = {\n            pageNumber,\n            scale: normalizedScaleValue,\n            top: intTop,\n            left: intLeft,\n            rotation: this._pagesRotation,\n            pdfOpenParams\n          };\n        }\n        _updateHelper(visiblePages) {\n          throw new Error(\"Not implemented: _updateHelper\");\n        }\n        update() {\n          const visible = this._getVisiblePages();\n          const visiblePages = visible.views,\n            numVisiblePages = visiblePages.length;\n          if (numVisiblePages === 0) {\n            return;\n          }\n          const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n          this._buffer.resize(newCacheSize, visiblePages);\n          this.renderingQueue.renderHighestPriority(visible);\n          this._updateHelper(visiblePages);\n          this._updateLocation(visible.first);\n          this.eventBus.dispatch(\"updateviewarea\", {\n            source: this,\n            location: this._location\n          });\n        }\n        containsElement(element) {\n          return this.container.contains(element);\n        }\n        focus() {\n          this.container.focus();\n        }\n        get _isScrollModeHorizontal() {\n          return this.isInPresentationMode ? false : this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL;\n        }\n        get isInPresentationMode() {\n          return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN;\n        }\n        get isChangingPresentationMode() {\n          return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING;\n        }\n        get isHorizontalScrollbarEnabled() {\n          return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n        }\n        get isVerticalScrollbarEnabled() {\n          return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n        }\n        _getCurrentVisiblePage() {\n          if (!this.pagesCount) {\n            return {\n              views: []\n            };\n          }\n          const pageView = this._pages[this._currentPageNumber - 1];\n          const element = pageView.div;\n          const view = {\n            id: pageView.id,\n            x: element.offsetLeft + element.clientLeft,\n            y: element.offsetTop + element.clientTop,\n            view: pageView\n          };\n          return {\n            first: view,\n            last: view,\n            views: [view]\n          };\n        }\n        _getVisiblePages() {\n          return (0, _ui_utils.getVisibleElements)(this.container, this._pages, true, this._isScrollModeHorizontal);\n        }\n        isPageVisible(pageNumber) {\n          if (!this.pdfDocument) {\n            return false;\n          }\n          if (pageNumber < 1 || pageNumber > this.pagesCount) {\n            console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`);\n            return false;\n          }\n          return this._getVisiblePages().views.some(function (view) {\n            return view.id === pageNumber;\n          });\n        }\n        cleanup() {\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n              this._pages[i].reset();\n            }\n          }\n        }\n        _cancelRendering() {\n          for (let i = 0, ii = this._pages.length; i < ii; i++) {\n            if (this._pages[i]) {\n              this._pages[i].cancelRendering();\n            }\n          }\n        }\n        _ensurePdfPageLoaded(pageView) {\n          if (pageView.pdfPage) {\n            return Promise.resolve(pageView.pdfPage);\n          }\n          if (this._pagesRequests.has(pageView)) {\n            return this._pagesRequests.get(pageView);\n          }\n          const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n            this._pagesRequests.delete(pageView);\n            return pdfPage;\n          }).catch(reason => {\n            console.error(\"Unable to get page for page view\", reason);\n            this._pagesRequests.delete(pageView);\n          });\n          this._pagesRequests.set(pageView, promise);\n          return promise;\n        }\n        forceRendering(currentlyVisiblePages) {\n          const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n          const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n          const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\n          if (pageView) {\n            this._ensurePdfPageLoaded(pageView).then(() => {\n              this.renderingQueue.renderView(pageView);\n            });\n            return true;\n          }\n          return false;\n        }\n        createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n          return new _text_layer_builder.TextLayerBuilder({\n            textLayerDiv,\n            eventBus,\n            pageIndex,\n            viewport,\n            findController: this.isInPresentationMode ? null : this.findController,\n            enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n          });\n        }\n        createAnnotationLayerBuilder(pageDiv, pdfPage, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n) {\n          return new _annotation_layer_builder.AnnotationLayerBuilder({\n            pageDiv,\n            pdfPage,\n            imageResourcesPath,\n            renderInteractiveForms,\n            linkService: this.linkService,\n            downloadManager: this.downloadManager,\n            l10n\n          });\n        }\n        get hasEqualPageSizes() {\n          const firstPageView = this._pages[0];\n          for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n            const pageView = this._pages[i];\n            if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n              return false;\n            }\n          }\n          return true;\n        }\n        getPagesOverview() {\n          const pagesOverview = this._pages.map(function (pageView) {\n            const viewport = pageView.pdfPage.getViewport({\n              scale: 1\n            });\n            return {\n              width: viewport.width,\n              height: viewport.height,\n              rotation: viewport.rotation\n            };\n          });\n          if (!this.enablePrintAutoRotate) {\n            return pagesOverview;\n          }\n          const isFirstPagePortrait = (0, _ui_utils.isPortraitOrientation)(pagesOverview[0]);\n          return pagesOverview.map(function (size) {\n            if (isFirstPagePortrait === (0, _ui_utils.isPortraitOrientation)(size)) {\n              return size;\n            }\n            return {\n              width: size.height,\n              height: size.width,\n              rotation: (size.rotation + 90) % 360\n            };\n          });\n        }\n        get scrollMode() {\n          return this._scrollMode;\n        }\n        set scrollMode(mode) {\n          if (this._scrollMode === mode) {\n            return;\n          }\n          if (!(0, _ui_utils.isValidScrollMode)(mode)) {\n            throw new Error(`Invalid scroll mode: ${mode}`);\n          }\n          this._scrollMode = mode;\n          this.eventBus.dispatch(\"scrollmodechanged\", {\n            source: this,\n            mode\n          });\n          this._updateScrollMode(this._currentPageNumber);\n        }\n        _updateScrollMode(pageNumber = null) {\n          const scrollMode = this._scrollMode,\n            viewer = this.viewer;\n          viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL);\n          viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED);\n          if (!this.pdfDocument || !pageNumber) {\n            return;\n          }\n          if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n            this._setScale(this._currentScaleValue, true);\n          }\n          this._setCurrentPageNumber(pageNumber, true);\n          this.update();\n        }\n        get spreadMode() {\n          return this._spreadMode;\n        }\n        set spreadMode(mode) {\n          if (this._spreadMode === mode) {\n            return;\n          }\n          if (!(0, _ui_utils.isValidSpreadMode)(mode)) {\n            throw new Error(`Invalid spread mode: ${mode}`);\n          }\n          this._spreadMode = mode;\n          this.eventBus.dispatch(\"spreadmodechanged\", {\n            source: this,\n            mode\n          });\n          this._updateSpreadMode(this._currentPageNumber);\n        }\n        _updateSpreadMode(pageNumber = null) {\n          if (!this.pdfDocument) {\n            return;\n          }\n          const viewer = this.viewer,\n            pages = this._pages;\n          viewer.textContent = \"\";\n          if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n            for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n              viewer.appendChild(pages[i].div);\n            }\n          } else {\n            const parity = this._spreadMode - 1;\n            let spread = null;\n            for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n              if (spread === null) {\n                spread = document.createElement(\"div\");\n                spread.className = \"spread\";\n                viewer.appendChild(spread);\n              } else if (i % 2 === parity) {\n                spread = spread.cloneNode(false);\n                viewer.appendChild(spread);\n              }\n              spread.appendChild(pages[i].div);\n            }\n          }\n          if (!pageNumber) {\n            return;\n          }\n          this._setCurrentPageNumber(pageNumber, true);\n          this.update();\n        }\n      }\n      exports.BaseViewer = BaseViewer;\n\n      /***/\n    }, /* 17 */\n    /***/function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFViewer = void 0;\n      var _base_viewer = __w_pdfjs_require__(16);\n      var _pdfjsLib = __w_pdfjs_require__(2);\n      class PDFViewer extends _base_viewer.BaseViewer {\n        get _viewerElement() {\n          return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this.viewer);\n        }\n        _scrollIntoView({\n          pageDiv,\n          pageSpot = null,\n          pageNumber = null\n        }) {\n          if (!pageSpot && !this.isInPresentationMode) {\n            const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n            const right = left + pageDiv.clientWidth;\n            const {\n              scrollLeft,\n              clientWidth\n            } = this.container;\n            if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n              pageSpot = {\n                left: 0,\n                top: 0\n              };\n            }\n          }\n          super._scrollIntoView({\n            pageDiv,\n            pageSpot,\n            pageNumber\n          });\n        }\n        _getVisiblePages() {\n          if (this.isInPresentationMode) {\n            return this._getCurrentVisiblePage();\n          }\n          return super._getVisiblePages();\n        }\n        _updateHelper(visiblePages) {\n          if (this.isInPresentationMode) {\n            return;\n          }\n          let currentId = this._currentPageNumber;\n          let stillFullyVisible = false;\n          for (const page of visiblePages) {\n            if (page.percent < 100) {\n              break;\n            }\n            if (page.id === currentId) {\n              stillFullyVisible = true;\n              break;\n            }\n          }\n          if (!stillFullyVisible) {\n            currentId = visiblePages[0].id;\n          }\n          this._setCurrentPageNumber(currentId);\n        }\n      }\n      exports.PDFViewer = PDFViewer;\n\n      /***/\n    }\n    /******/])\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","i","l","modules","__w_pdfjs_require__","Object","enumerable","get","value","pdfjsVersion","pdfjsBuild","constructor","pageDiv","pdfPage","linkService","downloadManager","imageResourcesPath","renderInteractiveForms","l10n","render","intent","annotations","_cancelled","parameters","viewport","dontFlip","div","page","AnnotationLayer","document","cancel","hide","createAnnotationLayerBuilder","_pdf_link_service","pdfjsLib","window","__non_webpack_require__","CSS_UNITS","DEFAULT_SCALE_VALUE","DEFAULT_SCALE","MIN_SCALE","MAX_SCALE","UNKNOWN_SCALE","MAX_AUTO_SCALE","SCROLLBAR_PADDING","VERTICAL_PADDING","PresentationModeState","UNKNOWN","NORMAL","CHANGING","FULLSCREEN","RendererType","CANVAS","SVG","TextLayerMode","DISABLE","ENABLE","ENABLE_ENHANCE","ScrollMode","VERTICAL","HORIZONTAL","WRAPPED","SpreadMode","NONE","ODD","EVEN","AutoPrintRegExp","args","text","name","NullL10n","formatL10nValue","devicePixelRatio","backingStoreRatio","ctx","pixelRatio","sx","sy","scaled","skipOverflowHiddenElements","parent","element","offsetParent","console","offsetY","clientTop","offsetX","clientLeft","scrollWidth","getComputedStyle","_scaleY","_scaleX","offsetTop","offsetLeft","spot","undefined","top","left","debounceScroll","rAF","currentX","viewAreaElement","scrollLeft","lastX","state","currentY","scrollTop","lastY","callback","right","down","_eventHandler","parts","query","params","ii","length","param","key","toLowerCase","decodeURIComponent","minIndex","maxIndex","items","condition","currentIndex","currentItem","Math","x","xinv","limit","x_","a","b","c","d","p","q","result","r","view","userUnit","rotate","changeOrientation","width","x1","height","y1","index","elt","views","pageTop","sortByVisibility","horizontal","scrollEl","bottom","clientHeight","clientWidth","elementBottom","elementRight","visible","numViews","firstVisibleElementInd","binarySearchFirstItem","isElementBottomAfterViewTop","backtrackBeforeAllVisibleElements","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","percent","id","y","first","last","pc","evt","preventDefault","url","defaultFilename","isDataSchema","reURI","reFilename","splitURI","suggestedFilename","delta","deltaY","angle","deltaX","PI","MOUSE_DOM_DELTA_PIXEL_MODE","MOUSE_DOM_DELTA_LINE_MODE","MOUSE_PIXELS_PER_LINE","MOUSE_LINES_PER_PAGE","Number","mode","size","WaitOnType","EVENT","TIMEOUT","target","delay","EventBus","eventHandler","clearTimeout","timeout","resolve","type","handler","timeoutHandler","setTimeout","animationStarted","on","external","off","dispatch","eventListeners","eventName","Array","externalListeners","listener","_on","options","_off","max","units","parentNode","_updateBar","_indeterminate","progressSize","_percent","isNaN","val","clamp","setWidth","viewer","container","scrollbarWidth","offsetWidth","show","moved","len","arr","write","read","eventBus","externalLinkTarget","externalLinkRel","externalLinkEnabled","ignoreDestinationZoom","setDocument","baseUrl","pdfDocument","setViewer","pdfViewer","setHistory","pdfHistory","numPages","currentPageNumber","pagesRotation","navigateTo","goToDestination","namedDest","explicitDest","destRef","pageNumber","pageIndex","pagesCount","pushCurrentPosition","destArray","_ignoreDestinationZoom","dest","data","getDestinationHash","escape","str","JSON","getAnchorUrl","anchor","setHash","hash","parseQueryString","source","phraseSearch","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","pagemode","nameddest","unescape","toString","isValidExplicitDestination","executeNamedAction","back","forward","action","cachePageRef","pageRef","refStr","num","gen","pageNum","_cachedPageNumber","isPageVisible","destLength","zoom","allowNull","EXPAND_DIVS_TIMEOUT","textLayerDiv","findController","enhanceTextSelection","_bindMouse","_finishRendering","endOfContent","numTextDivs","textContentStream","renderingDone","textLayerFrag","createDocumentFragment","textContent","textDivs","textContentItemsStr","_updateMatches","_onUpdateTextLayerMatches","textLayerRenderTask","setTextContentStream","readableStream","setTextContent","_convertMatches","matches","iIndex","end","queryLen","m","mm","matchIdx","match","begin","divIdx","offset","matchesLength","_renderMatches","pageIdx","isSelectedPage","selectedMatchIdx","highlightAll","prevEnd","infinity","appendTextToDiv","className","content","toOffset","node","span","i0","i1","isSelected","highlightSuffix","matchIndex","beginText","n0","n1","clearedUntilDivIdx","n","highlightMatches","pageMatches","pageMatchesLength","expandDivsTimer","adjustTop","divBounds","getBoundingClientRect","toFixed","createTextLayerBuilder","DISABLE_CREATE_OBJECT_URL","viewerCompatibilityParams","click","blobUrl","filename","documentElement","appendChild","remove","disableCreateObjectURL","downloadUrl","createValidAbsoluteUrl","download","downloadData","navigator","msSaveBlob","createObjectURL","URL","blob","compatibilityParams","userAgent","platform","maxTouchPoints","isAndroid","isIE","isIOS","isIOSChrome","webL10n","lang","_ready","getLanguage","getDirection","fallback","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","script","l10nId","l10nArgs","onSuccess","onFailure","xhr","XMLHttpRequest","overrideMimeType","responseText","baseURL","href","dictionary","reBlank","reComment","reSection","reImport","reSplit","entries","rawText","currentLang","genericLang","skipLang","parsedRawLinesCallback","line","shift","loadImport","nextEntry","tmp","evalString","xhrLoadText","parseRawLines","parsedPropertiesCallback","response","parseProperties","prop","successCallback","failureCallback","clear","langLinks","getL10nResourceLinks","langCount","dict","getL10nDictionary","default_locale","defaultLocale","locales","anyCaseLang","onResourceLoaded","gResourceCount","link","parseResource","resource","locales2rules","list","start","pluralRules","isBetween","isIn","_pluralRules","getPluralRules","rv","substIndexes","substArguments","reIndex","reMatch","macroName","paramName","macro","reArgs","arg","matched_text","getL10nAttributes","getL10nData","getChildElementCount","children","childNodes","found","nodeValue","textNode","firstChild","k","childElementCount","count","getTranslatableChildren","elementCount","translateElement","fallbackString","getData","getText","setLanguage","loadLocale","rtlList","shortCode","translate","translateFragment","getReadyState","ready","addEventListener","once","FindState","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","normalizationRegex","replace","ch","_reset","_highlightMatches","_pageMatches","_pageMatchesLength","_selected","_state","_pdfDocument","executeCommand","cmd","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","_dirtyMatch","_updateAllPages","scrollMatchIntoView","_scrollMatches","scrollIntoView","wrapped","_rawQuery","normalize","_normalizedQuery","_shouldDirtyMatch","_linkService","_prepareMatches","currentElem","matchesWithLength","nextElem","prevElem","skipped","matchLength","isSubTerm","_isEntireWord","startIdx","getCharacterType","endIdx","_calculatePhraseMatch","pageContent","entireWord","_calculateWordMatch","queryArray","subquery","subqueryLen","_calculateMatch","_query","caseSensitive","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","promise","Promise","extractTextCapability","normalizeWhitespace","textItems","strBuf","j","jj","reason","_updatePage","previous","findPrevious","currentPageIndex","_resumePageIdx","_offset","numPageMatches","_matchesReady","numMatches","_advanceOffsetPage","_pagesToSearch","_updateMatch","previousPage","_onFindBarClose","_requestMatchesCount","current","total","_matchesCountTotal","matchesCount","_updateUIState","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","isAsciiAlpha","isAsciiDigit","isThai","isHan","isKatakana","isHiragana","isHalfwidthKatakana","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","reset","switchInProgress","onPagesLoaded","initialize","fingerprint","resetHistory","updateUrl","_initialized","reInitialized","_bindEvents","getCurrentHash","rotation","destination","uid","_maxUid","_uid","_pageHide","_unbindEvents","_updateViewareaTimeout","push","_destination","forceReplace","isDestHashesEqual","isDestArraysEqual","_popStateInProgress","_tryPushCurrentPosition","_initialBookmark","_initialRotation","_pushOrReplaceState","shouldReplace","newState","_fingerprint","newUrl","temporary","_position","position","_isValidState","checkReload","performance","perfEntry","_updateInternalState","removeTemporary","_parseCurrentHash","checkNameddest","_updateViewarea","location","_numPositionUpdates","_popState","newHash","hashChanged","_blockHashChange","waitOnEventOrTimeout","isValidRotation","_boundEvents","updateViewarea","popState","pageHide","destHash","pushHash","second","isEntryEqual","secondDest","firstDest","MAX_CANVAS_PIXELS","defaultViewport","_ui_utils","renderingQueue","textLayerFactory","annotationLayerFactory","WeakMap","RenderingStates","INITIAL","setPdfPage","totalRotation","pdfPageRotate","scale","stats","destroy","cleanup","_resetZoomLayer","removeFromDOM","zoomLayer","zoomLayerCanvas","keepZoomLayer","keepAnnotations","currentZoomLayerNode","currentAnnotationNode","annotationLayer","canvas","svg","loadingIconDiv","update","cssTransform","timestamp","now","isScalingRestricted","outputScale","maxCanvasPixels","cancelRendering","paintTask","textLayer","redrawAnnotations","relativeRotation","absRotation","scaleX","scaleY","textLayerViewport","textRelativeRotation","textAbsRotation","transY","transX","getPagePoint","draw","FINISHED","RUNNING","canvasWrapper","renderContinueCallback","cont","PAUSED","finishPaintTask","error","_pdfjsLib","resultPromise","paintOnCanvas","renderCapability","onRenderContinue","renderTask","msg","isCanvasHidden","showCanvas","alpha","getOutputScale","useOnlyCssZoom","actualSizeViewport","pixelsInViewport","maxScale","sfx","approximateFraction","sfy","roundToDivide","transform","renderContext","canvasContext","enableWebGL","paintOnSvg","cancelled","ensureNotCancelled","opList","svgGfx","commonObjs","objs","wrapper","setPageLabel","pageLabel","CLEANUP_TIMEOUT","setThumbnailViewer","pdfThumbnailViewer","isHighestPriority","renderingId","renderHighestPriority","idleTimeout","currentlyVisiblePages","isThumbnailViewEnabled","forceRendering","printing","onIdle","getHighestPriority","visibleViews","numVisible","nextPageIndex","previousPageIndex","isViewFinished","renderView","renderingState","resume","_ensurePageViewVisible","shadow","_shadowViewer","_resetView","pageView","previousPageView","viewerNodes","_currentPageNumber","_scrollUpdate","_updateScrollDown","_scrollIntoView","pageSpot","scrolledDown","_previousPageNumber","_getVisiblePages","_getCurrentVisiblePage","_updateHelper","_updateScrollMode","_updateSpreadMode","DEFAULT_CACHE_SIZE","newSize","pageIdsToKeep","Set","iMax","pagesToKeep","moveToEndOfArray","newScale","oldScale","BaseViewer","firstElementChild","defaultRenderingQueue","_pdf_rendering_queue","watchScroll","removePageBorders","getPageView","settled","_name","_setCurrentPageNumber","resetCurrentPageView","_resetCurrentPageView","_pageLabels","_currentScale","_currentScaleValue","_pagesRotation","_onePageRenderedOrForceFetch","_cancelRendering","firstPagePromise","_onBeforeDraw","_onAfterDraw","firstPdfPage","currentScale","_viewerElement","clone","textLayerMode","renderer","firstPageView","ref","getPagesLeft","setPageLabels","labels","label","_setScaleUpdatePages","noScroll","preset","newValue","isSameScale","presetValue","isChangingPresentationMode","_setScale","currentPage","noPadding","hPadding","vPadding","_isScrollModeHorizontal","pageWidthScale","pageHeightScale","horizontalScale","isPortraitOrientation","isInPresentationMode","scrollPageIntoView","widthScale","heightScale","pageWidth","pageHeight","_location","boundingRect","_updateLocation","currentScaleValue","normalizedScaleValue","firstPage","pdfOpenParams","currentPageView","topLeft","intLeft","intTop","visiblePages","numVisiblePages","newCacheSize","containsElement","focus","getVisibleElements","_ensurePdfPageLoaded","scrollAhead","_pages","getPagesOverview","pagesOverview","enablePrintAutoRotate","isFirstPagePortrait","_scrollMode","isValidScrollMode","scrollMode","_spreadMode","isValidSpreadMode","pages","parity","spread","currentId","stillFullyVisible"],"sourceRoot":"","sources":["webpack://pdfjs-dist/web/pdf_viewer/webpack/universalModuleDefinition","webpack://pdfjs-dist/web/pdf_viewer/webpack/bootstrap","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_viewer.component.js","webpack://pdfjs-dist/web/pdf_viewer/web/annotation_layer_builder.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdfjs.js","webpack://pdfjs-dist/web/pdf_viewer/web/ui_utils.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_link_service.js","webpack://pdfjs-dist/web/pdf_viewer/web/text_layer_builder.js","webpack://pdfjs-dist/web/pdf_viewer/web/download_manager.js","webpack://pdfjs-dist/web/pdf_viewer/web/viewer_compatibility.js","webpack://pdfjs-dist/web/pdf_viewer/web/genericl10n.js","webpack://pdfjs-dist/web/pdf_viewer/external/webL10n/l10n.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_find_controller.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_find_utils.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_history.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_page_view.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_rendering_queue.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_single_page_viewer.js","webpack://pdfjs-dist/web/pdf_viewer/web/base_viewer.js","webpack://pdfjs-dist/web/pdf_viewer/web/pdf_viewer.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/web/pdf_viewer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationLayerBuilder,\n  DefaultAnnotationLayerFactory,\n} from \"./annotation_layer_builder.js\";\nimport {\n  DefaultTextLayerFactory,\n  TextLayerBuilder,\n} from \"./text_layer_builder.js\";\nimport { EventBus, NullL10n, ProgressBar } from \"./ui_utils.js\";\nimport { PDFLinkService, SimpleLinkService } from \"./pdf_link_service.js\";\nimport { DownloadManager } from \"./download_manager.js\";\nimport { GenericL10n } from \"./genericl10n.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { PDFSinglePageViewer } from \"./pdf_single_page_viewer.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport {\n  PDFViewer,\n  PDFSinglePageViewer,\n  PDFPageView,\n  PDFLinkService,\n  SimpleLinkService,\n  TextLayerBuilder,\n  DefaultTextLayerFactory,\n  AnnotationLayerBuilder,\n  DefaultAnnotationLayerFactory,\n  PDFHistory,\n  PDFFindController,\n  EventBus,\n  DownloadManager,\n  ProgressBar,\n  GenericL10n,\n  NullL10n,\n};\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationLayer } from \"pdfjs-lib\";\nimport { NullL10n } from \"./ui_utils.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   */\n  render(viewport, intent = \"display\") {\n    this.pdfPage.getAnnotations({ intent }).then(annotations => {\n      if (this._cancelled) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        if (annotations.length === 0) {\n          return;\n        }\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        AnnotationLayer.render(parameters);\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n}\n\n/**\n * @implements IPDFAnnotationLayerFactory\n */\nclass DefaultAnnotationLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new SimpleLinkService(),\n      l10n,\n    });\n  }\n}\n\nexport { AnnotationLayerBuilder, DefaultAnnotationLayerFactory };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals module, __non_webpack_require__ */\n\n\"use strict\";\n\nlet pdfjsLib;\nif (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n  pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n} else {\n  pdfjsLib = __non_webpack_require__(\"../build/pdf.js\");\n}\nmodule.exports = pdfjsLib;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CSS_UNITS = 96.0 / 72.0;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (skipOverflowHiddenElements &&\n      getComputedStyle(parent).overflow === \"hidden\")\n  ) {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&parm2=...).\n */\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param scrollEl {HTMLElement} - a container that can possibly scroll\n * @param views {Array} - objects with a `div` property that contains an\n *   HTMLElement, which should all be descendents of `scrollEl` satisfying the\n *   above layout assumptions\n * @param sortByVisibility {boolean} - if true, the returned elements are sorted\n *   in descending order of the percent of their padding box that is visible\n * @param horizontal {boolean} - if true, the elements are assumed to be laid\n *   out horizontally instead of vertically\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements(\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false\n) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementRightAfterViewLeft(view) {\n    const element = view.div;\n    const elementRight =\n      element.offsetLeft + element.clientLeft + element.clientWidth;\n    return elementRight > left;\n  }\n\n  const visible = [],\n    numViews = views.length;\n  let firstVisibleElementInd =\n    numViews === 0\n      ? 0\n      : binarySearchFirstItem(\n          views,\n          horizontal ? isElementRightAfterViewLeft : isElementBottomAfterViewTop\n        );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const percent =\n      (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) /\n        viewHeight /\n        viewWidth) |\n      0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n    });\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataSchema(url)) {\n    console.warn(\n      \"getPDFFileNameFromURL: \" +\n        'ignoring \"data:\" URL for performance reasons.'\n    );\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST         1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB && TESTING\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js/Travis.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.requestAnimationFrame(resolve);\n});\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nfunction dispatchDOMEvent(eventName, args = null) {\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: dispatchDOMEvent\");\n  }\n  const details = Object.create(null);\n  if (args && args.length > 0) {\n    const obj = args[0];\n    for (const key in obj) {\n      const value = obj[key];\n      if (key === \"source\") {\n        if (value === window || value === document) {\n          return; // No need to re-dispatch (already) global events.\n        }\n        continue; // Ignore the `source` property.\n      }\n      details[key] = value;\n    }\n  }\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventName, true, true, details);\n  document.dispatchEvent(event);\n}\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\n      this._isInAutomation = (options && options.isInAutomation) === true;\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this._on(eventName, listener, { external: true });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  off(eventName, listener) {\n    this._off(eventName, listener, { external: true });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n        this._isInAutomation\n      ) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        dispatchDOMEvent(eventName, args);\n      }\n      return;\n    }\n    // Passing all arguments after the eventName to the listeners.\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    eventListeners.slice(0).forEach(function ({ listener, external }) {\n      if (external) {\n        if (!externalListeners) {\n          externalListeners = [];\n        }\n        externalListeners.push(listener);\n        return;\n      }\n      listener.apply(null, args);\n    });\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    if (externalListeners) {\n      externalListeners.forEach(function (listener) {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n      this._isInAutomation\n    ) {\n      dispatchDOMEvent(eventName, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    let eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      this._listeners[eventName] = eventListeners = [];\n    }\n    eventListeners.push({\n      listener,\n      external: (options && options.external) === true,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    this.bar = this.div.parentNode;\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = (this.width * this._percent) / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      this.bar.style.width = `calc(100% - ${scrollbarWidth}px)`;\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    document.body.classList.add(\"loadingInProgress\");\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\nexport {\n  AutoPrintRegExp,\n  CSS_UNITS,\n  DEFAULT_SCALE_VALUE,\n  DEFAULT_SCALE,\n  MIN_SCALE,\n  MAX_SCALE,\n  UNKNOWN_SCALE,\n  MAX_AUTO_SCALE,\n  SCROLLBAR_PADDING,\n  VERTICAL_PADDING,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  isPortraitOrientation,\n  PresentationModeState,\n  RendererType,\n  TextLayerMode,\n  ScrollMode,\n  SpreadMode,\n  NullL10n,\n  EventBus,\n  clamp,\n  ProgressBar,\n  getPDFFileNameFromURL,\n  noContextMenuHandler,\n  parseQueryString,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  getVisibleElements,\n  roundToDivide,\n  getPageSizeInches,\n  approximateFraction,\n  getOutputScale,\n  scrollIntoView,\n  watchScroll,\n  binarySearchFirstItem,\n  normalizeWheelEventDelta,\n  animationStarted,\n  WaitOnType,\n  waitOnEventOrTimeout,\n  moveToEndOfArray,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  navigateTo(dest) {\n    const goToDestination = ({ namedDest, explicitDest }) => {\n      // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          // Fetch the page reference if it's not yet available. This could\n          // only occur during loading, before all pages have been resolved.\n          this.pdfDocument\n            .getPageIndex(destRef)\n            .then(pageIndex => {\n              this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({ namedDest, explicitDest });\n            })\n            .catch(() => {\n              console.error(\n                `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n                  `a valid page reference, for dest=\"${dest}\".`\n              );\n            });\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(\n          `PDFLinkService.navigateTo: \"${destRef}\" is not ` +\n            `a valid destination reference, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${pageNumber}\" is not ` +\n            `a valid page number, for dest=\"${dest}\".`\n        );\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new destination into\n        // view, to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n        ignoreDestinationZoom: this._ignoreDestinationZoom,\n      });\n    };\n\n    new Promise((resolve, reject) => {\n      if (typeof dest === \"string\") {\n        this.pdfDocument.getDestination(dest).then(destArray => {\n          resolve({\n            namedDest: dest,\n            explicitDest: destArray,\n          });\n        });\n        return;\n      }\n      resolve({\n        namedDest: \"\",\n        explicitDest: dest,\n      });\n    }).then(data => {\n      if (!Array.isArray(data.explicitDest)) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${data.explicitDest}\" is` +\n            ` not a valid destination array, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      goToDestination(data);\n    });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      return this.getAnchorUrl(\"#\" + escape(dest));\n    }\n    if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      return this.getAnchorUrl(\"#\" + escape(str));\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n      if (\"zoom\" in params) {\n        // Build the destination array.\n        const zoomArgs = params.zoom.split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            console.error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode,\n        });\n      }\n      // Ensure that this parameter is *always* handled last, in order to\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n      if (\"nameddest\" in params) {\n        this.navigateTo(params.nameddest);\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.navigateTo(dest);\n        return;\n      }\n      console.error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n        break;\n\n      case \"NextPage\":\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n        break;\n\n      case \"PrevPage\":\n        if (this.page > 1) {\n          this.page--;\n        }\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   */\n  navigateTo(dest) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderTextLayer } from \"pdfjs-lib\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {PDFFindController} findController\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._onUpdateTextLayerMatches = null;\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this._updateMatches();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { findController, textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      if (matchesLength) {\n        // Multiterm search.\n        matchIdx += matchesLength[m];\n      } else {\n        // Phrase search.\n        matchIdx += queryLen;\n      }\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    // Only show matches when all rendering is done.\n    if (!this.renderingDone) {\n      return;\n    }\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs,\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\n/**\n * @implements IPDFTextLayerFactory\n */\nclass DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus,\n    });\n  }\n}\n\nexport { TextLayerBuilder, DefaultTextLayerFactory };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createObjectURL, createValidAbsoluteUrl } from \"pdfjs-lib\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/download_manager\" shall not be used ' +\n      \"outside CHROME and GENERIC builds.\"\n  );\n}\n\nconst DISABLE_CREATE_OBJECT_URL =\n  viewerCompatibilityParams.disableCreateObjectURL || false;\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n  a.href = blobUrl;\n  a.target = \"_parent\";\n  // Use a.download if available. This increases the likelihood that\n  // the file is downloaded instead of opened by another PDF plugin.\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n  // <a> must be in the document for IE and recent Firefox versions,\n  // otherwise .click() is ignored.\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  constructor({ disableCreateObjectURL = DISABLE_CREATE_OBJECT_URL }) {\n    this.disableCreateObjectURL = disableCreateObjectURL;\n  }\n\n  downloadUrl(url, filename) {\n    if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n      return; // restricted/invalid URL\n    }\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    if (navigator.msSaveBlob) {\n      // IE10 and above\n      navigator.msSaveBlob(new Blob([data], { type: contentType }), filename);\n      return;\n    }\n    const blobUrl = createObjectURL(\n      data,\n      contentType,\n      this.disableCreateObjectURL\n    );\n    download(blobUrl, filename);\n  }\n\n  download(blob, url, filename) {\n    if (navigator.msSaveBlob) {\n      // IE10 / IE11\n      if (!navigator.msSaveBlob(blob, filename)) {\n        this.downloadUrl(url, filename);\n      }\n      return;\n    }\n\n    if (this.disableCreateObjectURL) {\n      // URL.createObjectURL is not supported\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n}\n\nexport { DownloadManager };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const platform =\n    (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n  const maxTouchPoints =\n    (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n  const isAndroid = /Android/.test(userAgent);\n  const isIE = /Trident/.test(userAgent);\n  const isIOS =\n    /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n    (platform === \"MacIntel\" && maxTouchPoints > 1);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes IE and Chrome on iOS losing the data created with\n    // createObjectURL(), see issues #3977 and #8081.\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Limit canvas size to 5 mega-pixels on mobile.\n  // Support: Android, iOS\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { viewerCompatibilityParams };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"../external/webL10n/l10n.js\";\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n}\n\nexport { GenericL10n };\n","/**\n * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n/*\n  Additional modifications for PDF.js project:\n    - Disables language initialization on page loading.\n    - Disables document translation on page loading.\n    - Removes consoleWarn and consoleLog and use console.log/warn directly.\n    - Removes window._ assignment.\n    - Remove compatibility code for OldIE.\n    - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\n    - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\n      is unused and may clash with an identically named event in the viewer.\n*/\n\n/*jshint browser: true, devel: true, es5: true, globalstrict: true */\n'use strict';\n\ndocument.webL10n = (function(window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n\n\n  /**\n   * Synchronously loading l10n resources significantly minimizes flickering\n   * from displaying the app with non-localized strings and then updating the\n   * strings. Although this will block all script execution on this page, we\n   * expect that the l10n resources are available locally on flash-storage.\n   *\n   * As synchronous XHR is generally considered as a bad idea, we're still\n   * loading l10n resources asynchronously -- but we keep this in a setting,\n   * just in case... and applications using this library should hide their\n   * content until the `localized' event happens.\n   */\n\n  var gAsyncResourceLoading = true; // read-only\n\n\n  /**\n   * DOM helpers for the so-called \"HTML API\".\n   *\n   * These functions are written for modern browsers. For old versions of IE,\n   * they're overridden in the 'startup' section at the end of this file.\n   */\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    // TODO: support multiple and external JSON dictionaries\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element)\n      return {};\n\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n    return { id: l10nId, args: args };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    // in Firefox OS with the app:// protocol, trying to XHR a non-existing\n    // URL will raise an exception here -- hence this ugly try...catch.\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n\n  /**\n   * l10n resource parser:\n   *  - reads (async XHR) the l10n resource matching `lang';\n   *  - imports linked resources (synchronously) when specified;\n   *  - parses the text data (fills `gL10nData' and `gTextData');\n   *  - triggers success/failure callbacks when done.\n   *\n   * @param {string} href\n   *    URL of the l10n resource to parse.\n   *\n   * @param {string} lang\n   *    locale (language) to parse. Must be a lowercase string.\n   *\n   * @param {Function} successCallback\n   *    triggered when the l10n resource has been successfully parsed.\n   *\n   * @param {Function} failureCallback\n   *    triggered when the an error has occurred.\n   *\n   * @return {void}\n   *    uses the following global variables: gL10nData, gTextData, gTextProp.\n   */\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    // handle escaped characters (backslashes) in a string\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0)\n        return text;\n      return text.replace(/\\\\\\\\/g, '\\\\')\n                 .replace(/\\\\n/g, '\\n')\n                 .replace(/\\\\r/g, '\\r')\n                 .replace(/\\\\t/g, '\\t')\n                 .replace(/\\\\b/g, '\\b')\n                 .replace(/\\\\f/g, '\\f')\n                 .replace(/\\\\{/g, '{')\n                 .replace(/\\\\}/g, '}')\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/\\\\'/g, \"'\");\n    }\n\n    // parse *.properties text data into an l10n dictionary\n    // If gAsyncResourceLoading is false, then the callback will be called\n    // synchronously. Otherwise it is called asynchronously.\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n\n      // token expressions\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\n\n      // parse the *.properties file into an associative array\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          // Use infinite loop instead of recursion to avoid reaching the\n          // maximum recursion limit for content with many lines.\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n\n            // comment or blank line?\n            if (reComment.test(line))\n              continue;\n\n            // the extended syntax supports [lang] sections and @import rules\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) { // section start?\n                // RFC 4646, section 4.4, \"All comparisons MUST be performed\n                // in a case-insensitive manner.\"\n\n                currentLang = match[1].toLowerCase();\n                skipLang = (currentLang !== '*') &&\n                    (currentLang !== lang) && (currentLang !== genericLang);\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) { // @import rule?\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            // key-value pair\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n\n      // import another *.properties file\n      function loadImport(url, callback) {\n        xhrLoadText(url, function(content) {\n          parseRawLines(content, false, callback); // don't allow recursive imports\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      // fill the dictionary\n      parseRawLines(text, true, function() {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    // load and parse l10n data (warning: global variables are used here)\n    xhrLoadText(href, function(response) {\n      gTextData += response; // mostly for debug\n\n      // parse *.properties text data into an l10n dictionary\n      parseProperties(response, function(data) {\n\n        // find attribute descriptions, if any\n        for (var key in data) {\n          var id, prop, index = key.lastIndexOf('.');\n          if (index > 0) { // an attribute has been specified\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else { // no attribute: assuming text content by default\n            id = key;\n            prop = gTextProp;\n          }\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n          gL10nData[id][prop] = data[key];\n        }\n\n        // trigger callback\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  // load and parse all resources for the specified locale\n  function loadLocale(lang, callback) {\n    // RFC 4646, section 2.1 states that language tags have to be treated as\n    // case-insensitive. Convert to lowercase for case-insensitive comparisons.\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n\n    // check all <link type=\"application/l10n\" href=\"...\" /> nodes\n    // and load the resource files\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      // we might have a pre-compiled dictionary instead\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n      // early way out\n      gReadyState = 'complete';\n      return;\n    }\n\n    // start the callback when all resources are loaded\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function() {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    // load all resource files\n    function L10nResourceLink(link) {\n      var href = link.href;\n      // Note: If |gAsyncResourceLoading| is false, then the following callbacks\n      // are synchronously called.\n      this.load = function(lang, callback) {\n        parseResource(href, lang, callback, function() {\n          console.warn(href + ' not found.');\n          // lang not found, used default resource instead\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          // Resource not loaded, but we still need to call the callback.\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  // clear all l10n data\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n    // TODO: clear all non predefined macros.\n    // There's no such macro /yet/ but we're planning to have some...\n  }\n\n\n  /**\n   * Get rules for plural forms (shared with JetPack), see:\n   * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n   * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\n   *\n   * @param {string} lang\n   *    locale (language) used.\n   *\n   * @return {Function}\n   *    returns a function that gives the plural form name for a given integer:\n   *       var fun = getPluralRules('en');\n   *       fun(1)    -> 'one'\n   *       fun(0)    -> 'other'\n   *       fun(1000) -> 'other'.\n   */\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    // utility functions for plural rules methods\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    // list of all plural rules methods:\n    // map an integer to the plural form name to use\n    var pluralRules = {\n      '0': function(n) {\n        return 'other';\n      },\n      '1': function(n) {\n        if ((isBetween((n % 100), 3, 10)))\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if ((isBetween((n % 100), 11, 99)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '2': function(n) {\n        if (n !== 0 && (n % 10) === 0)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '3': function(n) {\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '4': function(n) {\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '5': function(n) {\n        if ((isBetween(n, 0, 2)) && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '6': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '7': function(n) {\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '8': function(n) {\n        if ((isBetween(n, 3, 6)))\n          return 'few';\n        if ((isBetween(n, 7, 10)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '9': function(n) {\n        if (n === 0 || n != 1 && (isBetween((n % 100), 1, 19)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '10': function(n) {\n        if ((isBetween((n % 10), 2, 9)) && !(isBetween((n % 100), 11, 19)))\n          return 'few';\n        if ((n % 10) == 1 && !(isBetween((n % 100), 11, 19)))\n          return 'one';\n        return 'other';\n      },\n      '11': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if ((n % 10) === 0 ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 11, 14)))\n          return 'many';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '12': function(n) {\n        if ((isBetween(n, 2, 4)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '13': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if (n != 1 && (isBetween((n % 10), 0, 1)) ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 12, 14)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '14': function(n) {\n        if ((isBetween((n % 100), 3, 4)))\n          return 'few';\n        if ((n % 100) == 2)\n          return 'two';\n        if ((n % 100) == 1)\n          return 'one';\n        return 'other';\n      },\n      '15': function(n) {\n        if (n === 0 || (isBetween((n % 100), 2, 10)))\n          return 'few';\n        if ((isBetween((n % 100), 11, 19)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '16': function(n) {\n        if ((n % 10) == 1 && n != 11)\n          return 'one';\n        return 'other';\n      },\n      '17': function(n) {\n        if (n == 3)\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if (n == 6)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '18': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((isBetween(n, 0, 2)) && n !== 0 && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '19': function(n) {\n        if ((isBetween(n, 2, 10)))\n          return 'few';\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '20': function(n) {\n        if ((isBetween((n % 10), 3, 4) || ((n % 10) == 9)) && !(\n            isBetween((n % 100), 10, 19) ||\n            isBetween((n % 100), 70, 79) ||\n            isBetween((n % 100), 90, 99)\n            ))\n          return 'few';\n        if ((n % 1000000) === 0 && n !== 0)\n          return 'many';\n        if ((n % 10) == 2 && !isIn((n % 100), [12, 72, 92]))\n          return 'two';\n        if ((n % 10) == 1 && !isIn((n % 100), [11, 71, 91]))\n          return 'one';\n        return 'other';\n      },\n      '21': function(n) {\n        if (n === 0)\n          return 'zero';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '22': function(n) {\n        if ((isBetween(n, 0, 1)) || (isBetween(n, 11, 99)))\n          return 'one';\n        return 'other';\n      },\n      '23': function(n) {\n        if ((isBetween((n % 10), 1, 2)) || (n % 20) === 0)\n          return 'one';\n        return 'other';\n      },\n      '24': function(n) {\n        if ((isBetween(n, 3, 10) || isBetween(n, 13, 19)))\n          return 'few';\n        if (isIn(n, [2, 12]))\n          return 'two';\n        if (isIn(n, [1, 11]))\n          return 'one';\n        return 'other';\n      }\n    };\n\n    // return a function that gives the plural form name for a given integer\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function() { return 'other'; };\n    }\n    return pluralRules[index];\n  }\n\n  // pre-defined 'plural' macro\n  gMacros.plural = function(str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n))\n      return str;\n\n    // TODO: support other properties (l20n still doesn't...)\n    if (prop != gTextProp)\n      return str;\n\n    // initialize _pluralRules\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    // try to find a [zero|one|two] key if it's defined\n    if (n === 0 && (key + '[zero]') in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && (key + '[one]') in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && (key + '[two]') in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if ((key + index) in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if ((key + '[other]') in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n\n  /**\n   * l10n dictionary functions\n   */\n\n  // fetch an l10n object, warn if not found, apply `args' if possible\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n\n    /** This is where l10n expressions should be processed.\n      * The plan is to support C-style expressions from the l20n project;\n      * until then, only two kinds of simple expressions are supported:\n      *   {[ index ]} and {{ arguments }}.\n      */\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n\n  // replace {[macros]} with their values\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length)\n      return str;\n\n    // an index/macro has been found\n    // Note: at the moment, only one parameter is supported\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    // there's no macro parser yet: it has to be defined in gMacros\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n\n  // replace {{arguments}} with their values\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function(matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  // translate an HTML element\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id)\n      return;\n\n    // get the related l10n object\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    // translate element (TODO: security checks?)\n    if (data[gTextProp]) { // XXX\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        // this element has element children: replace the content of the first\n        // (non-empty) child textNode and clear other child textNodes\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        // if no (non-empty) textNode is found, insert a textNode before the\n        // first element child.\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  // webkit browsers don't currently support 'children' on SVG elements...\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n\n  // translate an HTML subtree\n  function translateFragment(element) {\n    element = element || document.documentElement;\n\n    // check all translatable children (= w/ a `data-l10n-id' attribute)\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    // translate element itself if necessary\n    translateElement(element);\n  }\n\n  return {\n    // get a localized string\n    get: function(key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n      if (index > 0) { // An attribute has been specified\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return '{{' + key + '}}';\n    },\n\n    // debug\n    getData: function() { return gL10nData; },\n    getText: function() { return gTextData; },\n\n    // get|set the document language\n    getLanguage: function() { return gLanguage; },\n    setLanguage: function(lang, callback) {\n      loadLocale(lang, function() {\n        if (callback)\n          callback();\n      });\n    },\n\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function() {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return (rtlList.indexOf(shortCode) >= 0) ? 'rtl' : 'ltr';\n    },\n\n    // translate an element or document fragment\n    translate: translateFragment,\n\n    // this can be used to prevent race conditions\n    getReadyState: function() { return gReadyState; },\n    ready: function(callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function() {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}) (window, document);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === \"find\") {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT,\n    };\n    scrollIntoView(element, spot, /* skipOverflowHiddenElements = */ true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"findhighlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      matches.push(matchIdx);\n    }\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.match(/\\S+/g);\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false,\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex]\n    );\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then(pdfPage => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            textContent => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              this._pageContents[i] = normalize(strBuf.join(\"\"));\n              extractTextCapability.resolve(i);\n            },\n            reason => {\n              console.error(\n                `Unable to get text content for page ${i + 1}`,\n                reason\n              );\n              // Page error -- assuming no text content.\n              this._pageContents[i] = \"\";\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n        this._pendingFindMatches[i] = true;\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n}\n\nexport { FindState, PDFFindController };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  waitOnEventOrTimeout,\n} from \"./ui_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      const onPagesLoaded = evt => {\n        this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n        this._isPagesLoaded = !!evt.pagesCount;\n      };\n      this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash(\n        /* checkNameddest = */ true\n      );\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.linkService.pagesCount\n      )\n    ) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occuring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state &&\n      window.history.state.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination && destination.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      this._maxUid = this._uid;\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (!perfEntry || perfEntry.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination && destination.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (\n      !(\n        Number.isInteger(page) &&\n        page > 0 &&\n        page <= this.linkService.pagesCount\n      ) ||\n      (checkNameddest && nameddest.length > 0)\n    ) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state &&\n        state.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n    if (this._uid > this._maxUid) {\n      this._maxUid = this._uid;\n    }\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.navigateTo(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.navigateTo` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const { nameddest } = parseQueryString(destHash);\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { PDFHistory, isDestHashesEqual, isDestArraysEqual };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  approximateFraction,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  getOutputScale,\n  NullL10n,\n  RendererType,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport {\n  createPromiseCapability,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"pdfjs-lib\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms - Turns on rendering of\n *   interactive form elements. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nconst MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || NullL10n;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.stats = pdfPage.stats;\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = (keepZoomLayer && this.zoomLayer) || null;\n    const currentAnnotationNode =\n      (keepAnnotations && this.annotationLayer && this.annotationLayer.div) ||\n      null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n      div.removeChild(node);\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation) {\n    this.scale = scale || this.scale;\n    // The rotation may be zero.\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform(this.canvas, true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n    this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width =\n      Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height =\n      Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    const cssTransform =\n      \"rotate(\" +\n      relativeRotation +\n      \"deg) \" +\n      \"scale(\" +\n      scaleX +\n      \",\" +\n      scaleY +\n      \")\";\n    target.style.transform = cssTransform;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        \"rotate(\" +\n        textAbsRotation +\n        \"deg) \" +\n        \"scale(\" +\n        scale +\n        \", \" +\n        scale +\n        \") \" +\n        \"translate(\" +\n        transX +\n        \", \" +\n        transY +\n        \")\";\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer && this.annotationLayer.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus\n      );\n    }\n    this.textLayer = textLayer;\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async error => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this.error = null;\n        return;\n      }\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.error = error;\n      this.stats = pdfPage.stats;\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(\n          div,\n          pdfPage,\n          this.imageResourcesPath,\n          this.renderInteractiveForms,\n          this.l10n\n        );\n      }\n      this.annotationLayer.render(this.viewport, \"display\");\n    }\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n\n      .get(\"page_canvas\", { page: this.id }, \"Page {{page}}\")\n      .then(msg => {\n        canvas.setAttribute(\"aria-label\", msg);\n      });\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n}\n\nexport { PDFPageView };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CLEANUP_TIMEOUT = 30000;\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (\n        views[previousPageIndex] &&\n        !this.isViewFinished(views[previousPageIndex])\n      ) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            console.error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { RenderingStates, PDFRenderingQueue };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFSinglePageViewer extends BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      // Since the pages are placed in a `DocumentFragment`, make sure that\n      // the current page becomes visible upon loading of the document.\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    // Since we only want to display *one* page at a time when using the\n    // `PDFSinglePageViewer`, we cannot append them to the `viewer` DOM element.\n    // Instead, they are placed in a `DocumentFragment`, and only the current\n    // page is displayed in the viewer (refer to `this._ensurePageViewVisible`).\n    return shadow(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  _resetView() {\n    super._resetView();\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n\n    const viewerNodes = this.viewer.childNodes;\n    switch (viewerNodes.length) {\n      case 0: // Should *only* occur on initial loading.\n        this.viewer.appendChild(pageView.div);\n        break;\n      case 1: // The normal page-switching case.\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\n            \"_ensurePageViewVisible: Unexpected previously visible page.\"\n          );\n        }\n        if (pageView === previousPageView) {\n          break; // The correct page is already visible.\n        }\n        // Switch visible pages, and reset the viewerContainer scroll position.\n        this._shadowViewer.appendChild(previousPageView.div);\n        this.viewer.appendChild(pageView.div);\n\n        this.container.scrollTop = 0;\n        break;\n      default:\n        throw new Error(\n          \"_ensurePageViewVisible: Only one page should be visible at a time.\"\n        );\n    }\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (pageNumber) {\n      // Ensure that `this._currentPageNumber` is correct.\n      this._setCurrentPageNumber(pageNumber);\n    }\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n    // Ensure that rendering always occurs, to avoid showing a blank page,\n    // even if the current position doesn't change when the page is scrolled.\n    this.update();\n\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n\n    // Since scrolling is tracked using `requestAnimationFrame`, update the\n    // scroll direction during the next `this._scrollUpdate` invocation.\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    // The Scroll/Spread modes are never used in `PDFSinglePageViewer`.\n    return shadow(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n}\n\nexport { PDFSinglePageViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  moveToEndOfArray,\n  NullL10n,\n  PresentationModeState,\n  RendererType,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\n\nconst DEFAULT_CACHE_SIZE = 10;\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {DownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [renderInteractiveForms] - Enables rendering of\n *   interactive form elements. The default is `false`.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   pages whose orientation differ from the first page upon printing. The\n *   default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n  this.push = function (view) {\n    const i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    // Prevent unnecessary re-rendering of all pages when the scale\n    // changes only because of limited numerical precision.\n    return true;\n  }\n  return false;\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n * @implements {IRenderableView}\n */\nclass BaseViewer {\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    this._name = this.constructor.name;\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageNumber: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    this._currentPageNumber = val;\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageLabel: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * @private\n   */\n  get _viewerElement() {\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  /**\n   * @private\n   */\n  _onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param pdfDocument {PDFDocument}\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount,\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this._buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._firstPageCapability.resolve(firstPdfPage);\n\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: this._viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            renderInteractiveForms: this.renderInteractiveForms,\n            renderer: this.renderer,\n            enableWebGL: this.enableWebGL,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n        if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this._onePageRenderedOrForceFetch().then(() => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                console.error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n          }\n        });\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize viewer\", reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    scrollIntoView(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        ((this.container.clientWidth - hPadding) / currentPage.width) *\n        currentPage.scale;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(\n            `${this._name}._setScale: \"${value}\" is an unknown zoom value.`\n          );\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(\n        `${this._name}.scrollPageIntoView: ` +\n          `\"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(\n          `${this._name}.scrollPageIntoView: ` +\n            `\"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages); // Run any class-specific update code.\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode\n      ? false\n      : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example in:\n   *  - `PDFSinglePageViewer`.\n   *  - `PDFViewer` with Presentation Mode active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    return { first: view, last: view, views: [view] };\n  }\n\n  _getVisiblePages() {\n    return getVisibleElements(\n      this.container,\n      this._pages,\n      true,\n      this._isScrollModeHorizontal\n    );\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(\n        `${this._name}.isPageVisible: \"${pageNumber}\" is out of bounds.`\n      );\n      return false;\n    }\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n    const promise = this.pdfDocument\n      .getPage(pageView.id)\n      .then(pdfPage => {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(pageView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for page view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(pageView);\n      });\n    this._pagesRequests.set(pageView, promise);\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal\n      ? this.scroll.right\n      : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead\n    );\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation,\n      };\n    });\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n    const isFirstPagePortrait = isPortraitOrientation(pagesOverview[0]);\n    return pagesOverview.map(function (size) {\n      if (isFirstPagePortrait === isPortraitOrientation(size)) {\n        return size;\n      }\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n    // Temporarily remove all the pages from the DOM.\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n}\n\nexport { BaseViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFViewer extends BaseViewer {\n  get _viewerElement() {\n    return shadow(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._isScrollModeHorizontal ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when Presentation Mode is active.\n      return this._getCurrentVisiblePage();\n    }\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n}\n\nexport { PDFViewer };\n"]},"metadata":{},"sourceType":"script"}