{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-upload\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.getData && _ctx.getData(...args))\n  }, \"Upload\"), _createElementVNode(\"div\", null, [_hoisted_3, _createTextVNode(\" response : \" + _toDisplayString(_ctx.response), 1 /* TEXT */)])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAa;gCACpBC,oBAAqB;EAAdC,IAAI,EAAC;AAAM;gCAIhBD,oBAAM;;;uBALZE,oBAQM,OARNC,UAQM,GAPFC,UAAqB,EACrBJ,oBAA4C;IAA/BK,OAAK,yCAAEC,qCAAO;KAAE,QAAM,GAEnCN,oBAGM,cAFJO,UAAM,iCACK,oBAAGD,aAAQ","names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_ctx","_hoisted_3"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n      <input type=\"file\" />\n      <button v-on:click=\"getData\">Upload</button>\n\n      <div>\n        <hr />\n        response : {{ response }}\n      </div>\n  </div>\n</template>\n\n<script>\n  // axios module import\n  import \"@uppy/core/dist/style.css\";\n  import Uppy from \"@uppy/core\";\n  import XHRUpload from \"@uppy/xhr-upload\";\n\n  export default {\n    name: \"Hello\",\n    components: {},\n    data() {\n      return {\n        users: [],\n        dep: '',\n      }\n    },\n    mothods: {\n        getData: function(){\n          var vm = this;\n          vm.dep = users.dep;\n        }\n    },\n    computed: {\n\n      uppy: () => new Uppy()\n        .use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false,\n      })\n\n      .on('upload-success', (file, response) => {\n        console.log(file.name, response)\n        const users = response.body\n      })\n        },\n        beforeDestroy () {\n         this.uppy.close({ reason: 'unmount' })\n      }\n  }\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module"}