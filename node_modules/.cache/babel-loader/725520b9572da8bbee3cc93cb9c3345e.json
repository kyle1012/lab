{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref, watch } from 'vue';\nexport default {\n  __name: 'BoardList',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const list = ref([]); //보여지는 리스트\n    const cache = ref([]); //리스트 전체\n\n    const listCunt = ref('5'); // 한 페이지에 노출될 게시글 개수\n\n    let currentPage = ref(0); //현재 페이지\n    let pageNum = 10; //페이징 갯수\n    const pageList = ref([]); // 보여지는 페이지 리스트\n    let totalPage = ref(0); //페이지 숫자\n\n    let isBtnFirst = ref(true);\n    let isBtnPrev = ref(true);\n    let isBtnNext = ref(true);\n    let isBtnLast = ref(true);\n    const currentPageListStart = () => {\n      return Math.floor(currentPage.value / pageNum) * pageNum;\n    };\n    // 페이징 \n    const paging = () => {\n      //보여지는 페이지 리셋\n      pageList.value = [];\n\n      //몇페이지 까지 있는지 확인\n      if (cache.value.length % listCunt.value == 0) {\n        totalPage.value = cache.value.length / listCunt.value - 1;\n      } else {\n        totalPage.value = Math.ceil(cache.value.length / listCunt.value) - 1;\n      }\n\n      //현재페이지 기준으로 페이징 숫자 넣기\n      let pageListStart = currentPageListStart();\n      for (let i = 0; i < pageNum; i++) {\n        if (totalPage.value >= pageListStart) {\n          pageList.value.push(pageListStart);\n          pageListStart++;\n        }\n      }\n    };\n    const getList = () => {\n      axios.post('http:10.1.30.202:5000/board').then(res => {\n        const json = res.data;\n        if (json.result == \"success\") {\n          cache.value = json.data;\n        }\n        list.value = []; //보여지는 게시물 리셋\n\n        let listIdx = listCunt.value * currentPage.value; // 보여질 게시물 index\n        for (let i = 0; i < listCunt.value; i++) {\n          //게시글 수 만큼 루프\n          if (cache.value.length > listIdx) {\n            //\n            list.value.push(cache.value[listIdx]);\n            listIdx++;\n          }\n        }\n        paging();\n        pageBtnCheck();\n      });\n    };\n    getList();\n\n    //페이지 번호 클릭시\n    const page = e => {\n      currentPage.value = e;\n      getList();\n    };\n\n    //리스트 갯수 수정시\n    watch(listCunt, (after, before) => {\n      currentPage.value = 0;\n      getList();\n    });\n    const pageBtnCheck = () => {\n      isBtnFirst.value = currentPage.value == 0 ? true : false;\n      isBtnPrev.value = currentPage.value == 0 ? true : false;\n      isBtnNext.value = currentPage.value == totalPage.value ? true : false;\n      isBtnLast.value = currentPage.value == totalPage.value ? true : false;\n    };\n    watch(currentPage, (after, before) => {\n      pageBtnCheck();\n    });\n\n    //페이지 처음/끝/이전/다음 버튼 클릭시\n    const pageArrow = e => {\n      let movePage = parseInt(currentPage.value);\n      if (e == 'first') {\n        //처음으로\n        movePage = 0;\n      } else if (e == 'last') {\n        //마지막\n        movePage = totalPage.value;\n      } else if (e == 'prev') {\n        //이전  \n        movePage = currentPageListStart() - 1;\n        movePage < 0 ? movePage = 0 : '';\n      } else {\n        //다음\n        movePage = currentPageListStart() + 10;\n        movePage >= totalPage.value ? movePage = totalPage.value : '';\n      }\n      page(movePage);\n    };\n    const __returned__ = {\n      list,\n      cache,\n      listCunt,\n      currentPage,\n      pageNum,\n      pageList,\n      totalPage,\n      isBtnFirst,\n      isBtnPrev,\n      isBtnNext,\n      isBtnLast,\n      currentPageListStart,\n      paging,\n      getList,\n      page,\n      pageBtnCheck,\n      pageArrow,\n      axios,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","ref","watch","list","cache","listCunt","currentPage","pageNum","pageList","totalPage","isBtnFirst","isBtnPrev","isBtnNext","isBtnLast","currentPageListStart","Math","floor","value","paging","length","ceil","pageListStart","i","push","getList","post","then","res","json","data","result","listIdx","pageBtnCheck","page","e","after","before","pageArrow","movePage","parseInt"],"sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n    <h1>게시판</h1>\n    <div class=\"boardWrap\">\n      <div class=\"boardTop\">\n  \n        <p>total {{cache.length}} post </p>\n        <select v-model=\"listCunt\">\n          <option value=\"5\" selected> 5개씩 보기</option>\n          <option value=\"10\"> 10개씩 보기</option>\n          <option value=\"20\"> 20개씩 보기</option>\n        </select>\n      </div>\n      <div>\n        <table class=\"table\">\n          <colgroup>\n            <col width=\"70\">\n            <col width=\"\">\n            <col width=\"120\">\n            <col width=\"120\">\n          </colgroup>\n          <thead>\n            <tr>\n              <th>번호</th>\n              <th>제목</th>\n              <th>작성자</th>\n              <th>등록일</th>\n            </tr>\n          </thead>\n          <tbody>\n            <template v-if=\"list.length > 0\">\n            <tr v-for=\"(item, idx) in list\" :key=\"`list-${idx}`\">\n              <td>{{item.idx}}</td>\n              <td>{{item.title}}</td>\n              <td>{{item.userName}}</td>\n              <td>{{item.regDate.substr(0,10)}}</td>\n            </tr>\n            </template>\n          </tbody>\n        </table>\n      </div>\n      <ul class=\"pagination\">\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnFirst}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('first')\">First</a></li>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnPrev}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('prev')\">Previous</a></li>\n        <template v-for=\"(item, index) in pageList\" :key=\"`list-${index}`\">\n          <li class=\"page-item\" :class=\"{'active' : item == currentPage}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"page(item)\">{{item+1}}</a></li>\n        </template>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnNext}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('next')\">Next</a></li>\n        <li class=\"page-item\" :class=\"{'disabled' : isBtnLast}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('last')\">Last</a></li>\n      </ul>\n      \n    </div>\n  </template>\n  <script setup>\n  import axios from 'axios'\n  import {ref, watch} from 'vue'\n  \n  const list = ref([]) //보여지는 리스트\n  const cache = ref([]) //리스트 전체\n  \n  const listCunt = ref('5') // 한 페이지에 노출될 게시글 개수\n  \n  let currentPage = ref(0) //현재 페이지\n  let pageNum = 10 //페이징 갯수\n  const pageList = ref([]) // 보여지는 페이지 리스트\n  let totalPage = ref(0); //페이지 숫자\n  \n  let isBtnFirst = ref(true); \n  let isBtnPrev = ref(true); \n  let isBtnNext = ref(true); \n  let isBtnLast = ref(true); \n  \n  const currentPageListStart = () =>{\n    return Math.floor(currentPage.value / pageNum) * pageNum\n  }\n  // 페이징 \n  const paging =() => {\n    //보여지는 페이지 리셋\n    pageList.value = [];\n  \n    //몇페이지 까지 있는지 확인\n    if(cache.value.length % listCunt.value == 0 ){\n      totalPage.value = (cache.value.length / listCunt.value) -1\n    } else{\n      totalPage.value =  Math.ceil(cache.value.length / listCunt.value) -1\n    }\n  \n    //현재페이지 기준으로 페이징 숫자 넣기\n    let pageListStart = currentPageListStart()\n    for(let i= 0; i< pageNum; i++){   \n      if(totalPage.value >= pageListStart){\n        pageList.value.push(pageListStart)\n        pageListStart ++;\n      }\n    }\n  }\n  \n  \n  const getList = () =>{\n    \n    axios.post('http:10.1.30.202:5000/board')\n    .then(res => {\n      \n      const json = res.data\n      if(json.result == \"success\"){\n        cache.value = json.data\n      }\n      list.value = [] //보여지는 게시물 리셋\n      \n      let listIdx = (listCunt.value * (currentPage.value )); // 보여질 게시물 index\n      for(let i= 0; i < listCunt.value; i++ ){       //게시글 수 만큼 루프\n        if(cache.value.length > listIdx) { //\n          list.value.push(cache.value[listIdx])\n          listIdx ++;\n        }\n      }\n      paging()\n      pageBtnCheck()\n  \n    })  \n  }\n  \n  getList()\n  \n  //페이지 번호 클릭시\n  const page = (e) =>{\n    currentPage.value = e  \n    getList()\n  }\n  \n  //리스트 갯수 수정시\n  watch(listCunt,(after, before)  =>{\n    currentPage.value = 0\n    getList()\n  })\n  \n  const pageBtnCheck = () =>{\n    isBtnFirst.value = currentPage.value == 0 ? true : false\n    isBtnPrev.value = currentPage.value == 0 ? true : false\n    \n    isBtnNext.value = currentPage.value == totalPage.value ? true : false\n    isBtnLast.value = currentPage.value == totalPage.value ? true : false\n  }\n  \n  watch(currentPage,(after, before)  =>{\n    pageBtnCheck()\n  })\n  \n  \n  //페이지 처음/끝/이전/다음 버튼 클릭시\n  const pageArrow = (e) => {\n    let movePage = parseInt(currentPage.value)\n    if(e == 'first'){ //처음으로\n      movePage = 0\n    } else if(e == 'last'){    //마지막\n      movePage = totalPage.value\n    } else if(e == 'prev'){    //이전  \n      movePage = currentPageListStart() - 1    \n      movePage < 0 ? movePage = 0 : ''\n    } else{//다음\n      movePage = currentPageListStart() + 10\n      movePage >= totalPage.value ? movePage = totalPage.value : ''\n    }\n    page(movePage)\n  }\n\n  \n  </script>"]},"metadata":{},"sourceType":"module"}