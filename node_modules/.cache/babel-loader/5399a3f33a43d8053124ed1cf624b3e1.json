{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    //변수생성\n    return {\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      listData: [],\n      searchData: [],\n      search_length: '',\n      dataPerPage: 15,\n      curPageNum: 1,\n      search: '',\n      sort: '',\n      peo: '',\n      dep: '',\n      doc: '',\n      drawer: false,\n      group: null\n    };\n  },\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\").then(res => {\n        this.list = res.data;\n        this.listData = res.data;\n        console.log(res.data);\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    Reset() {\n      this.$router.go();\n    },\n    DBsearch() {\n      const url = 'http://10.1.30.202:5000/search';\n      const data = JSON.stringify({\n        db_doc: this.doc,\n        db_user: this.peo,\n        db_sort: this.sort,\n        db_dep: this.dep\n      });\n      axios.post(url, data, {\n        headers: {\n          \"Content-Type\": `application/json`\n        }\n      }).then(res => {\n        console.log(res.data);\n        var search_data = res.data;\n        this.listData = search_data;\n        //sessionStorage.setItem(\"store\", this.listData);\n        //console.log(sessionStorage.store)\n      }).catch(err => {\n        console.log(err);\n        alert(\"검색된 데이터가 없습니다.\");\n      });\n    },\n    fnView(index) {\n      if (index[1] == \"IP신청서\") {\n        this.$router.push({\n          path: './BoardDetail',\n          query: index\n        });\n      } else if (index[1] == \"인터넷차단해제신청서\") {\n        this.$router.push({\n          path: './BoardDetail_int',\n          query: index\n        });\n      } else if (index[1] == \"방화벽정책신청서\") {\n        this.$router.push({\n          path: './BoardDetail_firewall',\n          query: index\n        });\n      } else if (index[1] == \"계정신청서\") {\n        this.$router.push({\n          path: './BoardDetail_account',\n          query: index\n        });\n      }\n    },\n    preview(index) {\n      if (index[1] == \"IP신청서\") {\n        var ip_file_path = index[22];\n        var ip_file_name = ip_file_path.substr(11);\n        window.open(ip_file_name, '_blank');\n      } else if (index[1] == \"인터넷차단해제신청서\") {\n        var ip_file_path = index[22];\n        var ip_file_name = ip_file_path.substr(11);\n        window.open(ip_file_name, '_blank');\n      } else if (index[1] == \"방화벽정책신청서\") {\n        var ip_file_path = index[22];\n        var ip_file_name = ip_file_path.substr(11);\n        window.open(ip_file_name, '_blank');\n      } else if (index[1] == \"계정신청서\") {\n        var ip_file_path = index[22];\n        var ip_file_name = ip_file_path.substr(11);\n        window.open(ip_file_name, '_blank');\n      }\n    }\n  },\n  computed: {\n    startOffset() {\n      return (this.curPageNum - 1) * this.dataPerPage;\n    },\n    endOffset() {\n      return this.startOffset + this.dataPerPage;\n    },\n    numOfPages() {\n      return Math.ceil(this.searchData.length / this.dataPerPage);\n    },\n    callist() {\n      const searchWord = this.search.toLowerCase();\n      this.searchData = this.listData.filter(data => {\n        let flag = false;\n        data.forEach(data2 => {\n          if (data2 && data2.toString().toLowerCase().includes(searchWord)) {\n            flag = true;\n          }\n        });\n        return flag;\n      }).slice(0);\n      return this.searchData.slice(this.startOffset, this.endOffset);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","components","data","list","no","listData","searchData","search_length","dataPerPage","curPageNum","search","sort","peo","dep","doc","drawer","group","mounted","fnGetList","methods","get","then","res","console","log","catch","err","message","indexOf","alert","Reset","$router","go","DBsearch","url","JSON","stringify","db_doc","db_user","db_sort","db_dep","post","headers","search_data","fnView","index","push","path","query","preview","ip_file_path","ip_file_name","substr","window","open","computed","startOffset","endOffset","numOfPages","Math","ceil","length","callist","searchWord","toLowerCase","filter","flag","forEach","data2","toString","includes","slice"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n        <v-app>\n<v-app-bar\ncolor=\"deep-purple\"\n      dark>\n<v-app-bar-nav-icon @click=\"drawer = true\"></v-app-bar-nav-icon>\n  <v-toolbar-title><router-link to=\"/home\">LAB V.1.0</router-link></v-toolbar-title>\n  <v-spacer></v-spacer>\n  <v-spacer></v-spacer>\n  <v-spacer></v-spacer>\n  <v-spacer></v-spacer>\n  <v-spacer></v-spacer>\n  <v-icon>mdi-magnify</v-icon>\n  <v-text-field\n            label=\"Search Data..\"\n            outlined\n            clearable\n            v-model=\"search\"\n          ></v-text-field>\n        <v-spacer></v-spacer>\n        {{ this.$store.getters.getUserInfo }}\n    </v-app-bar>\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      temporary\n    >\n    <v-list\n        nav\n        dense\n      >\n        <v-list-item>\n          <v-list-item-title>IP신청서</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title>인터넷차단해제신청서</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title>방화벽정책신청서</v-list-item-title>\n        </v-list-item>\n        <v-list-item>\n          <v-list-item-title>계정신청서</v-list-item-title>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n    <v-container>\n      <v-layout\n    >\n    <v-row>\n      <v-col cols=\"2.5\"><v-text-field label=\"분류\" v-model=\"sort\" placeholder=\"분류\" outlined clearable></v-text-field></v-col>\n      <v-col cols=\"2.5\"><v-text-field label=\"기안자\" v-model=\"peo\" placeholder=\"기안자\" outlined clearable></v-text-field></v-col>\n      <v-col cols=\"2.5\"><v-text-field label=\"부서\" v-model=\"dep\" placeholder=\"부서\" outlined clearable></v-text-field></v-col>\n      <v-col cols=\"2.5\"><v-text-field label=\"기안번호\" v-model=\"doc\" placeholder=\"기안번호\" outlined clearable></v-text-field></v-col>\n      <v-col cols=\"1\"><button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"DBsearch\">검색</button></v-col>\n      <v-col cols=\"1\"><button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"Reset\">초기화</button></v-col>\n    </v-row>\n    </v-layout>\n  <div class=\"ui icon input\" style=\"width: 100%\">\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>  \n        <th>분류</th>\n        <th>구분</th>\n        <th>기안자</th>\n        <th>부서</th>\n        <th>기안일</th>\n        <th>기안번호</th>\n        <th>미리보기</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in callist\" :key=\"idx\">\n          <td><a @click=\"fnView(row)\">{{ row[1] }}</a></td>\n          <td>{{ row[3] }}</td>\n          <td>{{ row[5] }}</td>\n          <td>{{ row[9] }}</td>\n          <td>{{ row[20] }}</td>\n          <td>{{ row[19] }}</td>\n          <td>    <v-icon\n      large\n      @click=\"preview(row)\"\n      color=\"orange darken-2\"\n    >\n      mdi-arrow-up-bold-box-outline\n    </v-icon></td>\n        </tr>\n      </tbody>\n    </table>\n    <v-pagination\n        v-model=\"curPageNum\"\n        :length=\"numOfPages\">\n      </v-pagination>\n  </div>\n</v-container>\n</v-app>\n</template>\n\n<script>\nimport axios from 'axios'\n\n\n\nexport default {\n  components: {\n  },\n  data() { //변수생성\n    return {\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      listData: [],\n      searchData: [],\n      search_length : '',\n      dataPerPage: 15,\n      curPageNum: 1,\n      search: '',\n      sort: '',\n      peo: '',\n      dep: '',\n      doc: '',\n      drawer: false,\n      group: null,\n    }\n  },\n  mounted() {\n  this.fnGetList()\n},\n  methods: {\n      fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\")\n      .then((res) => {      \n        this.list = res.data\n        this.listData = res.data\n        console.log(res.data)\n\n\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    },\n    Reset(){\n      this.$router.go()\n    },\n    DBsearch() {\n      const url = 'http://10.1.30.202:5000/search';\n      const data = JSON.stringify({\n        db_doc:this.doc,\n        db_user:this.peo,\n        db_sort:this.sort,\n        db_dep:this.dep,\n      })\n      axios.post(url, data, {\n        headers: {\n            \"Content-Type\": `application/json`,\n          },\n      })\n      .then((res) => {      \n          console.log(res.data)\n          var search_data = res.data\n          this.listData = search_data\n          //sessionStorage.setItem(\"store\", this.listData);\n          //console.log(sessionStorage.store)\n\n\n      }).catch((err) => {\n        console.log(err)\n        alert(\"검색된 데이터가 없습니다.\")\n      })\n    },\n    fnView(index) {\n          if(index[1] == \"IP신청서\"){\n\n          this.$router.push({\n          path: './BoardDetail',\n          query: index\n    })\n}\n      else if(index[1] == \"인터넷차단해제신청서\"){\n          this.$router.push({\n          path: './BoardDetail_int',\n          query: index\n    })\n      }\n      else if(index[1] == \"방화벽정책신청서\"){\n          this.$router.push({\n          path: './BoardDetail_firewall',\n          query: index\n    })\n      }\n      else if(index[1] == \"계정신청서\"){\n          this.$router.push({\n          path: './BoardDetail_account',\n          query: index\n    })\n      }\n  },\n   preview(index){\n          if(index[1] == \"IP신청서\"){\n            var ip_file_path = index[22]\n            var ip_file_name = ip_file_path.substr(11)\n            window.open(ip_file_name, '_blank')\n          }\n      else if(index[1] == \"인터넷차단해제신청서\"){\n            var ip_file_path = index[22]\n            var ip_file_name = ip_file_path.substr(11)\n            window.open(ip_file_name, '_blank')\n      }\n      else if(index[1] == \"방화벽정책신청서\"){\n            var ip_file_path = index[22]\n            var ip_file_name = ip_file_path.substr(11)\n            window.open(ip_file_name, '_blank')\n      }\n      else if(index[1] == \"계정신청서\"){\n            var ip_file_path = index[22]\n            var ip_file_name = ip_file_path.substr(11)\n            window.open(ip_file_name, '_blank')\n      }\n\n   }\n\n  },\n  computed:{\n    startOffset() {\n        return ((this.curPageNum - 1) * this.dataPerPage);\n      },\n      endOffset() {\n        return (this.startOffset + this.dataPerPage);\n      },\n      numOfPages() {\n        return Math.ceil(this.searchData.length / this.dataPerPage);\n      },\n      callist(){\n        const searchWord = this.search.toLowerCase();\n\nthis.searchData = this.listData.filter((data) => {\n  let flag = false;\n  \n    data.forEach((data2) => {\n        if (data2 && data2.toString().toLowerCase().includes(searchWord)) {\n      flag = true;\n    }\n    });\n\n    return flag;\n}).slice(0);\nreturn this.searchData.slice(this.startOffset, this.endOffset);\n      }\n    }\n    }\n</script>\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}