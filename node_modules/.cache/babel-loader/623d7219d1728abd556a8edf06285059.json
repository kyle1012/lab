{"ast":null,"code":"import Uppy from '@uppy/core';\nimport FileInput from '@uppy/file-input';\nimport XHRUpload from '@uppy/xhr-upload';\nimport ProgressBar from '@uppy/progress-bar';\nconst uppy = new Uppy({\n  debug: true,\n  autoProceed: true\n});\nuppy.use(FileInput, {\n  target: null,\n  pretty: true,\n  inputName: 'file',\n  locale: {}\n});\nuppy.use(ProgressBar, {\n  target: 'body',\n  fixed: true\n});\nuppy.use(XHRUpload, {\n  endpoint: 'http://10.1.30.202:5000/upload',\n  formData: true,\n  fieldName: 'file'\n});\n\n// And display uploaded files\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response);\n  const httpbody = response.body;\n  document.querySelector('.uploaded-files ol').appendChild(li);\n});\nexport default {\n  name: \"App\",\n  components: {},\n  data: () => {\n    return {\n      uppy\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  }\n};","map":{"version":3,"mappings":"AAeA,OAAOA,IAAG,MAAO,YAAW;AAC5B,OAAOC,SAAQ,MAAO,kBAAiB;AACvC,OAAOC,SAAQ,MAAO,kBAAiB;AACvC,OAAOC,WAAU,MAAO,oBAAmB;AAE3C,MAAMC,IAAG,GAAI,IAAIJ,IAAI,CAAC;EAAEK,KAAK,EAAE,IAAI;EAAEC,WAAW,EAAE;AAAK,CAAC;AACxDF,IAAI,CAACG,GAAG,CAACN,SAAS,EAAE;EAClBO,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE,MAAM;EACjBC,MAAM,EAAE,CACR;AACF,CAAC;AACDP,IAAI,CAACG,GAAG,CAACJ,WAAW,EAAE;EACpBK,MAAM,EAAE,MAAM;EACdI,KAAK,EAAE;AACT,CAAC;AACDR,IAAI,CAACG,GAAG,CAACL,SAAS,EAAE;EAClBW,QAAQ,EAAE,gCAAgC;EAC1CC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE;AACb,CAAC;;AAED;AACAX,IAAI,CAACY,EAAE,CAAC,gBAAgB,EAAE,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC5CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,IAAI,EAAEH,QAAQ;EAC/B,MAAMI,QAAO,GAAIJ,QAAQ,CAACK,IAAG;EAE7BC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAACC,WAAW,CAACC,EAAE,CAAC;AAAA,CAAC;AAC7D,eAAe;EACfN,IAAI,EAAE,KAAK;EACXO,UAAU,EAAE,CACZ,CAAC;EACDC,IAAI,EAAE,MAAM;IACV,OAAO;MACLzB;IACF,CAAC;EACH,CAAC;EACD0B,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;EACF,CAAC;EACDC,aAAa,GAAG;IACd,IAAI,CAAC3B,IAAI,CAAC4B,KAAK,EAAE;EACnB;AACF","names":["Uppy","FileInput","XHRUpload","ProgressBar","uppy","debug","autoProceed","use","target","pretty","inputName","locale","fixed","endpoint","formData","fieldName","on","file","response","console","log","name","httpbody","body","document","querySelector","appendChild","li","components","data","computed","beforeUnmount","close"],"sourceRoot":"","sources":["/lab/src/components/test.vue"],"sourcesContent":["<template>\n    <div class=\"Uppy\"></div>\n    <h5>Uppy was not loaded — slow connection, unsupported browser, weird JS error on a page — but the upload still works, because HTML is cool like that</h5>\n    <input type=\"file\" name=\"file\">\n    <button type=\"submit\">Fallback Form Upload</button>\n\n<div class=\"UppyProgressBar\"></div>\n\n<!-- Uploaded files list -->\n<div class=\"uploaded-files\">\n  <h5>Uploaded files:</h5>\n  <ol></ol>\n</div>\n</template>\n<script>\nimport Uppy from '@uppy/core'\nimport FileInput from '@uppy/file-input'\nimport XHRUpload from '@uppy/xhr-upload'\nimport ProgressBar from '@uppy/progress-bar'\n\nconst uppy = new Uppy({ debug: true, autoProceed: true })\nuppy.use(FileInput, {\n  target: null,\n  pretty: true,\n  inputName: 'file',\n  locale: {\n  },\n})\nuppy.use(ProgressBar, {\n  target: 'body',\n  fixed: true,\n})\nuppy.use(XHRUpload, {\n  endpoint: 'http://10.1.30.202:5000/upload',\n  formData: true,\n  fieldName: 'file',\n})\n\n// And display uploaded files\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpbody = response.body\n\n  document.querySelector('.uploaded-files ol').appendChild(li)})\n  export default {\n  name: \"App\",\n  components: {\n  },\n  data: () => {\n    return {\n      uppy,\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}