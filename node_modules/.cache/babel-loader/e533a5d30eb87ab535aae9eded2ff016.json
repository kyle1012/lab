{"ast":null,"code":"'use strict';\n\nlet _Symbol$for;\nfunction _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nimport fetchWithNetworkError from '@uppy/utils/lib/fetchWithNetworkError';\nimport ErrorWithCause from '@uppy/utils/lib/ErrorWithCause';\nimport AuthError from './AuthError.js';\nconst packageJson = {\n  \"version\": \"3.0.2\"\n}; // Remove the trailing slash so we can always safely append /xyz.\n\nfunction stripSlash(url) {\n  return url.replace(/\\/$/, '');\n}\nasync function handleJSONResponse(res) {\n  if (res.status === 401) {\n    throw new AuthError();\n  }\n  const jsonPromise = res.json();\n  if (res.status < 200 || res.status > 300) {\n    let errMsg = `Failed request with status: ${res.status}. ${res.statusText}`;\n    try {\n      const errData = await jsonPromise;\n      errMsg = errData.message ? `${errMsg} message: ${errData.message}` : errMsg;\n      errMsg = errData.requestId ? `${errMsg} request-Id: ${errData.requestId}` : errMsg;\n    } finally {\n      // eslint-disable-next-line no-unsafe-finally\n      throw new Error(errMsg);\n    }\n  }\n  return jsonPromise;\n}\nvar _companionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionHeaders\");\nvar _getPostResponseFunc = /*#__PURE__*/_classPrivateFieldLooseKey(\"getPostResponseFunc\");\nvar _getUrl = /*#__PURE__*/_classPrivateFieldLooseKey(\"getUrl\");\nvar _errorHandler = /*#__PURE__*/_classPrivateFieldLooseKey(\"errorHandler\");\n_Symbol$for = Symbol.for('uppy test: getCompanionHeaders');\nexport default class RequestClient {\n  constructor(uppy, opts) {\n    Object.defineProperty(this, _errorHandler, {\n      value: _errorHandler2\n    });\n    Object.defineProperty(this, _getUrl, {\n      value: _getUrl2\n    });\n    Object.defineProperty(this, _companionHeaders, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getPostResponseFunc, {\n      writable: true,\n      value: skip => response => skip ? response : this.onReceiveResponse(response)\n    });\n    this.uppy = uppy;\n    this.opts = opts;\n    this.onReceiveResponse = this.onReceiveResponse.bind(this);\n    this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token'];\n    this.preflightDone = false;\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = opts == null ? void 0 : opts.companionHeaders;\n  }\n  setCompanionHeaders(headers) {\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = headers;\n  }\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders];\n  }\n  get hostname() {\n    const {\n      companion\n    } = this.uppy.getState();\n    const host = this.opts.companionUrl;\n    return stripSlash(companion && companion[host] ? companion[host] : host);\n  }\n  headers() {\n    return Promise.resolve({\n      ...RequestClient.defaultHeaders,\n      ..._classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders]\n    });\n  }\n  onReceiveResponse(response) {\n    const state = this.uppy.getState();\n    const companion = state.companion || {};\n    const host = this.opts.companionUrl;\n    const {\n      headers\n    } = response; // Store the self-identified domain name for the Companion instance we just hit.\n\n    if (headers.has('i-am') && headers.get('i-am') !== companion[host]) {\n      this.uppy.setState({\n        companion: {\n          ...companion,\n          [host]: headers.get('i-am')\n        }\n      });\n    }\n    return response;\n  }\n  preflight(path) {\n    if (this.preflightDone) {\n      return Promise.resolve(this.allowedHeaders.slice());\n    }\n    return fetch(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method: 'OPTIONS'\n    }).then(response => {\n      if (response.headers.has('access-control-allow-headers')) {\n        this.allowedHeaders = response.headers.get('access-control-allow-headers').split(',').map(headerName => headerName.trim().toLowerCase());\n      }\n      this.preflightDone = true;\n      return this.allowedHeaders.slice();\n    }).catch(err => {\n      this.uppy.log(`[CompanionClient] unable to make preflight request ${err}`, 'warning');\n      this.preflightDone = true;\n      return this.allowedHeaders.slice();\n    });\n  }\n  preflightAndHeaders(path) {\n    return Promise.all([this.preflight(path), this.headers()]).then(_ref => {\n      let [allowedHeaders, headers] = _ref;\n      // filter to keep only allowed Headers\n      Object.keys(headers).forEach(header => {\n        if (!allowedHeaders.includes(header.toLowerCase())) {\n          this.uppy.log(`[CompanionClient] excluding disallowed header ${header}`);\n          delete headers[header]; // eslint-disable-line no-param-reassign\n        }\n      });\n\n      return headers;\n    });\n  }\n  get(path, skipPostResponse) {\n    const method = 'get';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin'\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n  post(path, data, skipPostResponse) {\n    const method = 'post';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin',\n      body: JSON.stringify(data)\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n  delete(path, data, skipPostResponse) {\n    const method = 'delete';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(`${this.hostname}/${path}`, {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin',\n      body: data ? JSON.stringify(data) : null\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n}\nfunction _getUrl2(url) {\n  if (/^(https?:|)\\/\\//.test(url)) {\n    return url;\n  }\n  return `${this.hostname}/${url}`;\n}\nfunction _errorHandler2(method, path) {\n  return err => {\n    var _err;\n    if (!((_err = err) != null && _err.isAuthError)) {\n      // eslint-disable-next-line no-param-reassign\n      err = new ErrorWithCause(`Could not ${method} ${_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path)}`, {\n        cause: err\n      });\n    }\n    return Promise.reject(err);\n  };\n}\nRequestClient.VERSION = packageJson.version;\nRequestClient.defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  'Uppy-Versions': `@uppy/companion-client=${RequestClient.VERSION}`\n};","map":{"version":3,"names":["_Symbol$for","_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","fetchWithNetworkError","ErrorWithCause","AuthError","packageJson","stripSlash","url","replace","handleJSONResponse","res","status","jsonPromise","json","errMsg","statusText","errData","message","requestId","Error","_companionHeaders","_getPostResponseFunc","_getUrl","_errorHandler","Symbol","for","RequestClient","constructor","uppy","opts","defineProperty","value","_errorHandler2","_getUrl2","writable","skip","response","onReceiveResponse","bind","allowedHeaders","preflightDone","companionHeaders","setCompanionHeaders","headers","hostname","companion","getState","host","companionUrl","Promise","resolve","defaultHeaders","state","has","get","setState","preflight","path","slice","fetch","method","then","split","map","headerName","trim","toLowerCase","catch","err","log","preflightAndHeaders","all","_ref","keys","forEach","header","includes","skipPostResponse","credentials","companionCookiesRule","post","data","body","JSON","stringify","delete","test","_err","isAuthError","cause","reject","VERSION","version","Accept"],"sources":["/lab/node_modules/@uppy/companion-client/lib/RequestClient.js"],"sourcesContent":["'use strict';\n\nlet _Symbol$for;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nimport fetchWithNetworkError from '@uppy/utils/lib/fetchWithNetworkError';\nimport ErrorWithCause from '@uppy/utils/lib/ErrorWithCause';\nimport AuthError from './AuthError.js';\nconst packageJson = {\n  \"version\": \"3.0.2\"\n}; // Remove the trailing slash so we can always safely append /xyz.\n\nfunction stripSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nasync function handleJSONResponse(res) {\n  if (res.status === 401) {\n    throw new AuthError();\n  }\n\n  const jsonPromise = res.json();\n\n  if (res.status < 200 || res.status > 300) {\n    let errMsg = `Failed request with status: ${res.status}. ${res.statusText}`;\n\n    try {\n      const errData = await jsonPromise;\n      errMsg = errData.message ? `${errMsg} message: ${errData.message}` : errMsg;\n      errMsg = errData.requestId ? `${errMsg} request-Id: ${errData.requestId}` : errMsg;\n    } finally {\n      // eslint-disable-next-line no-unsafe-finally\n      throw new Error(errMsg);\n    }\n  }\n\n  return jsonPromise;\n}\n\nvar _companionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionHeaders\");\n\nvar _getPostResponseFunc = /*#__PURE__*/_classPrivateFieldLooseKey(\"getPostResponseFunc\");\n\nvar _getUrl = /*#__PURE__*/_classPrivateFieldLooseKey(\"getUrl\");\n\nvar _errorHandler = /*#__PURE__*/_classPrivateFieldLooseKey(\"errorHandler\");\n\n_Symbol$for = Symbol.for('uppy test: getCompanionHeaders');\nexport default class RequestClient {\n  constructor(uppy, opts) {\n    Object.defineProperty(this, _errorHandler, {\n      value: _errorHandler2\n    });\n    Object.defineProperty(this, _getUrl, {\n      value: _getUrl2\n    });\n    Object.defineProperty(this, _companionHeaders, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getPostResponseFunc, {\n      writable: true,\n      value: skip => response => skip ? response : this.onReceiveResponse(response)\n    });\n    this.uppy = uppy;\n    this.opts = opts;\n    this.onReceiveResponse = this.onReceiveResponse.bind(this);\n    this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token'];\n    this.preflightDone = false;\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = opts == null ? void 0 : opts.companionHeaders;\n  }\n\n  setCompanionHeaders(headers) {\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = headers;\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders];\n  }\n\n  get hostname() {\n    const {\n      companion\n    } = this.uppy.getState();\n    const host = this.opts.companionUrl;\n    return stripSlash(companion && companion[host] ? companion[host] : host);\n  }\n\n  headers() {\n    return Promise.resolve({ ...RequestClient.defaultHeaders,\n      ..._classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders]\n    });\n  }\n\n  onReceiveResponse(response) {\n    const state = this.uppy.getState();\n    const companion = state.companion || {};\n    const host = this.opts.companionUrl;\n    const {\n      headers\n    } = response; // Store the self-identified domain name for the Companion instance we just hit.\n\n    if (headers.has('i-am') && headers.get('i-am') !== companion[host]) {\n      this.uppy.setState({\n        companion: { ...companion,\n          [host]: headers.get('i-am')\n        }\n      });\n    }\n\n    return response;\n  }\n\n  preflight(path) {\n    if (this.preflightDone) {\n      return Promise.resolve(this.allowedHeaders.slice());\n    }\n\n    return fetch(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method: 'OPTIONS'\n    }).then(response => {\n      if (response.headers.has('access-control-allow-headers')) {\n        this.allowedHeaders = response.headers.get('access-control-allow-headers').split(',').map(headerName => headerName.trim().toLowerCase());\n      }\n\n      this.preflightDone = true;\n      return this.allowedHeaders.slice();\n    }).catch(err => {\n      this.uppy.log(`[CompanionClient] unable to make preflight request ${err}`, 'warning');\n      this.preflightDone = true;\n      return this.allowedHeaders.slice();\n    });\n  }\n\n  preflightAndHeaders(path) {\n    return Promise.all([this.preflight(path), this.headers()]).then(_ref => {\n      let [allowedHeaders, headers] = _ref;\n      // filter to keep only allowed Headers\n      Object.keys(headers).forEach(header => {\n        if (!allowedHeaders.includes(header.toLowerCase())) {\n          this.uppy.log(`[CompanionClient] excluding disallowed header ${header}`);\n          delete headers[header]; // eslint-disable-line no-param-reassign\n        }\n      });\n      return headers;\n    });\n  }\n\n  get(path, skipPostResponse) {\n    const method = 'get';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin'\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n\n  post(path, data, skipPostResponse) {\n    const method = 'post';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin',\n      body: JSON.stringify(data)\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n\n  delete(path, data, skipPostResponse) {\n    const method = 'delete';\n    return this.preflightAndHeaders(path).then(headers => fetchWithNetworkError(`${this.hostname}/${path}`, {\n      method,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin',\n      body: data ? JSON.stringify(data) : null\n    })).then(_classPrivateFieldLooseBase(this, _getPostResponseFunc)[_getPostResponseFunc](skipPostResponse)).then(handleJSONResponse).catch(_classPrivateFieldLooseBase(this, _errorHandler)[_errorHandler](method, path));\n  }\n\n}\n\nfunction _getUrl2(url) {\n  if (/^(https?:|)\\/\\//.test(url)) {\n    return url;\n  }\n\n  return `${this.hostname}/${url}`;\n}\n\nfunction _errorHandler2(method, path) {\n  return err => {\n    var _err;\n\n    if (!((_err = err) != null && _err.isAuthError)) {\n      // eslint-disable-next-line no-param-reassign\n      err = new ErrorWithCause(`Could not ${method} ${_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path)}`, {\n        cause: err\n      });\n    }\n\n    return Promise.reject(err);\n  };\n}\n\nRequestClient.VERSION = packageJson.version;\nRequestClient.defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  'Uppy-Versions': `@uppy/companion-client=${RequestClient.VERSION}`\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}