{"ast":null,"code":"import { Dashboard } from \"@uppy/vue\";\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nconst uppy = new Uppy({\n  metaFields: [{\n    id: \"name\",\n    name: \"Name\",\n    placeholder: \"file name\"\n  }]\n});\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n  autoProceed: false\n});\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response);\n  const httpbody = response.body;\n});\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard\n  },\n  data: () => {\n    return {\n      uppy\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  }\n};","map":{"version":3,"mappings":"AAOA,SAASA,SAAQ,QAAS,WAAW;AAErC,OAAO,2BAA2B;AAClC,OAAO,gCAAgC;AACvC,OAAO,6BAA6B;AACpC,OAAO,mCAAmC;AAE1C,OAAOC,IAAG,MAAO,YAAY;AAC7B,OAAOC,SAAQ,MAAO,kBAAkB;AACxC,MAAMC,IAAG,GAAI,IAAIF,IAAI,CAAC;EACpBG,UAAU,EAAE,CACV;IAAEC,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAY;AAEzD,CAAC,CAAC;AAEFJ,IAAI,CAACK,GAAG,CAACN,SAAS,EAAE;EAClBO,QAAQ,EAAE,gCAAgC;EAC1CC,SAAS,EAAE,MAAM;EACjBC,MAAM,EAAE,IAAI;EACRC,WAAW,EAAE;AACb,EAEL;AAEDT,IAAI,CAACU,EAAE,CAAC,gBAAgB,EAAE,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC5CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACR,IAAI,EAAES,QAAQ;EAC/B,MAAMG,QAAO,GAAIH,QAAQ,CAACI,IAAG;AAC/B,CAAC;AACD,eAAe;EACbb,IAAI,EAAE,OAAO;EACbc,UAAU,EAAE;IACVpB;EACF,CAAC;EACDqB,IAAI,EAAE,MAAM;IACV,OAAO;MACLlB;IACF,CAAC;EACH,CAAC;EACDmB,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;EACF,CAAC;EACDC,aAAa,GAAG;IACd,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE;EACnB;AACF,CAAC","names":["Dashboard","Uppy","XHRUpload","uppy","metaFields","id","name","placeholder","use","endpoint","fieldName","bundle","autoProceed","on","file","response","console","log","httpbody","body","components","data","computed","beforeUnmount","close"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    {{httpbody}}\n  </div>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nconst uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" }\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpbody = response.body\n})\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard,\n  },\n  data: () => {\n    return {\n      uppy,\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}