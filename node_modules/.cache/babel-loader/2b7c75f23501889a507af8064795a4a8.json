{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  components: {},\n  data() {\n    //변수생성\n    return {\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      listData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n      search: ''\n    };\n  },\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\").then(res => {\n        this.list = res.data; //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\n        this.listData = res.data;\n        console.log(res.data);\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    fnView(index) {\n      if (index = this.list[index - 1][0]) {\n        this.$router.push({\n          path: './BoardDetail',\n          query: this.list[index - 1]\n        });\n      }\n    }\n  },\n  computed: {\n    startOffset() {\n      return (this.curPageNum - 1) * this.dataPerPage;\n    },\n    endOffset() {\n      return this.startOffset + this.dataPerPage;\n    },\n    numOfPages() {\n      return Math.ceil(this.searchdata.length / this.dataPerPage);\n    },\n    callist() {\n      this.searchData = this.listData.filter(data => {\n        return data.subject.toLowerCase().includes(this.search.toLowerCase());\n      }).slice(0);\n      return this.searchData.slice(this.startOffset, this.endOffset);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAM;AAGxB,eAAe;EACbC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAI,GAAG;IAAE;IACP,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MAAE;MACVC,EAAE,EAAE,EAAE;MAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,CAAC;MACbC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,GAAG;IACV,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACCC,OAAO,EAAE;IACLD,SAAS,GAAG;MACZV,KAAK,CAACY,GAAG,CAAC,+BAA+B,EACxCC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACX,IAAG,GAAIW,GAAG,CAACZ,IAAG,EAAG;QACtB,IAAI,CAACG,QAAO,GAAIS,GAAG,CAACZ,IAAG;QACvBa,OAAO,CAACC,GAAG,CAACF,GAAG,CAACZ,IAAI;MAGtB,CAAC,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;QAChB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CC,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACH,CAAC;IACDC,MAAM,CAACC,KAAK,EAAE;MACZ,IAAGA,KAAI,GAAI,IAAI,CAACpB,IAAI,CAACoB,KAAK,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;QACnC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UACnBC,IAAI,EAAE,eAAe;UACpBC,KAAK,EAAE,IAAI,CAACxB,IAAI,CAACoB,KAAK,GAAC,CAAC;QACxB,CAAC;MACH;IACA;EAEA,CAAC;EACDK,QAAQ,EAAC;IACPC,WAAW,GAAG;MACV,OAAQ,CAAC,IAAI,CAACtB,UAAS,GAAI,CAAC,IAAI,IAAI,CAACD,WAAW;IAClD,CAAC;IACDwB,SAAS,GAAG;MACV,OAAQ,IAAI,CAACD,WAAU,GAAI,IAAI,CAACvB,WAAW;IAC7C,CAAC;IACDyB,UAAU,GAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,CAACC,MAAK,GAAI,IAAI,CAAC7B,WAAW,CAAC;IAC7D,CAAC;IACD8B,OAAO,GAAG;MACR,IAAI,CAACC,UAAS,GAAI,IAAI,CAAChC,QAAQ,CAACiC,MAAM,CAAEpC,IAAI,IAAK;QAC/C,OAAOA,IAAI,CAACqC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACjC,MAAM,CAACgC,WAAW,EAAE;MACtE,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;MAEX,OAAO,IAAI,CAACL,UAAU,CAACK,KAAK,CAAC,IAAI,CAACb,WAAW,EAAE,IAAI,CAACC,SAAS;IAC/D;EACF;AACJ","names":["axios","components","data","list","no","listData","dataPerPage","curPageNum","search","mounted","fnGetList","methods","get","then","res","console","log","catch","err","message","indexOf","alert","fnView","index","$router","push","path","query","computed","startOffset","endOffset","numOfPages","Math","ceil","searchdata","length","callist","searchData","filter","subject","toLowerCase","includes","slice"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n    <v-flex sm6 offset-sm3>\n      <v-text-field label=\"Search Data...\"\n                    v-model=\"search\">\n      </v-text-field>\n  <div class=\"ui icon input\" style=\"width: 100%\">\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>  \n        <th>분류</th>\n        <th>제목</th>\n        <th>기안자</th>\n        <th>부서</th>\n        <th>기안일</th>\n        <th>기안번호</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in callist\" :key=\"idx\">\n          <td>{{ row[2] }}</td>\n          <td><a @click=\"fnView(row[0])\">{{ row[3] }}</a></td>\n          <td>{{ row[4] }}</td>\n          <td>{{ row[8] }}</td>\n          <td>{{ row[14] }}</td>\n          <td>{{ row[13] }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <v-pagination\n        v-model=\"curPageNum\"\n        :length=\"numOfPages\">\n      </v-pagination>\n  </div>\n</v-flex>\n</template>\n\n<script>\nimport axios from 'axios'\n\n\nexport default {\n  components: {\n  },\n  data() { //변수생성\n    return {\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      listData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n      search: '',\n    }\n  },\n  mounted() {\n  this.fnGetList()\n},\n  methods: {\n      fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\")\n      .then((res) => {      \n        this.list = res.data  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\n        this.listData = res.data\n        console.log(res.data)\n\n\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    },\n    fnView(index) {\n      if(index = this.list[index-1][0]){\n    this.$router.push({\n   path: './BoardDetail',\n    query: this.list[index-1]\n    })\n  }\n  },\n\n  },\n  computed:{\n    startOffset() {\n        return ((this.curPageNum - 1) * this.dataPerPage);\n      },\n      endOffset() {\n        return (this.startOffset + this.dataPerPage);\n      },\n      numOfPages() {\n        return Math.ceil(this.searchdata.length / this.dataPerPage);\n      },\n      callist() {\n        this.searchData = this.listData.filter((data) => {\n          return data.subject.toLowerCase().includes(this.search.toLowerCase())\n        }).slice(0);\n\n        return this.searchData.slice(this.startOffset, this.endOffset)\n      }\n    },\n}\n</script>\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}