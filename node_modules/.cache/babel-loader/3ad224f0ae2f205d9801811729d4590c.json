{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ui icon input\",\n  style: {\n    \"width\": \"100%\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  placeholder: \"Search...\"\n}), /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"search icon\"\n})], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"w3-table-all\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"분류\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안자\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"부서\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안일\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"기안번호\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card ui fluid\",\n      key: product.id,\n      style: {\n        \"margin\": \"0\"\n      }\n    }, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.callist, (row, idx) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: idx\n      }, [_createElementVNode(\"td\", null, _toDisplayString(row[2]), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n        onClick: $event => $options.fnView(row[0])\n      }, _toDisplayString(row[3]), 9 /* TEXT, PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, _toDisplayString(row[4]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[8]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[14]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[13]), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_v_pagination, {\n      modelValue: $data.curPageNum,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.curPageNum = $event),\n      length: $options.numOfPages\n    }, null, 8 /* PROPS */, [\"modelValue\", \"length\"])]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAGM;EAHDC,KAAK,EAAC,eAAe;EAACC,KAAmB,EAAnB;IAAA;EAAA;iBACzBF,oBAA6C;EAAtCG,IAAI,EAAC,MAAM;EAACC,WAAW,EAAC;iBAC/BJ,oBAA2B;EAAxBC,KAAK,EAAC;AAAa;;EAQfA,KAAK,EAAC;AAAc;gCACzBD,oBASQ,6BARRA,oBAOK,0BANHA,oBAAW,YAAP,IAAE,gBACNA,oBAAW,YAAP,IAAE,gBACNA,oBAAY,YAAR,KAAG,gBACPA,oBAAW,YAAP,IAAE,gBACNA,oBAAY,YAAR,KAAG,gBACPA,oBAAa,YAAT,MAAI;;;;6DAlBdK,UAGM,qBACNC,oBAgCMC,6BA9BgBC,aAAQ,EAAnBC,OAAO;yBAFlBH,oBAgCM;MA/BFL,KAAK,EAAC,eAAe;MAEpBS,GAAG,EAAED,OAAO,CAACE,EAAE;MAChBT,KAAiB,EAAjB;QAAA;MAAA;QAEFF,oBAqBQ,SArBRY,UAqBQ,GApBNC,UASQ,EACRb,oBASQ,mCARRM,oBAOOC,6BAPkBO,gBAAO,GAApBC,GAAG,EAAEC,GAAG;2BAApBV,oBAOO;QAP4BI,GAAG,EAAEM;MAAG,IACvChB,oBAAqB,6BAAde,GAAG,qBACVf,oBAAoD,aAAhDA,oBAA2C;QAAvCiB,OAAK,YAAEH,eAAM,CAACC,GAAG;0BAASA,GAAG,0CACrCf,oBAAqB,6BAAde,GAAG,qBACVf,oBAAqB,6BAAde,GAAG,qBACVf,oBAAsB,6BAAfe,GAAG,sBACVf,oBAAsB,6BAAfe,GAAG;wCAIhBG,aAGiBC;kBAFJC,gBAAU;iEAAVA,gBAAU;MAClBC,MAAM,EAAEP","names":["_createElementVNode","class","style","type","placeholder","_hoisted_1","_createElementBlock","_Fragment","_ctx","product","key","id","_hoisted_2","_hoisted_3","$options","row","idx","onClick","_createVNode","_component_v_pagination","$data","length"],"sourceRoot":"","sources":["/lab/src/components/BoardList.vue"],"sourcesContent":["<template>\n  <div class=\"ui icon input\" style=\"width: 100%\">\n    <input type=\"text\" placeholder=\"Search...\" />\n    <i class=\"search icon\"></i>\n  </div>\n  <div\n      class=\"card ui fluid\"\n      v-for=\"product in products\"\n      :key=\"product.id\"\n      style=\"margin: 0\"\n    >\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>  \n        <th>분류</th>\n        <th>제목</th>\n        <th>기안자</th>\n        <th>부서</th>\n        <th>기안일</th>\n        <th>기안번호</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in callist\" :key=\"idx\">\n          <td>{{ row[2] }}</td>\n          <td><a @click=\"fnView(row[0])\">{{ row[3] }}</a></td>\n          <td>{{ row[4] }}</td>\n          <td>{{ row[8] }}</td>\n          <td>{{ row[14] }}</td>\n          <td>{{ row[13] }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <v-pagination\n        v-model=\"curPageNum\"\n        :length=\"numOfPages\">\n      </v-pagination>\n  </div>\n  \n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  components: {\n  },\n  data() { //변수생성\n    return {\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      listData: [],\n      dataPerPage: 10,\n      curPageNum: 1,\n    }\n  },\n  mounted() {\n  this.fnGetList()\n},\n  methods: {\n      fnGetList() {\n      axios.get(\"http://10.1.30.202:5000/board\")\n      .then((res) => {      \n        this.list = res.data  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\n        this.listData = res.data\n        console.log(res.data)\n\n\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    },\n    fnView(index) {\n      if(index = this.list[index-1][0]){\n    this.$router.push({\n   path: './BoardDetail',\n    query: this.list[index-1]\n    })\n  }\n  },\n\n  },\n  computed:{\n    startOffset() {\n        return ((this.curPageNum - 1) * this.dataPerPage);\n      },\n      endOffset() {\n        return (this.startOffset + this.dataPerPage);\n      },\n      numOfPages() {\n        return Math.ceil(this.listData.length / this.dataPerPage);\n      },\n      callist() {\n        return this.listData.slice(this.startOffset, this.endOffset)\n      }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}