{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VuePDF = _resolveComponent(\"VuePDF\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_VuePDF, {\n    pdf: $setup.pdf,\n    page: 1\n  }, null, 8 /* PROPS */, [\"pdf\"])]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAEQ,cADNC,aAA+BC;IAAtBC,GAAG,EAAEC,UAAG;IAAGC,IAAI,EAAE","names":["_createElementBlock","_createVNode","_component_VuePDF","pdf","$setup","page"],"sourceRoot":"","sources":["/lab/src/components/vuepdf.vue"],"sourcesContent":["<template>\n  <div>\n    <VuePDF :pdf=\"pdf\" :page=\"1\" />\n    </div>\n  </template>\n\n  <script>\nimport {usePDF, VuePDF} from 'VuePDF'\nexport default {\n  components: {\n    VuePDF\n  },\n  setup(){\n    const { pdf, pages, info } = usePDF(\"/lab/backend/files/12311:25:30.pdf\")\n    console.log(`Document has ${pages} pages`)\n    console.log(`Document info: ${info}`)\n    return {\n      pdf\n    }\n  }\n}\n\n</script>"]},"metadata":{},"sourceType":"module"}