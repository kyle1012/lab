{"ast":null,"code":"import { toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dashboard = _resolveComponent(\"dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.httpbody) + \" \", 1 /* TEXT */), _createVNode(_component_dashboard, {\n    ref: \"dash\",\n    uppy: _ctx.uppy\n  }, null, 8 /* PROPS */, [\"uppy\"])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,oBAOM,OAPNC,UAOM,qCANFC,aAAQ,IAAE,GACZ,8BAIEC;IAHAC,GAAG,EAAC,MAAM;IACTC,IAAI,EAAEH","names":["id","_createElementBlock","_hoisted_1","_ctx","_component_dashboard","ref","uppy"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    {{httpbody}}\n    <dashboard\n      ref=\"dash\"\n      :uppy=\"uppy\"\n      \n    />\n  </div>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nconst uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" }\n  ],\n});\n\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\n\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpbody = response.body\n})\nexport default {\n  name: \"Hello\",\n  components: {\n    Dashboard,\n  },\n  data: () => {\n    return {\n      uppy,\n    };\n  },\n  computed: {\n    // uppy: () =>\n    //   new Uppy().use(XHRUpload, {\n    //     endpoint: \"http://localhost:3000/files\",\n    //     fieldName: \"file\",\n    //   }),\n  },\n  beforeUnmount() {\n    this.uppy.close();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}