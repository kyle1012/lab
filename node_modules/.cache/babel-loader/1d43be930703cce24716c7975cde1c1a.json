{"ast":null,"code":"import { Dashboard } from \"@uppy/vue\";\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nexport default {\n  data() {\n    return {};\n  },\n  computed: {},\n  mounted() {\n    const uppy = new Uppy({\n      metaFields: [{\n        id: \"name\",\n        name: \"Name\",\n        placeholder: \"file name\"\n      }, {\n        id: \"caption\",\n        name: \"Caption\",\n        placeholder: \"describe what the image is about\"\n      }]\n    });\n    uppy.use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false\n    });\n    uppy.on('upload-success', (file, response) => {\n      console.log(file.name, response);\n      const httpBody = response.body;\n    });\n    uppy.run();\n  },\n  methods: {}\n};","map":{"version":3,"mappings":"AAoBA,SAASA,SAAQ,QAAS,WAAW;AAErC,OAAO,2BAA2B;AAClC,OAAO,gCAAgC;AACvC,OAAO,6BAA6B;AACpC,OAAO,mCAAmC;AAE1C,OAAOC,IAAG,MAAO,YAAY;AAC7B,OAAOC,SAAQ,MAAO,kBAAkB;AAExC,eAAe;EACPC,IAAI,GAAG;IACH,OAAO,CAAC;EACZ,CAAC;EAEDC,QAAQ,EAAE,CACV,CAAC;EAEDC,OAAO,GAAG;IACR,MAAMC,IAAG,GAAI,IAAIL,IAAI,CAAC;MAC9BM,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,MAAM;QAAEC,IAAI,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAY,CAAC,EACtD;QACEF,EAAE,EAAE,SAAS;QACbC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;IACFJ,IAAI,CAACK,GAAG,CAACT,SAAS,EAAE;MAClBU,QAAQ,EAAE,gCAAgC;MAC1CC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,IAAI;MACRC,WAAW,EAAE;IACb,EAEL;IACDT,IAAI,CAACU,EAAE,CAAC,gBAAgB,EAAE,CAACC,IAAI,EAAEC,QAAQ,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACR,IAAI,EAAES,QAAQ;MAC/B,MAAMG,QAAO,GAAIH,QAAQ,CAACI,IAAG;IAC/B,CAAC;IAEDhB,IAAI,CAACiB,GAAG,EAAE;EACF,CAAC;EAEDC,OAAO,EAAE,CAAC;AACd","names":["Dashboard","Uppy","XHRUpload","data","computed","mounted","uppy","metaFields","id","name","placeholder","use","endpoint","fieldName","bundle","autoProceed","on","file","response","console","log","httpBody","body","run","methods"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <dashboard\n      :uppy=\"uppy\"\n    />\n      <p>IP주소 : <input type=\"text\" class=\"form-control\" placeholder=\"IP주소 입력.\" /></p>\n      <p>담당자 : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>유선MAC : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>무선MAC : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>구분 : <input type=\"text\" class=\"form-control\" placeholder=\"임직원\" /></p>\n      <p>부서 : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>ID : <input type=\"text\" class=\"form-control\" placeholder=\"할일을 입력해주세요.\" /></p>\n      <p>용도 : <input type=\"text\" class=\"form-control\" placeholder=\"작성필요\" /></p>\n      <p>단말기 : <input type=\"text\" class=\"form-control\" placeholder=\"노트북\" /></p>\n      <p>이력 : <input type=\"text\" class=\"form-control\" placeholder=\"작성필요\" /></p>\n      <p>비고 : {{user}}<input type=\"text\" class=\"form-control\" placeholder=\"기안문서 번호\" /></p>\n  </div>\n</template>\n\n<script>\nimport { Dashboard } from \"@uppy/vue\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\nimport \"@uppy/webcam/dist/style.css\";\nimport \"@uppy/image-editor/dist/style.css\";\n\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\n\nexport default {\n        data() {\n            return {}\n        },\n\n        computed: {\n        },\n\n        mounted() {\n          const uppy = new Uppy({\n  metaFields: [\n    { id: \"name\", name: \"Name\", placeholder: \"file name\" },\n    {\n      id: \"caption\",\n      name: \"Caption\",\n      placeholder: \"describe what the image is about\",\n    },\n  ],\n});\nuppy.use(XHRUpload, {\n  endpoint: \"http://10.1.30.202:5000/upload\",\n  fieldName: \"file\",\n  bundle: true,\n      autoProceed: false,\n      }\n      \n);\nuppy.on('upload-success', (file, response) => {\n  console.log(file.name, response)\n  const httpBody = response.body\n})\n\nuppy.run();\n        },\n\n        methods: {}\n    }\n</script>\n"]},"metadata":{},"sourceType":"module"}