{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bcaaf776\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"board-detail\"\n};\nconst _hoisted_2 = {\n  class: \"board-contents\"\n};\nconst _hoisted_3 = {\n  class: \"w3-large\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"w3-large\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"box1\"\n};\nconst _hoisted_8 = {\n  class: \"box2\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"board-contents\"\n};\nconst _hoisted_11 = {\n  \"font-weight:\": \"\",\n  bold: \"\"\n};\nconst _hoisted_12 = {\n  class: \"board-contents\"\n};\nconst _hoisted_13 = {\n  class: \"board-contents\"\n};\nconst _hoisted_14 = {\n  class: \"board-contents\",\n  style: {\n    \"white-space\": \"pre-wrap\"\n  }\n};\nconst _hoisted_15 = {\n  class: \"board-contents\",\n  style: {\n    \"white-space\": \"pre-wrap\"\n  }\n};\nconst _hoisted_16 = {\n  class: \"board-contents\"\n};\nconst _hoisted_17 = {\n  class: \"common-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"[\" + _toDisplayString(_ctx.$route.query[3]) + \"] \" + _toDisplayString(_ctx.$route.query[1]), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"strong\", _hoisted_3, _toDisplayString(_ctx.$route.query[9]), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"strong\", _hoisted_5, _toDisplayString(_ctx.$route.query[5]), 1 /* TEXT */), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.$route.query[23]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, \"작성자 : \" + _toDisplayString(_ctx.$route.query[21]), 1 /* TEXT */)]), _hoisted_9]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, \"VPN계정 : \" + _toDisplayString(_ctx.$route.query[24]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", null, \"기안일 : \" + _toDisplayString(_ctx.$route.query[20]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", null, \"기간 : \" + _toDisplayString(_ctx.$route.query[17]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_14, [_createTextVNode(\" 접근대상 IP/Port\"), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$route.query[2]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_createTextVNode(\" 요청사유\"), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$route.query[15]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, \"기안번호 : \" + _toDisplayString(_ctx.$route.query[19]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue-gray\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fnUpdate && $options.fnUpdate(...args))\n  }, \"수정\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-gray\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fnList && $options.fnList(...args))\n  }, \"목록\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.download && $options.download(...args))\n  }, \"다운로드\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-red\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.Dbdelete && $options.Dbdelete(...args))\n  }, \"삭제\")])]), _createVNode(_component_Footer)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAEWA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;;EAGfA,KAAK,EAAC;AAAU;gEACxBC,oBAAI;;EACID,KAAK,EAAC;AAAU;gEACxBC,oBAAI;;EACCD,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAM;gEAEnBC,oBAAI;;EAEDD,KAAK,EAAC;AAAgB;;EACnB,cAAY,EAAZ,EAAY;EAACE,IAAI,EAAJ;;;EAEhBF,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC,gBAAgB;EAACG,KAA4B,EAA5B;IAAA;EAAA;;;EAGzBH,KAAK,EAAC,gBAAgB;EAACG,KAA4B,EAA5B;IAAA;EAAA;;;EAGrBH,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;;;6DAhC/BI,aAAiBC,oBACfJ,oBAqCM,OArCNK,UAqCM,GApCJL,oBAWM,OAXNM,UAWM,GAVJN,oBAAqD,YAAjD,GAAC,oBAAEO,WAAM,CAACC,KAAK,OAAK,IAAG,oBAAGD,WAAM,CAACC,KAAK,qBAC1CR,oBAOM,cANJA,oBAAuD,UAAvDS,UAAuD,mBAA3BF,WAAM,CAACC,KAAK,qBACxCE,UAAI,EACJV,oBAAuD,UAAvDW,UAAuD,mBAA3BJ,WAAM,CAACC,KAAK,qBACxCI,UAAI,EACJZ,oBAA8C,OAA9Ca,UAA8C,mBAAzBN,WAAM,CAACC,KAAK,sBACjCR,oBAAoD,OAApDc,UAAoD,EAAlC,QAAM,oBAAGP,WAAM,CAACC,KAAK,wBAEzCO,UAAI,IAENf,oBAEM,OAFNgB,WAEM,GADJhB,oBAA6D,QAA7DiB,WAA6D,EAArC,UAAQ,oBAAGV,WAAM,CAACC,KAAK,wBAEjDR,oBAEM,OAFNkB,WAEM,GADJlB,oBAAyC,cAAnC,QAAM,oBAAGO,WAAM,CAACC,KAAK,wBAE7BR,oBAEM,OAFNmB,WAEM,GADJnB,oBAAwC,cAAlC,OAAK,oBAAGO,WAAM,CAACC,KAAK,wBAE5BR,oBAEI,OAFJoB,WAEI,oBAFqD,eAC5C,uBAA4B,4BAAtBb,WAAM,CAACC,KAAK,uBAEjCR,oBAEM,OAFNqB,WAEM,oBAFmD,OAClD,uBAA6B,4BAAvBd,WAAM,CAACC,KAAK,wBAEvBR,oBAEM,OAFNsB,WAEM,GADJtB,oBAA0C,cAApC,SAAO,oBAAGO,WAAM,CAACC,KAAK,wBAE9BR,oBAKM,OALNuB,WAKM,GAJJvB,oBAA+F;IAAvFwB,IAAI,EAAC,QAAQ;IAACzB,KAAK,EAAC,iCAAiC;IAAM0B,OAAK,yCAAEC,+CAAQ;KAAE,IAAE,oBAAS,IAC/F,uBAAwF;IAAhFF,IAAI,EAAC,QAAQ;IAACzB,KAAK,EAAC,4BAA4B;IAAM0B,OAAK,yCAAEC,2CAAM;KAAE,IAAE,oBAAS,IACxF,uBAA4F;IAApFF,IAAI,EAAC,QAAQ;IAACzB,KAAK,EAAC,4BAA4B;IAAM0B,OAAK,yCAAEC,+CAAQ;KAAE,MAAI,oBAAS,IAC5F,uBAAyF;IAAjFF,IAAI,EAAC,QAAQ;IAACzB,KAAK,EAAC,2BAA2B;IAAM0B,OAAK,yCAAEC,+CAAQ;KAAE,IAAE,OAGpFvB,aAAiBwB","names":["class","_createElementVNode","bold","style","_createVNode","_component_Header","_hoisted_1","_hoisted_2","_ctx","query","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","type","onClick","$options","_component_Footer"],"sourceRoot":"","sources":["/lab/src/components/BoardDetail_account.vue"],"sourcesContent":["<template>\n    <Header></Header>\n      <div class=\"board-detail\">\n        <div class=\"board-contents\">\n          <h3>[{{$route.query[3]}}]  {{ $route.query[1] }}</h3>\n          <div>\n            <strong class=\"w3-large\">{{ $route.query[9] }}</strong>\n            <br>\n            <strong class=\"w3-large\">{{ $route.query[5] }}</strong>\n            <br>\n            <div class=\"box1\">{{ $route.query[23] }}</div>\n            <div class=\"box2\">작성자 : {{ $route.query[21] }}</div>\n          </div>\n          <br>\n        </div>\n        <div class=\"board-contents\">\n          <span font-weight: bold>VPN계정 : {{ $route.query[24] }}</span>\n        </div>\n        <div class=\"board-contents\">\n          <span>기안일 : {{ $route.query[20] }}</span>\n        </div>\n        <div class=\"board-contents\">\n          <span>기간 : {{ $route.query[17] }}</span>\n        </div>\n        <div class=\"board-contents\" style=\"white-space:pre-wrap\">\n         접근대상 IP/Port<p>{{ $route.query[2] }}</p>\n      </div>\n      <div class=\"board-contents\" style=\"white-space:pre-wrap\">\n         요청사유<p>{{ $route.query[15] }}</p>\n      </div>\n        <div class=\"board-contents\">\n          <span>기안번호 : {{ $route.query[19] }}</span>\n        </div>\n        <div class=\"common-buttons\">\n          <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnUpdate\">수정</button>&nbsp;\n          <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>&nbsp;\n          <button type=\"button\" class=\"w3-button w3-round w3-blue\" v-on:click=\"download\">다운로드</button>&nbsp;\n          <button type=\"button\" class=\"w3-button w3-round w3-red\" v-on:click=\"Dbdelete\">삭제</button>\n        </div>\n      </div>\n      <Footer></Footer>\n    </template>\n    \n    <script>\n   import HelloWorldVue from \"./HelloWorld.vue\";\n   import BoardList from \"./BoardList\"\n   import axios from 'axios';\n   import Header from \"./layout/Header\";\n   import Footer from \"./layout/Footer\";\n  \n    export default {\n      components: {\n       HelloWorldVue,\n       BoardList,\n       Header,\n       Footer,\n     },\n      data() { //변수생성\n        return {\n        }\n      },\n      mounted() {\n      },\n      methods: {\n        download(){\n        const url = 'http://10.1.30.202:5000/download';\n        const data2 = JSON.stringify({\n           id : this.$route.query[0]\n        })\n        axios.post(url, data2,  {\n          headers: {\n              \"Content-Type\": `application/json`,\n            },\n            responseType: 'blob',\n        })\n        .then(function(response) {\n          var fileURL = window.URL.createObjectURL(new Blob([response.data]));\n                       var fileLink = document.createElement('a');\n     \n                       fileLink.href = fileURL;\n                       fileLink.setAttribute('download', 'download_pdf.pdf');\n                       document.body.appendChild(fileLink);\n     \n                       fileLink.click();\n                  })\n          .catch(function(error) {\n            console.log(error);\n            alert(\"실패\")\n          });\n        },\n        fnList() {\n          this.$router.push('home')\n        },\n        fnUpdate() {\n          this.$router.push({\n            path: './BoardUpdate_account',\n            query: this.$route.query\n          })\n        },\n        Dbdelete(){\n        let self = this\n        const url = 'http://10.1.30.202:5000/delete';\n      const data3 = JSON.stringify({\n\t     id : this.$route.query[0]\n\t  })\n    axios.post(url, data3, {\n        headers: {\n            \"Content-Type\": `application/json`,\n          },\n      })\n      .then(function(response) {\n          console.log(response)\n          alert(response.data)\n          self.$router.push('home')\n        })\n        .catch(function(error) {\n          console.log(error);\n          alert(error.response.data)\n        });\n      },\n      }\n    }\n    </script>\n    <style scoped>\n   .box1 {\n    float:left; }\n   .box2 {\n    float:right;} \n    p{\n    border-style: inset;\n }\n    </style>"]},"metadata":{},"sourceType":"module"}