{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"Uppy\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\",\n  name: \"file\"\n})], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"uplaod\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = (...args) => _ctx.submitForm && _ctx.submitForm(...args))\n  }, [_createCommentVNode(\" 메서드 생성 \"), _hoisted_1, _hoisted_2, _createTextVNode(\" \" + _toDisplayString(_ctx.fileData), 1 /* TEXT */)], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";gCAEIA,oBAEM;EAFDC,KAAK,EAAC;AAAM,iBACfD,oBAA+B;EAAxBE,IAAI,EAAC,MAAM;EAACC,IAAI,EAAC;;gCAE1BH,oBAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAJ9BE,oBAMO;IANIC,QAAM,yCAAEC,2CAAU;MAAGC,+BAAe,EAC7CC,UAEM,EACNC,UAAqC,sBACrC,oBAAEH,aAAQ","names":["_createElementVNode","class","type","name","_createElementBlock","onSubmit","_ctx","_createCommentVNode","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["/lab/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <form v-on:submit=\"submitForm\"> <!-- 메서드 생성 -->\n    <div class=\"Uppy\">\n      <input type=\"file\" name=\"file\">\n    </div>\n    <button type=\"submit\">uplaod</button>\n    {{fileData}}\n  </form>\n</template>\n<script>\nimport \"@uppy/core/dist/style.css\";\nimport Uppy from \"@uppy/core\";\nimport XHRUpload from \"@uppy/xhr-upload\";\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/dashboard/dist/style.css\";\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data: () => {\n    return {\n      fileData: null,\n    };\n  },\n  computed: {\n    uppy: () => new Uppy()\n    .use(XHRUpload, {\n      endpoint: \"http://10.1.30.202:5000/upload\",\n      fieldName: \"file\",\n      bundle: true,\n      autoProceed: false,\n      })\n\n    .on('upload-success', (file, response) => {\n    console.log(file.name, response)\n    const httpbody = response.body\n    this.fileData = JSON.stringify(httpbody)\n})\n  },\n  beforeDestroy () {\n    this.uppy.close({ reason: 'unmount' })\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}